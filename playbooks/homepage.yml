---
- hosts: all
  become: True
  gather_subset:
    - hardware
    - network
  vars:
    homepage_directory: "/usr/share/nginx/html"
    path:
      - "{{ lookup('env','HOME') }}/.local/bin"
    homepage:
      group:
        intranet:
          - name: hookerbot
            url: "http://hookerbot"
          - name: visiblemagic
            url: "http://192.168.41.50"
          - name: linkding
            url: "http://bender.syncopated.net:9090/bookmarks"
          - name: pihole
            url: "http://pihole/admin"
          - name: pkgrepo
            url: "http://bender.syncopated.net"
          - name: plex
            url: "http://ninjabot.syncopated.net:32400/web"
          - name: qbittorrent
            url: "http://bender.syncopated.net:8080"
        intranetLLM:
          - name: Dify
            url: "http://ninjabot.syncopated.net/apps"
          - name: Flowise
            url: "http://ninjabot.syncopated.net:3002"
          - name: SillyTavern
            url: "http://ninjabot.syncopated.net:8000"
          - name: Big-AGI
            url: "http://localhost:3001"
          - name: Langfuse
            url: "http://ninjabot.syncopated.net:3000"
          - name: Agenta
            url: "http://soundbot/apps"
          - name: Redis
            url: "http://ninjabot.syncopated.net:8001"
        webtools:
          - name: gmail
            url: "https://gmail.google.com"
          - name: github
            url: "https://github.com"
          - name: gitlab
            url: "https://gitlab.com/b08x"
          - name: youtube
            url: "https://www.youtube.com/"
          - name: reddit
            url: "https://www.reddit.com/"
          - name: google search console
            url: "https://search.google.com/search-console?resource_id=https%3A%2F%2Fb08x.github.io%2F"
        webtoolsmisc:
          - name: Huggingface
            url: "https://huggingface.co/"
          - name: LLaVA
            url: "https://llava.hliu.cc/"
          - name: llama-parse
            url: "https://cloud.llamaindex.ai/"
          - name: colors-between
            url: "https://hexcolor.co/colors-between"
          - name: d2 playground
            url: "https://play.d2lang.com/?script=qlDQtVOo5AIEAAD__w%3D%3D&"
        webtoolsLLM:
          - name: Anthropic Console
            url: "https://console.anthropic.com/"
          - name: Google AI Studio
            url: "https://makersuite.google.com/app/prompts/new_freeform"
          - name: Cohere Dashboard
            url: "https://dashboard.cohere.com/welcome/login?redirect_uri=%2F"
          - name: Deepgram Console
            url: "https://playground.deepgram.com/?endpoint=listen&smart_format=true&language=en&model=nova-2"
          - name: LLMStack
            url: "https://trypromptly.com/"
          - name: PromptPerfect
            url: "https://promptperfect.jina.ai/interactive"
          - name: PicoVoice
            url: "https://console.picovoice.ai/"
        webtoolsLLMchat:
          - name: Gemini
            url: "https://gemini.google.com/chat"
          - name: Claude
            url: "https://claude.ai/chats"
          - name: Perplexity
            url: "https://www.perplexity.ai/"
          - name: Elevenlabs
            url: "https://elevenlabs.io/app/speech-synthesis"
          - name: Suno
            url: "https://app.suno.ai/create/"
          - name: chatGPT
            url: "https://chat.openai.com/"
          - name: LLM Arena
            url: "https://chat.lmsys.org/"
          - name: Pi AI
            url: "https://pi.ai/threads"

  environment:
    PATH: "{{ ansible_env.PATH }}:/sbin:/bin:{{ path|join(':') }}"
    PKG_CONFIG_PATH: "/usr/share/pkgconfig:/usr/lib/pkgconfig:/usr/local/lib/pkgconfig"

  pre_tasks:
    - name: Set datetime
      set_fact:
        datetime: ansible_date_time.epoch
      tags: ["always"]

    - name: Set suffix
      set_fact:
        suffix: ".{{ ansible_date_time.epoch }}.{{ ansible_date_time.date }}@{{ ansible_date_time.time }}~"
      tags: ["always"]

    # - name: Create homepage folder
    #   file:
    #     path: /usr/share/nginx/
    #     state: directory
    #     owner: root
    #     group: "{{ user.group }}"
    #     mode: '2775'
    #     recurse: True
    #
    # - name: Copy static files
    #   copy:
    #     src: ../files/homepage
    #     dest: /usr/share/nginx/html/
    #     owner: root
    #     group: "{{ user.group }}"
    #     backup: False
    #     # directory_mode:

    - name: Set index.html template
      template:
        src: ../templates/homepage/index.html.j2
        dest: /usr/share/nginx/html/homepage/index.html
        owner: root
        group: "{{ user.group }}"
        mode: "0664"
        backup: False

  post_tasks:
    - name: Cleanup old backup files
      script: "cleanup.sh"
      when: cleanup is defined
      tags: ["cleanup"]
