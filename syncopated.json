{
  "files": [
    {
      "filename": "nas.yml",
      "content": null,
      "path": "/group_vars/server/"
    },
    {
      "filename": "webhost.yml",
      "content": "---\n\nwebhost:\n  nginx_installation_type: \"source\"\n  nginx_module_fancy_index: False\n  nginx_create_blank_index: True\n  webroot: /usr/share/nginx/html\n\n  nginx_sites:\n    00_default:\n      - listen 80 default_server\n      - server_name _\n      - root \"/usr/share/nginx/html\"\n      - index index.html\n      - autoindex on\n",
      "path": "/group_vars/server/"
    },
    {
      "filename": "terminal.yml",
      "content": "---\n\nterminal: \"xterm-256color\"\nterminal_alt: \"xterm-256color\"\n",
      "path": "/group_vars/server/"
    },
    {
      "filename": "daw.yml",
      "content": "---\n\nexpected_value: \"groupvars_workstation_daw\"\n\nbrowser: \"google-chrome-stable\"\n\naudio: \"jack\"\n\njacktrip:\n  server:\n    args: \"\"\n  client:\n    args: \"\"\n# reaper:\n# vamp:\n# mixxx:\n# annotator:\n# soniclineup:\n# touchosc:\n# tony:\n",
      "path": "/group_vars/workstation/"
    },
    {
      "filename": "dev.yml",
      "content": "---\n\nexpected_value: \"groupvars_workstation_dev\"\n\nchaoticrepo: True\n\ninstall_vscode: True\ninstall_pulsar: True\n\nbrowser: \"google-chrome-stable\"\n\n\n# simply just defining the variable will install the thing\n# it will call the task list\n# if desired more variables can defined within the tasks\n# f.e:\n# vscode:\n#   packages:\n#     example_package: 1.0\n",
      "path": "/group_vars/workstation/"
    },
    {
      "filename": "terminal.yml",
      "content": "---\n\nterminal: \"terminator\"\nterminal_alt: \"terminator\"\n",
      "path": "/group_vars/workstation/"
    },
    {
      "filename": "de.yml",
      "content": "---\n\nde:\ndisplay_manager:\nwindow_manager: i3\n\ni3:\n  home: \"{{ lookup('env','HOME') }}/.config/i3\"\n  autostart: 'default'\n  assignments: 'default'\n  workspaces: 'default'\n  keybindings: 'default'\n  tray_output: 'primary'\n",
      "path": "/group_vars/workstation/"
    },
    {
      "filename": "homepage.yml",
      "content": "---\n\nhomepage_directory: \"{{ lookup('env','HOME') }}/.local/share/html/homepage\"\n",
      "path": "/group_vars/all/"
    },
    {
      "filename": "user.yml",
      "content": "---\n\nuser:\n  name: b08x\n  group: b08x\n  uid: 1000\n  gid: 1000\n  home: /home/b08x\n  shell: /usr/bin/zsh\n  secondary_groups: \"input,video,audio\"\n  realname: Robert Pannick\n  sudoers: True\n  workspace: /home/b08x/Workspace\n  email: rwpannick@gmail.com\n  gpg: 36A6ECD355DB42B296C0CEE2157CA2FC56ECC96A\n  dots: git@github.com:b08x/dots.git\n\nkeyserver: bender.syncopated.net\n",
      "path": "/group_vars/all/"
    },
    {
      "filename": "environment.yml",
      "content": "---\n\nenv:\n  vars:\n    storage: \"/mnt/ninjabot/storage\"\n    workspace: \"{{ lookup('env','HOME') }}/Workspace\"\n    asset_folder: \"{{ lookup('env','HOME') }}/Library\"\n",
      "path": "/group_vars/all/"
    },
    {
      "filename": "theme.yml",
      "content": "---\n\ngtk:\n  theme:\n    name: oomox-soundbot\n    icons: oomox-soundbot\n    cursor: ArchLabs-Dark\nkvantum: KvGnomeDark\nqtstyle: Fusion\n\nbackgrounds: /usr/share/backgrounds/syncopated\n\nfont:\n  primary:\n    name: Hack Nerd Font\n    size: 12\n    hintstyle: hintsfull\n  glyphs:\n    name: Font Awesome 6 Free Regular\n  mono:\n    name: Hack Nerd Font Mono\n",
      "path": "/group_vars/all/"
    },
    {
      "filename": "virt.yml",
      "content": "---\n\nuse_docker: True\nuse_libvirt: False\n\ndocker:\n  storage: /var/lib/docker\n",
      "path": "/group_vars/all/"
    },
    {
      "filename": "tuned.yml",
      "content": "---\n\ntuned:\n  profile: powersave\n",
      "path": "/group_vars/all/"
    },
    {
      "filename": "autofs.yml",
      "content": "---\n\nautofs_client:\n  host: bender\n  shares:\n    - backup\n    - storage\n",
      "path": "/group_vars/all/"
    },
    {
      "filename": "network.yml",
      "content": "---\n\nlan:\n  domain: syncopated.net\n  gateway: 192.168.41.1\n  nameserver01: 192.168.41.41\n  nameserver02: 192.168.41.1\n  dns:\n    search: syncopated.net\n  wireless:\n    ssid: invisiblemagic\n\n# etc_hosts:\n#   - ip: 192.168.36.3\n#     host: tinybot\n#   - ip: 192.168.36.9\n#     host: soundbot\n#   - ip: 192.168.36.21\n#     host: ninjabot\n#   - ip: 192.168.36.23\n#     host: isabella\n#   - ip: 192.168.36.25\n#     host: lapbot\n#   - ip: 192.168.36.37\n#     host: bender\n#   - ip: 192.168.41.7\n#     host: flowbot\n",
      "path": "/group_vars/all/"
    },
    {
      "filename": "colors.yml",
      "content": "---\n\ncolors:\n  syntax:\n    ScrollBar: \"#8A1F14\"\n    Foreground: \"#2177a7\"\n    Background: \"#09090d\"\n    HighlightedForeground: \"#3B2352\"\n    HighlightedBackground: \"#3B2352\"\n    WindowBackground: \"#09090d\"\n    ErrorBackground: \"#636363\"\n    DefaultBackground: \"#09090d\"\n    NumberForeground: \"#69e62e\"\n    FunctionMethodNameForeground: \"#df2828\"\n    KeywordForeground: \"#e08f23\"\n    SymbolForeground: \"#a143af\"\n    ModuleNameForeground: \"#0fa4c4\"\n    InstanceVariableForeground : \"#d51b7f\"\n    ClassVariableForeground: \"#859900\"\n    DoubleQuotedStringForeground: \"#ba2290\"\n    SingleQuotedStringForeground: \"#22acba\"\n    RegexForeground: \"#e8448e\"\n    SelectionForeground: \"#292828\"\n    SelectionBackground: \"#b1701e\"\n    MatchedBraceForeground: \"#91a707\"\n    MatchedBraceBackground: \"#3a1f4a\"\n    BraceForeground: \"\"\n    Scope: \"#C4580F\"\n    LogInfoForeground: \"#585858\"\n    LogInfoBackground: \"#0a0a0a\"\n    LogBackground: \"#0a0a0a\"\n    CuePathForeground: \"#585858\"\n    CuePathBackground: \"#0a0a0a\"\n  css:\n    background: '#0D0D0D'\n    foreground: '#a29e9e'\n    strong: '#c7d524'\n    emphasis: '#108E1A'\n    mark:\n      foreground: '#010101'\n      background: '#811d47'\n    strike: '#282828'\n    pre: '#d14242'\n    link: '#066592'\n    tag: '#838d6e'\n    h1: '#108E1A'\n    h2: '#bbaf05'\n    h3: '#14a8f0'\n    h4: '#b8b8b8'\n    h5: '#e9f10a'\n    sub: '#d28215'\n    sup: '#1D7981'\n  primary:\n    background: '#000000'\n    foreground: '#838d6e'\n    cursor: '#a38e1d'\n    status: '#794794'\n    separator: '#282828'\n  normal:\n    black:   '#000000'\n    red:     '#E32C2C'\n    green:   '#4E9A06'\n    yellow:  '#468A35'\n    blue:    '#C92CA8'\n    magenta: '#96363C'\n    cyan:    '#06989A'\n    white:   '#77767B'\n  bright:\n    black:   '#1C71D8'\n    red:     '#EF2929'\n    green:   '#8AE234'\n    yellow:  '#FCE94F'\n    blue:    '#729FCF'\n    magenta: '#865E3C'\n    cyan:    '#34E2E2'\n    white:   '#1C8B1C'\n  selection:\n    foreground: '#292828'\n    background: '#b1701e'\n  workspace:\n    background: '#005F89'\n    border: '#005F89'\n    text: '#ebdbb2'\n  focused:\n    border: '#33eb1c'\n    background: '#000000'\n    text: '#ebdbb2'\n    indicator: '#33eb1c'\n    child_border: '#33eb1c'\n  unfocused:\n    border: '#2a2a2a'\n    background: '#000000'\n    text: '#4a4d44'\n    indicator: '#33eb1c'\n    child_border: '#2a2a2a'\n  active:\n    border: '#2a2a2a'\n    background: '#000000'\n    text: '#4a4d44'\n    indicator: '#33eb1c'\n    child_border: '#33eb1c'\n  inactive:\n    border: '#2a2a2a'\n    background: '#6c6c6c'\n    text: '#4a4d44'\n    indicator: '#2a2a2a'\n    child_border: '#2a2a2a'\n  urgent:\n    border: '#2a8e10'\n    background: '#000000'\n    text: '#4a4d44'\n    indicator: '#33eb1c'\n    child_border: '#2a2a2a'\n  placeholder:\n    border: '#2a2a2a'\n    background: '#249043'\n    text: '#4a4d44'\n    indicator: '#33eb1c'\n    child_border: '#2a2a2a'\n  sway:\n    black0: '#000000'\n    red1: '#EF2929'\n    green2: '#33eb1c'\n    yellow3: '#b1701e'\n    blue4: '#3149a7'\n    magenta5: '#96363C'\n    cyan6: '#34E2E2'\n    white7: '#ebdbb2'\n    black8: '#2a2a2a'\n    red9: '#Cd3f45'\n    green10: '#2a8e10'\n    yellow11: '#FCE94F'\n    blue12: '#475ebd'\n    magenta13: '#96363c'\n    cyan14: '#01495d'\n    white15: '#4a4d44'\n\n\n\n# colors:\n#   active_border: \"#8f350a\"\n#   background: \"#000000\"\n#   background_alt: \"#00000099\"\n#   black0: \"#000000\"\n#   black1: \"#000000\"\n#   black: \"#030303\"\n#   blue0: \"#838d6e\"\n#   blue1: \"#475ebd\"\n#   border: \"#b52525\"\n#   charcoal: \"#0f1110\"\n#   cursor: \"#e0aa7c\"\n#   cyan0: \"#6e576f\"\n#   cyan1: \"#f07d14\"\n#   dark_plum: \"#4d0c28\"\n#   foreground: \"#a3a3a3\"\n#   foreground_alt: \"#859900\"\n#   green0: \"#97e023\"\n#   green1: \"#97e023\"\n#   inactive_border: \"#292828\"\n#   magenta0: \"#96363c\"\n#   magenta1: \"#e04b5a\"\n#   orange0: \"#e3870e\"\n#   red0: \"#b50047\"\n#   red1: \"#be004a\"\n#   royal_blue: \"#2424aa\"\n#   selection_background: \"#b1701e\"\n#   selection_foreground: \"#292828\"\n#   separator: \"#505050\"\n#   shit_green: \"#8a8d2d\"\n#   slate_blue: \"#01495d\"\n#   text: \"#fffacd\"\n#   white0: \"#ffffff\"\n#   white1: \"#efecf4\"\n#   yellow0: \"#fa8419\"\n#   yellow1: \"#c3b624\"\n",
      "path": "/group_vars/all/"
    },
    {
      "filename": "pibot.yml",
      "content": "---\n\ndistribution: Raspberry\n\nuser:\n  name: pi\n  group: pi\n  uid: 1000\n  gid: 1000\n  home: /home/pi\n  shell: zsh\n  secondary_groups: \"input,video,audio\"\n  sudoers: True\n\nbluetooth: True\n\n# share:\n#   nfs:\n#     parent: \"{{ user.home }}\"\n#     exports:\n#       - LLMOS\n\nterminal: \"xterm\"\nterminal_alt: \"xterm\"\n",
      "path": "/host_vars/"
    },
    {
      "filename": "soundbot.yml",
      "content": "---\n\nansible_distribution: EndeavourOS\n\nshare:\n  nfs:\n    parent: \"{{ user.home }}\"\n    exports:\n      - LLMOS\n      - Recordings\n      - Workspace\n\nbind_share_exports: True\n\nservices:\n  mediamtx:\n    enabled: True\n\ncpupower:\n  governor: performance\n  perf_bias: 0\n\nbrowser: \"google-chrome-stable\"\n\nhomepage_directory: \"{{ user.home }}/Documents/homepage\"\n\n#TODO: this\n# tuned:\n#   profile: powersave\n\naudio: \"jack\"\n\nde: gnome\nwindow_manager:\n# x:\n#   autostart:\n#     - bash ~/.screenlayout/soundbot.sh\n#\n# i3:\n#   autostart:\n#     - \"tilda\"\n#     - \"ray-daemon --session-root ~/Studio/NetworkSessions -p 7777\"\n#     - \"sleep 0.5\"\n#     - \"barrierc -f --no-tray --debug INFO --name soundbot --disable-crypto [tinybot]:24800\"\n#   tray_output: \"primary\"\n#   assignments: \"default\"\n#   workspaces:\n#     - \"$ws1 output eDP-1\"\n#     - \"$ws2 output eDP-1\"\n#     - \"$ws3 output eDP-1\"\n#     - \"$ws4 output DP-1-1\"\n#     - \"$ws5 output DP-1-1\"\n#     - \"$ws6 output DP-1-1\"\n#     - \"$ws7 output DP-1-1\"\n#     - \"$ws8 output DP-1-1\"\n#     - \"$ws9 output DP-1-1\"\n#     - \"$ws10 output DP-1-1\"\n#   keybindings: \"default\"\n\n# network_interfaces:\n#   - device: eth0\n#     type: ethernet\n#     ifname: eth0\n#     conn_name: eth0\n#     mac: 54:ee:75:fd:46:30\n#     autoconnect: False\n#     state: present\n#     method4: auto\n#   - device: eth1\n#     type: ethernet\n#     ifname: eth1\n#     conn_name: eth1\n#     mac: 00:50:b6:91:fc:4d\n#     ip4: 192.168.41.42/24\n#     gw4: 192.168.41.1\n#     dns4:\n#       - 192.168.41.41\n#       - 192.168.41.1\n#     dns4_search: syncopated.net\n#     autoconnect: True\n#     state: present\n#     method4: manual\n#   - device: eth2\n#     type: ethernet\n#     ifname: eth2\n#     conn_name: audio\n#     mac: 00:e0:4d:78:b7:7c\n#     ip4: 192.168.36.1/24\n#     autoconnect: True\n#     state: present\n#     method4: manual\n\nhost:\n  xorg:\n    video:\n      # intel:\n      - intel-gpu-tools\n      - intel-media-driver\n      - intel-ucode\n      - libva-intel-driver\n      - libva-mesa-driver\n      # - libvdpau-va-gl-i965\n      - vulkan-headers\n      - vulkan-icd-loader\n      - vulkan-intel\n      - xf86-video-intel\n      # opengl:\n      - libva-utils\n      - libvdpau-va-gl\n      - libva-mesa-driver\n      - mesa\n      - mesa-utils\n      - mesa-vdpau\n      - vdpauinfo\n      # opencl:\n      - opencl-clover-mesa\n      - opencl-rusticl-mesa\n",
      "path": "/host_vars/"
    },
    {
      "filename": "bender.yml",
      "content": "---\n\nshare:\n  nfs:\n    parent: /\n    exports:\n      - backup\n      - storage\n\n\n# network_interfaces:\n#   - device: enp2s0\n#     type: ethernet\n#     ifname: enp2s0\n#     conn_name: enp2s0\n#     mac: d8:d3:85:b2:dd:c5\n#     ip4: 192.168.41.20/24\n#     gw4: 192.168.41.1\n#     dns4:\n#       - 192.168.41.41\n#       - 192.168.41.1\n#     dns4_search: syncopated.net\n#     autoconnect: True\n#     state: present\n#     method4: manual\n",
      "path": "/host_vars/"
    },
    {
      "filename": "tinybot.yml",
      "content": "---\n\nuse_docker: True\nuse_libvirt: True\n\ntuned_profile: powersave\n# share:\n#   nfs:\n#     parent: \"{{ user.home }}\"\n#     exports:\n#       - LLMOS\n#       - Recordings\n#       - Workspace\n\n# bind_share_exports: True\n\ncpupower:\n  governor: performance\n  perf_bias: 0\n\nterminal: \"kitty\"\nterminal_alt: \"alacritty\"\n\ndm: False\nbrowser: \"google-chrome-stable\"\n\nfont:\n  primary:\n    name: Hack Nerd Font\n    size: 14\n    hintstyle: hintsfull\n  glyphs:\n    name: Font Awesome 6 Free Regular\n  mono:\n    name: Hack Nerd Font Mono\n\nx:\n  autostart:\n    - bash ~/.screenlayout/tinybot.sh\n    # - \"jacktrip -s -n 4 -q auto -b 24 -D --udprt &\"\ni3:\n  autostart:\n    - \"keepassxc\"\n    - \"barrier\"\n    # - \"tilda -g ~/.config/tilda/config_0\"\n    - \"tilda -g ~/.config/tilda/config_1\"\n#    - \"barriers -f --no-tray --debug INFO --name tinybot --disable-crypto --disable-client-cert-checking -c /home/b08x/.config/Debauchee/tinybot.conf --address :24800\"\n  tray_output: \"primary\"\n  assignments: \"default\"\n  workspaces:\n    - \"$ws1 output HDMI-1\"\n    - \"$ws2 output DP-2\"\n    - \"$ws3 output HDMI-1\"\n    - \"$ws4 output DP-2\"\n    - \"$ws5 output HDMI-1\"\n    - \"$ws6 output DP-2\"\n    - \"$ws7 output HDMI-1\"\n    - \"$ws8 output DP-2\"\n    - \"$ws9 output HDMI-1\"\n    - \"$ws10 output DP-2\"\n  keybindings: \"default\"\n\n# network_interfaces:\n#   - device: eth0\n#     type: ethernet\n#     ifname: eth0\n#     conn_name: eth0\n#     mac: 68:1d:ef:2a:ac:47\n#     ip4: 192.168.41.43/24\n#     gw4: 192.168.41.1\n#     dns4:\n#       - 192.168.41.41\n#       - 192.168.41.1\n#     dns4_search: syncopated.net\n#     autoconnect: True\n#     state: present\n#     method4: manual\n#   - device: eth1\n#     type: ethernet\n#     ifname: eth1\n#     conn_name: eth1\n#     mac: 68:1d:ef:2a:b4:03\n#     ip4: 192.168.36.2/24\n#     autoconnect: True\n#     state: present\n#     method4: manual\n#   - device: wlan0\n#     type: wifi\n#     ifname: wlan0\n#     conn_name: wlan0\n#     ssid: \"invisiblemagic\"\n#     mac: c2:03:79:0d:7d:b3\n#     autoconnect: False\n#     state: present\n#     method4: disabled\n\nhost:\n  xorg:\n    video:\n      # intel:\n      - intel-gpu-tools\n      - intel-media-driver\n      - intel-ucode\n      - libva-intel-driver\n      - libva-mesa-driver\n      # - libvdpau-va-gl-i965\n      - vulkan-headers\n      - vulkan-icd-loader\n      - vulkan-intel\n      - xf86-video-intel\n      # opengl:\n      - libva-utils\n      - libvdpau-va-gl\n      - libva-mesa-driver\n      - mesa\n      - mesa-utils\n      - mesa-vdpau\n      - vdpauinfo\n      # opencl:\n      - opencl-clover-mesa\n      - opencl-rusticl-mesa\n",
      "path": "/host_vars/"
    },
    {
      "filename": "archlabs.yml",
      "content": "---\n\n\nterminal: \"kitty\"\nterminal_alt: \"alacritty\"\n",
      "path": "/host_vars/"
    },
    {
      "filename": "ninjabot.yml",
      "content": "---\n\nshare:\n  nfs:\n    parent: \"/srv\"\n    exports:\n      - storage\n\nbind_share_exports: False\n\n# TODO: test whether or not this variable will overwrite the defaults with nothing..\n# docker:\n  # service: 'enabled'\n  # storage: /var/lib/docker\n  # nvidia: True\n\nnvidia:\n\ncpu:\n  min_freq: 3000\n  max_freq: 3200\n\ndm: False\nbrowser: \"google-chrome-stable\"\nterminal: \"kitty\"\naudio: \"jack\"\n\n# barrier:\n#   client:\n#     name: ninjabot\n#     server: '[tinybot]:24800'\n#   client:\n#     name: ninjabot\n#     server: '[soundbot]:24801'\nx:\n  autostart:\n    - bash ~/.screenlayout/ninjabot.sh\n\ni3:\n  autostart:\n    - \"barrierc -f --debug INFO --name ninjabot --disable-crypto [tinybot]:24800\"\n  tray_output: 'primary'\n  assignments: 'default'\n  workspaces: 'default'\n  keybindings: 'default'\n\n# network_interfaces:\n#   - device: eth0\n#     type: ethernet\n#     ifname: eth0\n#     conn_name: eth0\n#     mac: bc:5f:f4:0e:bb:b5\n#     ip4: 192.168.41.44/24\n#     gw4: 192.168.41.1\n#     dns4:\n#       - 192.168.41.41\n#       - 192.168.41.1\n#     dns4_search: syncopated.net\n#     autoconnect: True\n#     state: present\n#     method4: manual\n#   - device: eth1\n#     type: ethernet\n#     ifname: eth1\n#     conn_name: audio\n#     mac: bc:5f:f4:0e:bb:b3\n#     ip4: 192.168.36.3/28\n#     autoconnect: True\n#     state: present\n#     method4: manual\n\nhost:\n  kernel:\n    - linux\n    - linux-headers\n    - linux-lts\n    - linux-lts-headers\n  xorg:\n    video:\n    # intel:\n      - intel-gpu-tools\n      - intel-media-driver\n      - intel-ucode\n      - libva-intel-driver\n      - libva-mesa-driver\n      - libvdpau-va-gl-i965\n      - vulkan-headers\n      - vulkan-icd-loader\n      - vulkan-intel\n      - xf86-video-intel\n    # nvidia:\n      - lib32-nvidia-470xx-utils\n      - lib32-opencl-nvidia-470xx\n      - lib32-opencl-rusticl-mesa\n      - libnvidia-container\n      - libnvidia-container-tools\n      - libva-nvidia-driver\n      - nvidia-470xx-dkms\n      - nvidia-470xx-settings\n      - nvidia-470xx-utils\n      # - nvidia-container-runtime\n      - nvidia-container-toolkit\n      # - nvidia-docker\n      - nvidia-docker-compose\n    # opengl:\n      - libva-utils\n      - libvdpau-va-gl\n      - mesa-amber\n      - mesa-utils\n      - mesa-vdpau\n      - vdpauinfo\n    # opencl:\n      - opencl-clover-mesa\n      - opencl-nvidia-470xx\n      - opencl-rusticl-mesa\n\n# host:\n#   packages:\n#     audio:\n#       - a2jmidid\n#       - accountsservice\n#       - alsa-card-profiles\n#       - alsa-firmware\n#       - alsa-plugins\n#       - alsa-tools\n#       - alsa-utils\n#       - ambdec\n#       - bitwig-studio\n#       - bluez\n#       - bluez-hid2hci\n#       - bluez-libs\n#       - bluez-utils\n#       - jack2\n#       - jack2-dbus\n#       - jack-example-tools\n#       - jack_capture\n#       - jack_utils\n#       - jacktrip\n#       - libwireplumber\n#       - mixxx\n#       - mpg123\n#       - opusfile\n#       - osc2midi\n#       - pavucontrol\n#       - pipewire\n#       - pulseaudio\n#       - pulseaudio-alsa\n#       - pulseaudio-bluetooth\n#       - pulseaudio-jack\n#       - pulsemixer\n#       - qmidiarp\n#       - qmidinet\n#       - qsampler\n#       - rnnoise\n#       - sndio\n#       - vmpk\n#       - vorbis-tools\n#       - zita-alsa-pcmi\n#     fonts:\n#       - adobe-source-han-sans-cn-fonts\n#       - adobe-source-han-sans-jp-fonts\n#       - adobe-source-han-sans-kr-fonts\n#       - arc-icon-theme\n#       - awesome-terminal-fonts\n#       - cachyos-nord-gtk-theme-git\n#       - cantarell-fonts\n#       - noto-color-emoji-fontconfig\n#       - noto-fonts\n#       - noto-fonts-cjk\n#       - noto-fonts-emoji\n#       - numix-circle-icon-theme-git\n#       - numix-icon-theme-git\n#       - opendesktop-fonts\n#       - ttf-bitstream-vera\n#       - ttf-dejavu\n#       - ttf-firacode-nerd\n#       - ttf-font-awesome\n#       - ttf-input\n#       - ttf-jetbrains-mono\n#       - ttf-liberation\n#       - ttf-meslo-nerd\n#       - ttf-opensans\n#       - ttf-ubuntu-font-family\n#     codecs:\n#       - gst-libav\n#       - gst-plugin-pipewire\n#       - gst-plugins-bad\n#       - gst-plugins-ugly\n#     terminal:\n#       - alacritty\n#       - aria2\n#       - asciiquarium-transparent-git\n#       - bash-completion\n#       - bat\n#       - bottom\n#       - btop\n#       - eza\n#       - fd\n#       - figlet\n#       - github-cli\n#       - gitui\n#       - guake\n#       - gum\n#       - htop\n#       - kitty\n#       - kitty-shell-integration\n#       - kitty-terminfo\n#       - lnav\n#       - most\n#       - ncdu\n#       - neofetch\n#       - nvtop\n#       - ranger\n#       - ripgrep\n#       - ripgrep-all\n#       - rsync\n#       - smartmontools\n#       - termdown\n#       - terminator\n#       - tilda\n#       - tree\n#       - ueberzug\n#       - w3m\n#       - wget\n#       - yadm\n#       - zoxide\n#     design:\n#       - cef-minimal-obs-bin\n#       - darktable\n#       - figma-linux-bin\n#       - gimp\n#       - imagemagick\n#     gtk:\n#       - gtk-doc\n#       - gtk-engine-murrine\n#       - gtk-engines\n#       - gtk-update-icon-cache\n#       - gtksourceview3\n#       - gtkspell3\n#     qt:\n#       - qscintilla-qt5\n#       - qt5-base\n#       - qt5-declarative\n#       - qt5-location\n#       - qt5-tools\n#       - qt5-x11extras\n#       - qt5ct\n#       - qt6-declarative\n#       - qt6-multimedia\n#       - qt6-tools\n#       - qt6-wayland\n#       - qt6ct\n#     kvantum:\n#       - kvantum\n#       - kwindowsystem5\n#     i3:\n#       - i3-wm\n#       - i3blocks\n#       - i3lock-color\n#       - i3status\n#       - i3status-rust\n#     desktop:\n#       - arandr\n#       - aspell-en\n#       - autorandr\n#       - barrier\n#       - cachy-browser\n#       - cachyos-hello\n#       - cachyos-packageinstaller\n#       - cachyos-rate-mirrors\n#       - cachyos-settings\n#       - dconf\n#       - dunst\n#       - ffmpeg4.4\n#       - ffmpegthumbnailer\n#       - firewalld\n#       - fsarchiver\n#       - fuse3\n#       - fuse-common\n#       - gconf\n#       - geoclue\n#       - gnome-common\n#       - gnome-keyring\n#       - gnuplot\n#       - google-chrome\n#       - gpick\n#       - graphicsmagick\n#       - grsync\n#       - hexchat\n#       - sd\n#       - imv\n#       - inxi\n#       - jc\n#       - keepassxc\n#       - maim\n#       - micro\n#       - mpv\n#       - network-manager-applet\n#       - numlockx\n#       - octopi\n#       - paru\n#       - pass\n#       - polybar\n#       - profile-sync-daemon\n#       - qpdf\n#       - qutebrowser\n#       - redshift\n#       - rofi\n#       - seahorse\n#       - slop\n#       - sxiv\n#       - teiler-git\n#       - thunar\n#       - thunar-archive-plugin\n#       - thunar-volman\n#       - unrar\n#       - unzip\n#       - vlc\n#       - wmctrl\n#       - wmfocus\n#       - yt-dlp\n#     development:\n#       - asp\n#       - bmake\n#       - cmake\n#       - cython\n#       - dconf-editor\n#       - devdocs-desktop\n#       - devtools\n#       - docker\n#       - docker-compose\n#       - electron25\n#       - git-meld\n#       - gitflow-zshcompletion-avh\n#       - lazydocker-bin\n#       - meld\n#       - nano-syntax-highlighting\n#       - neovim\n#       - neovim-symlinks\n#       - nodejs\n#       - npm\n#       - obsidian\n#       - postgresql-libs\n#       - pulsar-bin\n#       - rubygems\n#       - subversion\n#       - vim-runtime\n#       - virt-install\n#       - virt-manager\n#       - virt-viewer\n#     python:\n#       - python\n#       - python-adblock\n#       - python-annotated-types\n#       - python-autocommand\n#       - python-cairo\n#       - python-cffi\n#       - python-defusedxml\n#       - python-fastjsonschema\n#       - python-inflect\n#       - python-jaraco.context\n#       - python-jaraco.functools\n#       - python-jaraco.text\n#       - python-jinja\n#       - python-lxml\n#       - python-mako\n#       - python-markdown\n#       - python-markupsafe\n#       - python-more-itertools\n#       - python-numpy\n#       - python-ordered-set\n#       - python-packaging\n#       - python-pillow\n#       - python-pip\n#       - python-platformdirs\n#       - python-psutil\n#       - python-pydantic\n#       - python-pydantic-core\n#       - python-pyqt5\n#       - python-pyqt5-sip\n#       - python-requests\n#       - python-ruamel-yaml\n#       - python-setuptools\n#       - python-tomli\n#       - python-trove-classifiers\n#       - python-typing_extensions\n#       - python-validate-pyproject\n#       - python-yaml\n#     network:\n#       - iwd\n#       - modemmanager\n#       - networkmanager\n#       - networkmanager-openvpn\n#       - ntp\n#     kernal:\n#       - linux-cachyos\n#       - linux-cachyos-headers\n#     system:\n#       - apr\n#       - aribb24\n#       - asio\n#       - asp\n#       - autoconf-archive\n#       - bc\n#       - beep\n#       - bind\n#       - bpftune-git\n#       - broadcom-wl-dkms\n#       - btrfs-assistant-git\n#       - btrfsmaintenance\n#       - cachyos-ananicy-rules\n#       - cachyos-hooks\n#       - cachyos-kernel-manager\n#       - cachyos-keyring\n#       - cachyos-mirrorlist\n#       - cachyos-v3-mirrorlist\n#       - cachyos-v4-mirrorlist\n#       - chwd\n#       - chwd-db\n#       - cpupower\n#       - dhclient\n#       - dhcpcd\n#       - dmidecode\n#       - dnsmasq\n#       - efitools\n#       - ethtool\n#       - exfatprogs\n#       - f2fs-tools\n#       - go\n#       - grub\n#       - grub-hook\n#       - help2man\n#       - hwdetect\n#       - hwinfo\n#       - lsb-release\n#       - mkinitcpio\n#       - msgpack-c\n#       - mtools\n#       - netctl\n#       - ntfs-3g\n#       - os-prober\n#       - pacman-contrib\n#       - parallel\n#       - pcurses\n#       - pdfjs\n#       - pv\n#       - rebuild-detector\n#       - reflector\n#       - rtkit\n#       - rustup\n#       - upower\n#       - usb_modeswitch\n#       - vte3\n#       - vte-common\n#       - xarchiver\n#       - zeromq\n#     xorg:\n#       - xcb-util-cursor\n#       - xclip\n#       - xdg-dbus-proxy\n#       - xdg-desktop-portal\n#       - xdg-user-dirs\n#       - xdot\n#       - xdotool\n#       - xf86-input-libinput\n#       - xf86-input-wacom\n#       - xfconf\n#       - xininfo-git\n#       - xkeyboard-config\n#       - xkill-shortcut\n#       - xl2tpd\n#       - xorg-bdftopcf\n#       - xorg-fonts-alias-75dpi\n#       - xorg-fonts-alias-100dpi\n#       - xorg-fonts-alias-cyrillic\n#       - xorg-fonts-alias-misc\n#       - xorg-fonts-misc\n#       - xorg-iceauth\n#       - xorg-mkfontscale\n#       - xorg-server\n#       - xorg-server-common\n#       - xorg-sessreg\n#       - xorg-smproxy\n#       - xorg-x11perf\n#       - xorg-xbacklight\n#       - xorg-xcmsdb\n#       - xorg-xcursorgen\n#       - xorg-xdpyinfo\n#       - xorg-xdriinfo\n#       - xorg-xev\n#       - xorg-xgamma\n#       - xorg-xhost\n#       - xorg-xinit\n#       - xorg-xinput\n#       - xorg-xkbevd\n#       - xorg-xkbutils\n#       - xorg-xkill\n#       - xorg-xlsatoms\n#       - xorg-xlsclients\n#       - xorg-xlsfonts\n#       - xorg-xpr\n#       - xorg-xrandr\n#       - xorg-xrefresh\n#       - xorg-xsetroot\n#       - xorg-xvinfo\n#       - xorg-xwd\n#       - xorg-xwininfo\n#       - xorg-xwud\n#       - xterm\n#     kvm:\n#       - qemu-audio-alsa\n#       - qemu-audio-dbus\n#       - qemu-audio-jack\n#       - qemu-audio-oss\n#       - qemu-audio-pa\n#       - qemu-audio-pipewire\n#       - qemu-audio-sdl\n#       - qemu-audio-spice\n#       - qemu-base\n#       - qemu-block-curl\n#       - qemu-block-dmg\n#       - qemu-block-gluster\n#       - qemu-block-iscsi\n#       - qemu-block-nfs\n#       - qemu-block-ssh\n#       - qemu-chardev-baum\n#       - qemu-chardev-spice\n#       - qemu-common\n#       - qemu-desktop\n#       - qemu-docs\n#       - qemu-emulators-full\n#       - qemu-full\n#       - qemu-hw-display-qxl\n#       - qemu-hw-display-virtio-gpu\n#       - qemu-hw-display-virtio-gpu-gl\n#       - qemu-hw-display-virtio-gpu-pci\n#       - qemu-hw-display-virtio-gpu-pci-gl\n#       - qemu-hw-display-virtio-vga\n#       - qemu-hw-display-virtio-vga-gl\n#       - qemu-hw-s390x-virtio-gpu-ccw\n#       - qemu-hw-usb-host\n#       - qemu-hw-usb-redirect\n#       - qemu-hw-usb-smartcard\n#       - qemu-img\n#       - qemu-pr-helper\n#       - qemu-system-aarch64\n#       - qemu-system-alpha\n#       - qemu-system-alpha-firmware\n#       - qemu-system-arm\n#       - qemu-system-arm-firmware\n#       - qemu-system-avr\n#       - qemu-system-cris\n#       - qemu-system-hppa\n#       - qemu-system-hppa-firmware\n#       - qemu-system-loongarch64\n#       - qemu-system-m68k\n#       - qemu-system-microblaze\n#       - qemu-system-microblaze-firmware\n#       - qemu-system-mips\n#       - qemu-system-nios2\n#       - qemu-system-or1k\n#       - qemu-system-ppc\n#       - qemu-system-ppc-firmware\n#       - qemu-system-riscv\n#       - qemu-system-riscv-firmware\n#       - qemu-system-rx\n#       - qemu-system-s390x\n#       - qemu-system-s390x-firmware\n#       - qemu-system-sh4\n#       - qemu-system-sparc\n#       - qemu-system-sparc-firmware\n#       - qemu-system-tricore\n#       - qemu-system-x86\n#       - qemu-system-x86-firmware\n#       - qemu-system-xtensa\n#       - qemu-tests\n#       - qemu-tools\n#       - qemu-ui-curses\n#       - qemu-ui-dbus\n#       - qemu-ui-egl-headless\n#       - qemu-ui-gtk\n#       - qemu-ui-opengl\n#       - qemu-ui-sdl\n#       - qemu-ui-spice-app\n#       - qemu-ui-spice-core\n#       - qemu-user\n#       - qemu-vhost-user-gpu\n#     dependencies:\n#       # - cachyos-fish-config\n#       # - cachyos-i3wm-settings\n#       # - cachyos-micro-settings\n#       # - cachyos-picom-config\n#       # - cachyos-zsh-config\n#       - cjson\n#       - docbook-xml\n#       - docbook-xsl\n#       - duf\n#       - edk2-ovmf\n#       - egl-wayland\n#       - enchant\n#       - fastfetch\n#       - glances\n#       - glew\n#       - gobject-introspection\n#       - gperftools\n#       - harfbuzz\n#       - harfbuzz-icu\n#       - haveged\n#       - hyphen\n#       - intltool\n#       - itstool\n#       - libajantv2\n#       - libdatachannel\n#       - libdrm\n#       - libdvbpsi\n#       - libdvdcss\n#       - libebml\n#       - libgsf\n#       - libgtop\n#       - libguestfs\n#       - libheif\n#       - libical\n#       - libjuice\n#       - libluv\n#       - libmanette\n#       - libmatroska\n#       - libmbim\n#       - libmfx\n#       - libmm-glib\n#       - libmysofa\n#       - libnm\n#       - libopenraw\n#       - libpaper\n#       - libpipewire\n#       - libprocps\n#       - libqmi\n#       - librist\n#       - libsodium\n#       - libsoup3\n#       - libsysprof-capture\n#       - libtar\n#       - libtermkey\n#       - libunwind\n#       - libupnp\n#       - libutf8proc\n#       - libvterm\n#       - libwnck3\n#       - libwpe\n#       - lsscsi\n#       - luajit\n#       - mallard-ducktype\n#       - mbedtls\n#       - mbedtls2\n#       - moc\n#       - nftables\n#       - nlohmann-json\n#       - nss-mdns\n#       - oniguruma\n#       - peg\n#       - perl-anyevent-i3\n#       - poppler-glib\n#       - power-profiles-daemon\n#       - protobuf\n#       - qrcodegencpp-cmake\n#       - rhash\n#       - rpcsvc-proto\n#       - semver\n#       - serd\n#       - sg3_utils\n#       - snapper\n#       - snappy\n#       - sof-firmware\n#       - stunnel\n#       - suitesparse\n#       - swig\n#       - tree-sitter\n#       - unibilium\n#       - webkit2gtk\n#       - websocketpp\n#       - woff2\n#       - wpebackend-fdo\n#       - yelp-tools\n#       - yelp-xsl\n",
      "path": "/host_vars/"
    },
    {
      "filename": "crambot.yml",
      "content": "---\n\nshare:\n  nfs:\n    parent: \"\"\n    exports: []\n\n#\n# network_interfaces:\n#   - device: eno1\n#     type: ethernet\n#     ifname: eno1\n#     conn_name: eno1\n#     mac: b8:ca:3a:94:51:ca\n#     ip4: 192.168.41.2\n#     gw4: 192.168.41.1\n#     dns4: 192.168.41.41\n#     dns4_search: syncopated.net\n#     autoconnect: True\n#     state: present\n#     method4: manual\n#   - device: enp2s0f0\n#     type: ethernet\n#     ifname: enp2s0f0\n#     conn_name: audio\n#     mac: 00:1b:21:87:e8:ba\n#     ip4: 192.168.36.4\n#     autoconnect: True\n#     state: present\n#     method4: manual\n#   - device: enp2s0f1\n#     type: ethernet\n#     ifname: enp2s0f1\n#     conn_name: audio\n#     mac: 00:1b:21:87:e8:bb\n#     ip4: 192.168.36.5\n#     autoconnect: True\n#     state: present\n#     method4: manual\n",
      "path": "/host_vars/"
    },
    {
      "filename": "lapbot.yml",
      "content": "---\n# these variable definitions can be set in the following locations:\n# group_vars/all.yml which will overwrite vars in\n# group_vars/group.yml which will overwrite vars in\n# playbook vars which will overwrite vars in\n# role/x/vars/main.yml which will overwrite vars in\n# host_vars/lapbot.yml\nexpected_value: \"hostvars_lapbot\"\n\ninstall_vscode: True\ninstall_pulsar: False\n\nuse_bluetooth: True\n\nbluetooth: True\n\nbrowser: \"google-chrome-stable\"\n\nzsh_theme: strug\n\n#\n# x:\n#   autostart:\n#     - \"jacktrip -s -n 4 -q auto -b 24 -D --udprt &\"\n\ni3:\n  autostart: 'default'\n  tray_output: 'primary'\n  assignments: 'default'\n  workspaces: 'default'\n  keybindings: 'default'\n\n# network_interfaces:\n#   - device: eth0\n#     type: ethernet\n#     ifname: eth0\n#     conn_name: eth0\n#     mac: 58:8a:5a:38:fb:22\n#     autoconnect: False\n#     state: present\n#     method4: disabled\n#   - device: wlan0\n#     type: wifi\n#     ifname: wlan0\n#     conn_name: wlan0\n#     mac: 66:a1:53:c9:7b:e5\n#     assigned_address: c0:25:e9:74:cd:96\n#     ssid: visiblemagic\n#     autoconnect: False\n#     state: present\n#     method4: disabled\n#   - device: wlan1\n#     type: wifi\n#     ifname: wlan1\n#     conn_name: visiblemagic\n#     mac: c0:25:e9:74:cd:96\n#     assigned_address: c0:25:e9:74:cd:96\n#     ssid: invisiblemagic\n#     # wifi_sec:\n#     #   key_mgmt: wpa-psk\n#     #   psk: \"{{ wifi_key }}\"\n#     ip4: 192.168.41.4/24\n#     gw4: 192.168.41.1\n#     dns4:\n#       - 192.168.41.41\n#       - 192.168.41.1\n#     dns4_search: syncopated.net\n#     autoconnect: False\n#     state: present\n#     method4: manual\n\nhost:\n  kernel:\n    - linux\n    - linux-headers\n  xorg:\n    video:\n      - mesa-amber\n\n# host:\n#   packages:\n#     - extra-cmake-modules-git 5.240.0.r3640.44b7e47c-1\n#     - flashfocus 2.4.1-1\n#     - google-chrome 118.0.5993.117-1\n#     - gtk3-nocsd-git 3.0.8+2.r84.20221015.a356bf7-2\n#     - kvantum-theme-matcha-git r11.a3b247b-1\n#     - matcha-gtk-theme 2023.10.30-1\n#     - numix-circle-icon-theme-git 23.10.09.r0.g80235c9-1\n#     - numix-icon-theme-git 23.04.26.r2.gd12b26ed2-1\n#     - nwg-wrapper 0.1.3-2\n#     - poweralertd 0.2.0-2\n#     - pulsar-bin 1.110.0-1\n#     - python-backcall 0.2.0-8\n#     - python-xpybutil 0.0.6-5\n#     - sway-input-config 1.3.3-1\n#     - swhkd-bin 1.2.1-5\n#     - wev 1.0.0-12\n#     - wlrobs-hg r64.f72d5cb3cbbd-1\n#     - wlsunset 0.3.0-1\n#     - xcursor-breeze 1:5.27.6-1\n#\n#    - a2jmidid\n#    - accountsservice\n#    - alacritty\n#    - alsa-plugins\n#    - alsa-tools\n#    - alsa-utils\n#    - aria2\n#    - autotiling-rs\n#    - avahi\n#    - bat\n#    - bind\n#    - blueman\n#    - bluez\n#    - bluez-hid2hci\n#    - bluez-libs\n#    - bluez-utils\n#    - boost-libs\n#    - broadcom-wl-dkms\n#    - btop\n#    - calcurse\n#    - calf\n#    - calibre\n#    - cmake\n#    - code\n#    - cppdap\n#    - cpupower\n#    - dhclient\n#    - djvulibre\n#    - dmidecode\n#    - dnsmasq\n#    - double-conversion\n#    - doxygen\n#    - duktape\n#    - efitools\n#    - egl-wayland\n#    - ethtool\n#    - exfatprogs\n#    - expac\n#    - eza\n#    - f2fs-tools\n#    - fastfetch\n#    - fd\n#    - ffmpegthumbnailer\n#    - fish\n#    - fmt\n#    - fontconfig\n#    - freetype2\n#    - fsarchiver\n#    - fuse-common\n#    - fzf\n#    - git\n#    - gnome-keyring\n#    - gobject-introspection\n#    - greetd-tuigreet\n#    - gst-libav\n#    - gst-plugins-bad\n#    - gst-plugins-ugly\n#    - gtk-engine-murrine\n#    - gtk-engines\n#    - gum\n#    - harfbuzz\n#    - haveged\n#    - highlight\n#    - htop\n#    - http-parser\n#    - hwinfo\n#    - imagemagick\n#    - intel-media-driver\n#    - iwd\n#    - jack-example-tools\n#    - jack2-dbus\n#    - jack_utils\n#    - jq\n#    - keepassxc\n#    - kitty\n#    - kvantum\n#    - libcups\n#    - libdaemon\n#    - libdrm\n#    - libdvdcss\n#    - libevdev\n#    - libglvnd\n#    - libgsf\n#    - libgudev\n#    - libice\n#    - libinput\n#    - libomxil-bellagio\n#    - libopenraw\n#    - libpciaccess\n#    - libpng\n#    - libproxy\n#    - libsm\n#    - libunwind\n#    - liburcu\n#    - libutempter\n#    - libutf8proc\n#    - libva-intel-driver\n#    - libwireplumber\n#    - libwnck3\n#    - libx11\n#    - libxau\n#    - libxcb\n#    - libxcursor\n#    - libxdamage\n#    - libxdmcp\n#    - libxext\n#    - libxfixes\n#    - libxi\n#    - libxkbcommon\n#    - libxkbcommon-x11\n#    - libxmu\n#    - libxrandr\n#    - libxrender\n#    - libxshmfence\n#    - libxt\n#    - libxxf86vm\n#    - lm_sensors\n#    - lnav\n#    - lsscsi\n#    - lua\n#    - lynx\n#    - mako\n#    - md4c\n#    - mediainfo\n#    - mercurial\n#    - mesa-utils\n#    - micro\n#    - most\n#    - mpv\n#    - mtdev\n#    - mtools\n#    - mupdf-tools\n#    - neovim\n#    - network-manager-applet\n#    - networkmanager-openvpn\n#    - nftables\n#    - ninja\n#    - nodejs\n#    - nss-mdns\n#    - ntfs-3g\n#    - ntp\n#    - obs-studio\n#    - obsidian\n#    - odt2txt\n#    - oniguruma\n#    - openscad\n#    - opusfile\n#    - os-prober\n#    - pacman-contrib\n#    - patchage\n#    - pavucontrol\n#    - polkit\n#    - poppler-glib\n#    - power-profiles-daemon\n#    - powerline-common\n#    - powerline-fonts\n#    - pulseaudio-alsa\n#    - pulseaudio-bluetooth\n#    - pulseaudio-jack\n#    - pv\n#    - pyside2\n#    - python-markupsafe\n#    - python-pyqt5\n#    - python-shiboken2\n#    - python-yaml\n#    - qjackctl\n#    - qscintilla-qt5\n#    - qt5-base\n#    - qt5-graphicaleffects\n#    - qt5-quickcontrols2\n#    - qt5-svg\n#    - qt5-tools\n#    - qt5-wayland\n#    - qt5ct\n#    - qt6-base\n#    - qt6-declarative\n#    - qt6-multimedia\n#    - qt6-tools\n#    - qt6-wayland\n#    - qt6ct\n#    - rhash\n#    - ripgrep\n#    - rofi\n#    - rsync\n#    - ruby-psych\n#    - rustup\n#    - rxvt-unicode\n#    - scdoc\n#    - sg3_utils\n#    - shared-mime-info\n#    - smartmontools\n#    - snapper\n#    - sof-firmware\n#    - swappy\n#    - sway\n#    - swaybg\n#    - tealdeer\n#    - terminology\n#    - thunar\n#    - tilda\n#    - transmission-cli\n#    - tslib\n#    - unzip\n#    - upower\n#    - usb_modeswitch\n#    - vim\n#    - vim-runtime\n#    - vorbis-tools\n#    - vulkan-icd-loader\n#    - w3m\n#    - wavpack\n#    - waybar\n#    - wayland\n#    - wf-recorder\n#    - wget\n#    - wl-clipboard\n#    - wofi\n#    - x42-plugins\n#    - xcb-util\n#    - xcb-util-image\n#    - xcb-util-keysyms\n#    - xcb-util-renderutil\n#    - xcb-util-wm\n#    - xdg-desktop-portal\n#    - xdg-user-dirs\n#    - xf86-input-libinput\n#    - xl2tpd\n#    - xorg-server\n#    - xorg-xdpyinfo\n#    - xorg-xinit\n#    - xorg-xinput\n#    - xorg-xkill\n#    - xorg-xprop\n#    - xorg-xrandr\n#    - xorg-xset\n#    - xorg-xwayland\n#    - zita-alsa-pcmi\n#    - zita-mu1\n#    - zoxide\n#    - zram-generator\n#    - zsh\n#    - zsh-theme-powerlevel10k\n#  - a2jmidid\n#  - accountsservice\n#  - adobe-source-han-sans-cn-fonts\n#  - adobe-source-han-sans-jp-fonts\n#  - adobe-source-han-sans-kr-fonts\n#  - alacritty\n#  - alsa-firmware\n#  - alsa-plugins\n#  - alsa-tools\n#  - alsa-utils\n#  - ansible\n#  - aria2\n#  - atool\n#  - autotiling-rs\n#  - avahi\n#  - awesome-terminal-fonts\n#  - barrier\n#  - bash-completion\n#  - bat\n#  - bind\n#  - blueman\n#  - bluez\n#  - bluez-hid2hci\n#  - bluez-libs\n#  - bluez-utils\n#  - boost-libs\n#  - broadcom-wl-dkms\n#  - btop\n#  - calcurse\n#  - calf\n#  - calibre\n#  - cantarell-fonts\n#  - cmake\n#  - code\n#  - cppdap\n#  - cpupower\n#  - dex\n#  - dhclient\n#  - djvulibre\n#  - dmidecode\n#  - dnsmasq\n#  - double-conversion\n#  - doxygen\n#  - duf\n#  - duktape\n#  - efitools\n#  - egl-wayland\n#  - elinks\n#  - ethtool\n#  - exfatprogs\n#  - expac\n#  - extra-cmake-modules-git\n#  - eza\n#  - f2fs-tools\n#  - fastfetch\n#  - fcft\n#  - fd\n#  - ffmpegthumbnailer\n#  - firewalld\n#  - fish\n#  - fmt\n#  - fontconfig\n#  - fontforge\n#  - foot\n#  - freetype2\n#  - fsarchiver\n#  - fuse-common\n#  - fzf\n#  - git\n#  - glances\n#  - gnome-keyring\n#  - gobject-introspection\n#  - greetd-tuigreet\n#  - gst-libav\n#  - gst-plugins-bad\n#  - gst-plugins-ugly\n#  - gtk-engine-murrine\n#  - gtk-engines\n#  - gum\n#  - harfbuzz\n#  - haveged\n#  - highlight\n#  - htop\n#  - http-parser\n#  - hwdetect\n#  - hwinfo\n#  - imagemagick\n#  - intel-media-driver\n#  - intel-ucode\n#  - inxi\n#  - iwd\n#  - jack-example-tools\n#  - jack2-dbus\n#  - jack_capture\n#  - jack_mixer\n#  - jack_utils\n#  - jc\n#  - jq\n#  - jupyter-nbconvert\n#  - keepassxc\n#  - kitty\n#  - kvantum\n#  - libcups\n#  - libdaemon\n#  - libdrm\n#  - libdvdcss\n#  - libevdev\n#  - libglvnd\n#  - libgsf\n#  - libgudev\n#  - libice\n#  - libinput\n#  - libjpeg-turbo\n#  - libomxil-bellagio\n#  - libopenraw\n#  - libpciaccess\n#  - libpipewire\n#  - libpng\n#  - libproxy\n#  - libsm\n#  - libunwind\n#  - liburcu\n#  - libutempter\n#  - libutf8proc\n#  - libva-intel-driver\n#  - libwireplumber\n#  - libwnck3\n#  - libx11\n#  - libxau\n#  - libxcb\n#  - libxcursor\n#  - libxdamage\n#  - libxdmcp\n#  - libxext\n#  - libxfixes\n#  - libxi\n#  - libxkbcommon\n#  - libxkbcommon-x11\n#  - libxmu\n#  - libxrandr\n#  - libxrender\n#  - libxshmfence\n#  - libxt\n#  - libxxf86vm\n#  - lm_sensors\n#  - lnav\n#  - lsb-release\n#  - lsscsi\n#  - lua\n#  - lynx\n#  - mako\n#  - md4c\n#  - mediainfo\n#  - meld\n#  - mercurial\n#  - mesa-utils\n#  - mesa-vdpau\n#  - meson\n#  - micro\n#  - modemmanager\n#  - most\n#  - mpv\n#  - mtdev\n#  - mtools\n#  - mupdf-tools\n#  - nano-syntax-highlighting\n#  - neovim\n#  - netctl\n#  - network-manager-applet\n#  - networkmanager\n#  - networkmanager-openvpn\n#  - nftables\n#  - ninja\n#  - node-gyp\n#  - nodejs\n#  - noto-fonts\n#  - noto-fonts-cjk\n#  - noto-fonts-emoji\n#  - npm\n#  - nss-mdns\n#  - ntfs-3g\n#  - ntp\n#  - obs-studio\n#  - obsidian\n#  - odt2txt\n#  - oniguruma\n#  - opencl-clover-mesa\n#  - opencl-rusticl-mesa\n#  - opendesktop-fonts\n#  - openscad\n#  - opusfile\n#  - os-prober\n#  - pacman-contrib\n#  - parallel\n#  - patchage\n#  - pavucontrol\n#  - perl-image-exiftool\n#  - plasma-wayland-protocols\n#  - polkit\n#  - poppler-glib\n#  - postgresql-libs\n#  - power-profiles-daemon\n#  - powerline-common\n#  - powerline-fonts\n#  - pulseaudio-alsa\n#  - pulseaudio-bluetooth\n#  - pulseaudio-jack\n#  - pulsemixer\n#  - pv\n#  - pyside2\n#  - python-annotated-types\n#  - python-asttokens\n#  - python-autocommand\n#  - python-babel\n#  - python-binaryornot\n#  - python-boolean.py\n#  - python-build\n#  - python-chardet\n#  - python-charset-normalizer\n#  - python-click\n#  - python-debian\n#  - python-defusedxml\n#  - python-docutils\n#  - python-i3ipc\n#  - python-idna\n#  - python-imagesize\n#  - python-inflect\n#  - python-installer\n#  - python-ipykernel\n#  - python-jaraco.context\n#  - python-jaraco.functools\n#  - python-jaraco.text\n#  - python-jedi\n#  - python-jinja\n#  - python-jupyter-client\n#  - python-license-expression\n#  - python-mako\n#  - python-markdown\n#  - python-markupsafe\n#  - python-marshmallow\n#  - python-more-itertools\n#  - python-ordered-set\n#  - python-packaging\n#  - python-pillow\n#  - python-pydantic\n#  - python-pydantic-core\n#  - python-pygments\n#  - python-pyproject-hooks\n#  - python-pyqt5\n#  - python-pytz\n#  - python-requests\n#  - python-setuptools\n#  - python-shiboken2\n#  - python-six\n#  - python-snowballstemmer\n#  - python-sphinx\n#  - python-sphinx-alabaster-theme\n#  - python-sphinxcontrib-applehelp\n#  - python-sphinxcontrib-devhelp\n#  - python-sphinxcontrib-htmlhelp\n#  - python-sphinxcontrib-jsmath\n#  - python-sphinxcontrib-qthelp\n#  - python-sphinxcontrib-serializinghtml\n#  - python-tomli\n#  - python-tqdm\n#  - python-traitlets\n#  - python-trove-classifiers\n#  - python-urllib3\n#  - python-validate-pyproject\n#  - python-wheel\n#  - python-xcffib\n#  - python-xlib\n#  - python-yaml\n#  - qjackctl\n#  - qscintilla-qt5\n#  - qt5-base\n#  - qt5-graphicaleffects\n#  - qt5-quickcontrols2\n#  - qt5-svg\n#  - qt5-tools\n#  - qt5-wayland\n#  - qt5-x11extras\n#  - qt5ct\n#  - qt6-base\n#  - qt6-declarative\n#  - qt6-multimedia\n#  - qt6-tools\n#  - qt6-wayland\n#  - qt6ct\n#  - ranger\n#  - rebuild-detector\n#  - reflector\n#  - reuse\n#  - rhash\n#  - ripgrep\n#  - ripgrep-all\n#  - rofi\n#  - rsync\n#  - rtirq\n#  - rtkit\n#  - ruby-psych\n#  - rustup\n#  - rxvt-unicode\n#  - scdoc\n#  - sg3_utils\n#  - shared-mime-info\n#  - smartmontools\n#  - snapper\n#  - snappy\n#  - sof-firmware\n#  - swappy\n#  - sway\n#  - swaybg\n#  - tealdeer\n#  - terminator\n#  - terminology\n#  - thunar\n#  - tilda\n#  - transmission-cli\n#  - tslib\n#  - ttf-bitstream-vera\n#  - ttf-dejavu\n#  - ttf-firacode-nerd\n#  - ttf-font-awesome\n#  - ttf-input\n#  - ttf-jetbrains-mono\n#  - ttf-liberation\n#  - ttf-meslo-nerd\n#  - ttf-opensans\n#  - ttf-ubuntu-font-family\n#  - ueberzug\n#  - unrar\n#  - unzip\n#  - upower\n#  - usb_modeswitch\n#  - vim\n#  - vim-runtime\n#  - vorbis-tools\n#  - vulkan-headers\n#  - vulkan-icd-loader\n#  - vulkan-intel\n#  - w3m\n#  - wavpack\n#  - waybar\n#  - wayland\n#  - wayland-protocols\n#  - wf-recorder\n#  - wget\n#  - wl-clipboard\n#  - wofi\n#  - x42-plugins\n#  - xcb-util\n#  - xcb-util-image\n#  - xcb-util-keysyms\n#  - xcb-util-renderutil\n#  - xcb-util-wm\n#  - xdg-desktop-portal\n#  - xdg-desktop-portal-wlr\n#  - xdg-user-dirs\n#  - xf86-input-libinput\n#  - xl2tpd\n#  - xorg-server\n#  - xorg-xdpyinfo\n#  - xorg-xinit\n#  - xorg-xinput\n#  - xorg-xkill\n#  - xorg-xprop\n#  - xorg-xrandr\n#  - xorg-xset\n#  - xorg-xwayland\n#  - zita-alsa-pcmi\n#  - zita-mu1\n#  - zoxide\n#  - zram-generator\n#  - zsh\n#  - zsh-theme-powerlevel10k\n",
      "path": "/host_vars/"
    },
    {
      "filename": "main.yml",
      "content": "galaxy_info:\n  author: your name\n  description: your role description\n  company: your company (optional)\n\n  # If the issue tracker for your role is not on github, uncomment the\n  # next line and provide a value\n  # issue_tracker_url: http://example.com/issue/tracker\n\n  # Choose a valid license ID from https://spdx.org - some suggested licenses:\n  # - BSD-3-Clause (default)\n  # - MIT\n  # - GPL-2.0-or-later\n  # - GPL-3.0-only\n  # - Apache-2.0\n  # - CC-BY-4.0\n  license: license (GPL-2.0-or-later, MIT, etc)\n\n  min_ansible_version: 2.1\n\n  # If this a Container Enabled role, provide the minimum Ansible Container version.\n  # min_ansible_container_version:\n\n  galaxy_tags: []\n    # List tags for your role here, one per line. A tag is a keyword that describes\n    # and categorizes the role. Users find roles by searching for tags. Be sure to\n    # remove the '[]' above, if you add tags to this list.\n    #\n    # NOTE: A tag is limited to a single word comprised of alphanumeric characters.\n    #       Maximum 20 tags per role.\n\ndependencies: []\n  # List your role dependencies here, one per line. Be sure to remove the '[]' above,\n  # if you add dependencies to this list.\n",
      "path": "/roles/sxhkd/meta/"
    },
    {
      "filename": "main.yml",
      "content": "---\n# handlers file for sxhkd\n- name: Reload sxhkd\n  command: bash -lc \"reload-sxhkd.sh\"\n  become: False\n  tags: [\"profile\", \"keybindings\"]\n",
      "path": "/roles/sxhkd/handlers/"
    },
    {
      "filename": "test.yml",
      "content": "---\n- hosts: localhost\n  remote_user: root\n  roles:\n    - sxhkd\n",
      "path": "/roles/sxhkd/tests/"
    },
    {
      "filename": "main.yml",
      "content": "---\n\n- name: install sxhkd\n  aur:\n    use: paru\n    name: sxhkd\n    state: present\n  become: False\n  tags: [\"packages\"]\n\n- name: Create sxhkd config folder\n  file:\n    path: \"{{ user.home }}/.config/sxhkd\"\n    state: directory\n    owner: \"{{ user.name }}\"\n    group: \"{{ user.group }}\"\n    recurse: False\n\n- name: Install sxhkd reload function\n  copy:\n    content: |\n      #!/usr/bin/env bash\n      # shellcheck disable=CODE\n\n      function run {\n        if pgrep -x -f \"$1\" ; then\n          pkill -9 $@&\n          sleep 1\n          $@&\n        else\n          sleep 1\n          $@&\n        fi\n      }\n\n      run \"sxhkd\"\n\n      sleep 0.5\n    dest: \"/usr/local/bin/reload-sxhkd.sh\"\n    owner: \"{{ user.name }}\"\n    mode: '0755'\n\n- name: Create sxhkd config folder\n  file:\n    path: \"{{ user.home }}/.config/sxhkd\"\n    state: directory\n    owner: \"{{ user.name }}\"\n    group: \"{{ user.group }}\"\n\n- name: Install sxhkd keybindings\n  template:\n    src: \"sxhkdrc.j2\"\n    dest: \"{{ user.home }}/.config/sxhkd/sxhkdrc\"\n    owner: \"{{ user.name }}\"\n    group: \"{{ user.group }}\"\n    mode: '0644'\n    backup: false\n  notify:\n    - Reload i3\n    - Reload sxhkd\n  tags: [\"profile\", \"keybindings\"]\n",
      "path": "/roles/sxhkd/tasks/"
    },
    {
      "filename": "main.yml",
      "content": "---\n# vars file for sxhkd\n",
      "path": "/roles/sxhkd/vars/"
    },
    {
      "filename": "main.yml",
      "content": "---\n# defaults file for sxhkd\n\npackages: sxhkd\n",
      "path": "/roles/sxhkd/defaults/"
    },
    {
      "filename": "main.yml",
      "content": "galaxy_info:\n  author: your name\n  description: your role description\n  company: your company (optional)\n\n  # If the issue tracker for your role is not on github, uncomment the\n  # next line and provide a value\n  # issue_tracker_url: http://example.com/issue/tracker\n\n  # Choose a valid license ID from https://spdx.org - some suggested licenses:\n  # - BSD-3-Clause (default)\n  # - MIT\n  # - GPL-2.0-or-later\n  # - GPL-3.0-only\n  # - Apache-2.0\n  # - CC-BY-4.0\n  license: license (GPL-2.0-or-later, MIT, etc)\n\n  min_ansible_version: 2.1\n\n  # If this a Container Enabled role, provide the minimum Ansible Container version.\n  # min_ansible_container_version:\n\n  galaxy_tags: []\n    # List tags for your role here, one per line. A tag is a keyword that describes\n    # and categorizes the role. Users find roles by searching for tags. Be sure to\n    # remove the '[]' above, if you add tags to this list.\n    #\n    # NOTE: A tag is limited to a single word comprised of alphanumeric characters.\n    #       Maximum 20 tags per role.\n\ndependencies: []\n  # List your role dependencies here, one per line. Be sure to remove the '[]' above,\n  # if you add dependencies to this list.\n",
      "path": "/roles/tuning/meta/"
    },
    {
      "filename": "main.yml",
      "content": "---\n# handlers file for tuning\n- name: restart cpupower service\n  systemd:\n    name: cpupower\n    state: restarted\n  ignore_errors: \"{{ ansible_check_mode }}\"\n\n- name: enable rtirq service\n  systemd:\n    name: rtirq\n    enabled: yes\n  ignore_errors: \"{{ ansible_check_mode }}\"\n\n- name: enable rtkit service\n  systemd:\n    name: rtkit-daemon\n    enabled: yes\n  ignore_errors: \"{{ ansible_check_mode }}\"\n",
      "path": "/roles/tuning/handlers/"
    },
    {
      "filename": "test.yml",
      "content": "---\n- hosts: localhost\n  remote_user: root\n  roles:\n    - tuning\n",
      "path": "/roles/tuning/tests/"
    },
    {
      "filename": "rtkit.yml",
      "content": "---\n\n- block:\n    - name: Set rtirq defaults\n      copy:\n        src: etc/sysconfig/rtirq\n        dest: /etc/rtirq.conf\n        directory_mode: no\n        owner: root\n        group: root\n        mode: '0644'\n      register: rtirq_config\n\n    # rtkit package should be Installed before this happens\n    - name: Set rtkit parameters\n      copy:\n        src: etc/rtkit.conf\n        dest: /etc/rtkit.conf\n        directory_mode: no\n        owner: root\n        group: root\n        mode: '0644'\n      register: rtkit_conf\n\n    - name: Set rtkit systemd parameters\n      template:\n        src: usr/lib/systemd/system/rtkit-daemon.service.j2\n        dest: /usr/lib/systemd/system/rtkit-daemon.service\n        mode: '0644'\n      register: rtkit_systemd\n\n  tags: ['rtirq', 'rtkit']\n  notify:\n    - \"enable rtirq service\"\n    - \"enable rtkit service\"\n",
      "path": "/roles/tuning/tasks/"
    },
    {
      "filename": "tuned.yml",
      "content": "---\n\n- block:\n    - name: Enable tuned service\n      systemd:\n        name: tuned\n        enabled: yes\n        state: started\n      register: tuned_service\n      ignore_errors: \"{{ ansible_check_mode }}\"\n\n    - name: Print tuned_service output\n      debug:\n        msg: \"{{ tuned_service }}\"\n      when: debug is defined\n\n    - name: Install realtime-modified profile\n      copy:\n        src: etc/tuned/realtime-modified/tuned.conf\n        dest: /etc/tuned/realtime-modified/tuned.conf\n        owner: root\n        group: root\n        mode: '0644'\n\n    - name: Show tuned_service variable\n      debug:\n        msg: \"{{ tuned_profile }}\"\n\n    - name: Set tuned profile\n      shell: |\n        tuned-adm profile {{ tuned.profile }}\n      register: tuned_profile\n      changed_when: tuned_profile.rc != 0\n      when: tuned_service.state == 'started'\n      ignore_errors: \"{{ ansible_check_mode }}\"\n\n  tags: ['tuned']\n",
      "path": "/roles/tuning/tasks/"
    },
    {
      "filename": "cpupower.yml",
      "content": "---\n\n- block:\n    - name: Set cpucpower defaults\n      template:\n        src: etc/default/cpupower.j2\n        dest: /etc/default/cpupower\n        mode: '0644'\n        backup: yes\n      notify: restart cpupower service\n\n    - name: Enable cpupower service\n      service:\n        name: cpupower\n        enabled: True\n      when: ansible_system_vendor != \"QEMU\"\n      ignore_errors: \"{{ ansible_check_mode }}\"\n\n  tags: ['cpupower']\n\n# Do not use the irqbalance daemon, or do so carefully [4].\n# https://wiki.archlinux.org/title/Professional_audio#Tips_and_tricks\n- name: Disable irqbalance service\n  service:\n    name: irqbalance\n    enabled: False\n  ignore_errors: \"{{ ansible_check_mode }}\"\n  register: irqbalance_service\n  failed_when: (irqbalance_service.msg is defined and not 'Could not find the requested service irqbalance' in irqbalance_service.msg)\n\n\n# - name: Disable ananicy-cpp and bpftune\n#   service:\n#     name: \"{{ item }}\"\n#     enabled: False\n#   ignore_errors: True\n#   loop:\n#     - ananicy-cpp\n#     - bpftune\n",
      "path": "/roles/tuning/tasks/"
    },
    {
      "filename": "main.yml",
      "content": "---\n# tasks file for tuning\n\n- name: RT Tasks\n  debug:\n    msg: \"Starting RT tasks\"\n\n- name: Collect only selected facts\n  setup:\n    filter:\n    - 'ansible_system_vendor'\n\n- name: Ensure utillity config folders exist\n  file:\n    path: \"{{ item }}\"\n    state: directory\n  loop:\n    - /etc/security/limits.d\n    - /etc/sysctl.d\n    - /etc/tuned/realtime-modified\n  \n- name: Ensure user belongs to audio group\n  user:\n    name: \"{{ user.name }}\"\n    groups: \"audio\"\n    append: yes\n\n- name: Set rtprio, memlock and nice for audio group\n  copy:\n    content: |\n      @audio  - rtprio  98\n      @audio  - nice    -19\n      @audio  - memlock unlimited\n    dest: \"/etc/security/limits.d/99-realtime.conf\"\n    mode: '0644'\n    backup: True\n  ignore_errors: \"{{ ansible_check_mode }}\"\n  when: tune_for_realtime == True\n\n\n# It is safe to have this file even if\n# your hardware contains neither device\n# source: https://gentoostudio.org/?page_id=420\n- name: Set timer permissions in udev rules\n  copy:\n    content: |\n      KERNEL==\"rtc0\", GROUP=\"audio\"\n      KERNEL==\"hpet\", GROUP=\"audio\"\n    dest: \"/etc/udev/rules.d/40-timer-permissions.rules\"\n    mode: '0644'\n\n- name: Set sysctl parameters\n  copy:\n    src: etc/sysctl.d/99-cachyos-settings.conf\n    dest: /etc/sysctl.d/99-cachyos-settings.conf\n    mode: '0644'\n    backup: True\n  tags: ['sysctl']\n\n- import_tasks: cpupower.yml\n- import_tasks: rtkit.yml\n- import_tasks: tuned.yml\n",
      "path": "/roles/tuning/tasks/"
    },
    {
      "filename": "main.yml",
      "content": "---\n# vars file for tuning\n",
      "path": "/roles/tuning/vars/"
    },
    {
      "filename": "main.yml",
      "content": "---\n# defaults file for tuning\n\ntune_for_realtime: True\n\ncpupower:\n  governor: powersave\n  perf_bias: 4\n\ntuned:\n  profile: powersave\n\npackages:\n  - x86_energy_perf_policy\n",
      "path": "/roles/tuning/defaults/"
    },
    {
      "filename": "main.yml",
      "content": "galaxy_info:\n  author: your name\n  description: your role description\n  company: your company (optional)\n\n  # If the issue tracker for your role is not on github, uncomment the\n  # next line and provide a value\n  # issue_tracker_url: http://example.com/issue/tracker\n\n  # Choose a valid license ID from https://spdx.org - some suggested licenses:\n  # - BSD-3-Clause (default)\n  # - MIT\n  # - GPL-2.0-or-later\n  # - GPL-3.0-only\n  # - Apache-2.0\n  # - CC-BY-4.0\n  license: license (GPL-2.0-or-later, MIT, etc)\n\n  min_ansible_version: 2.1\n\n  # If this a Container Enabled role, provide the minimum Ansible Container version.\n  # min_ansible_container_version:\n\n  #\n  # Provide a list of supported platforms, and for each platform a list of versions.\n  # If you don't wish to enumerate all versions for a particular platform, use 'all'.\n  # To view available platforms and versions (or releases), visit:\n  # https://galaxy.ansible.com/api/v1/platforms/\n  #\n  # platforms:\n  # - name: Fedora\n  #   versions:\n  #   - all\n  #   - 25\n  # - name: SomePlatform\n  #   versions:\n  #   - all\n  #   - 1.0\n  #   - 7\n  #   - 99.99\n\n  galaxy_tags: []\n    # List tags for your role here, one per line. A tag is a keyword that describes\n    # and categorizes the role. Users find roles by searching for tags. Be sure to\n    # remove the '[]' above, if you add tags to this list.\n    #\n    # NOTE: A tag is limited to a single word comprised of alphanumeric characters.\n    #       Maximum 20 tags per role.\n\ndependencies: []\n  # List your role dependencies here, one per line. Be sure to remove the '[]' above,\n  # if you add dependencies to this list.\n",
      "path": "/roles/shell/meta/"
    },
    {
      "filename": "main.yml",
      "content": "---\n# handlers file for shell\n",
      "path": "/roles/shell/handlers/"
    },
    {
      "filename": "test.yml",
      "content": "---\n- hosts: localhost\n  remote_user: root\n  roles:\n    - shell\n",
      "path": "/roles/shell/tests/"
    },
    {
      "filename": "zsh.yml",
      "content": "---\n# tasks file for zsh\n\n- name: ZSH Tasks\n  debug:\n    msg: \"Starting zsh tasks\"\n\n- name: Install zsh\n  package:\n    name: \"{{ item }}\"\n    state: present\n  with_items:\n    - zsh\n    - zoxide\n  tags: ['packages']\n\n- name: Install oh-my-zsh\n  shell: |\n    if [ ! -d \"/usr/local/share/oh-my-zsh\" ]; then\n      export ZSH=\"/usr/local/share/oh-my-zsh\"\n      sh -c \"$(curl -fsSL https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh)\" \"\" --unattended\n    fi\n  tags: ['ohmyzsh']\n\n- name: Install fd and ripgrep ohmyzsh plugins\n  synchronize:\n    src: \"usr/local/share/oh-my-zsh/plugins/{{ item }}\"\n    dest: /usr/local/share/oh-my-zsh/plugins/\n    recursive: yes\n    mode: push\n    delete: no\n    checksum: yes\n    perms: no\n    rsync_opts:\n      - \"--update\"\n      - \"--omit-dir-times\"\n      - \"--progress\"\n      - \"--itemize-changes\"\n      - \"--chown=root:root\"\n      - \"--backup\"\n      - \"--suffix={{ suffix }}\"\n  with_items:\n    - fd\n    - ripgrep\n  tags: ['ohmyzsh']\n\n- name: Install zsh custom functions\n  synchronize:\n    src: home/.local/share/zsh\n    dest: \"{{ user.home }}/.local/share/\"\n    recursive: yes\n    mode: push\n    delete: no\n    checksum: yes\n    perms: no\n    owner: False\n    group: False\n    rsync_opts:\n      - \"--update\"\n      - \"--omit-dir-times\"\n      - \"--progress\"\n      - \"--itemize-changes\"\n  ignore_errors: \"{{ ansible_check_mode }}\"\n  tags: ['env', 'profile']\n\n# - name: Set permissions on zsh cutom function folder\n#   file:\n#     path: /usr/local/share/zsh\n#     state: directory\n#     owner: root\n#     group: root\n#     recurse: True\n\n- name: Set zsh profile configs\n  template:\n    src: \"{{ item }}.j2\"\n    dest: \"{{ user.home }}/{{ item }}\"\n    owner: \"{{ user.name }}\"\n    group: \"{{ user.group }}\"\n    mode: '0644'\n    backup: True\n  with_items:\n    - .zprofile\n    - .zshenv\n    - .zshrc\n    - .zlogin\n  tags: ['env', 'profile']\n\n\n# add asdf plugin to oh-my-zsh plugins var\n- name: Add asdf plugin to oh-my-zsh plugins\n  lineinfile:\n    path: \"{{ user.home }}/.zshrc\"\n    regexp: \"^plugins=\"\n    line: \"plugins=(asdf ansible bundler docker-compose copypath fd fzf ripgrep zsh-navigation-tools ruby history systemd web-search)\"\n    insertafter: 'ZSH_CUSTOM=\"$HOME/.local/share/zsh\"'\n    firstmatch: True\n  when: use_asdf is defined\n",
      "path": "/roles/shell/tasks/"
    },
    {
      "filename": "main.yml",
      "content": "---\n# tasks file for shell\n\n- import_tasks:\n    file: zsh.yml\n  tags: ['zsh', 'profile']\n\n- name: Set user shell\n  user:\n    name: \"{{ item }}\"\n    shell: \"{{ user.shell }}\"\n  with_items:\n    - \"{{ user.name }}\"\n    - root\n  tags: ['profile']\n\n- name: Set user aliases\n  template:\n    src: .aliases.j2\n    dest: \"{{ user.home }}/.aliases\"\n    owner: \"{{ user.name }}\"\n    group: \"{{ user.group }}\"\n    mode: '0644'\n    backup: true\n  tags: ['aliases', 'profile']\n",
      "path": "/roles/shell/tasks/"
    },
    {
      "filename": "main.yml",
      "content": "---\n# vars file for shell\n",
      "path": "/roles/shell/vars/"
    },
    {
      "filename": "main.yml",
      "content": "---\n# defaults file for shell\n\nzsh_theme: kphoen\n",
      "path": "/roles/shell/defaults/"
    },
    {
      "filename": "main.yml",
      "content": "galaxy_info:\n  author: your name\n  description: your role description\n  company: your company (optional)\n\n  # If the issue tracker for your role is not on github, uncomment the\n  # next line and provide a value\n  # issue_tracker_url: http://example.com/issue/tracker\n\n  # Choose a valid license ID from https://spdx.org - some suggested licenses:\n  # - BSD-3-Clause (default)\n  # - MIT\n  # - GPL-2.0-or-later\n  # - GPL-3.0-only\n  # - Apache-2.0\n  # - CC-BY-4.0\n  license: license (GPL-2.0-or-later, MIT, etc)\n\n  min_ansible_version: 2.1\n\n  # If this a Container Enabled role, provide the minimum Ansible Container version.\n  # min_ansible_container_version:\n\n  galaxy_tags: []\n    # List tags for your role here, one per line. A tag is a keyword that describes\n    # and categorizes the role. Users find roles by searching for tags. Be sure to\n    # remove the '[]' above, if you add tags to this list.\n    #\n    # NOTE: A tag is limited to a single word comprised of alphanumeric characters.\n    #       Maximum 20 tags per role.\n\ndependencies: []\n  # List your role dependencies here, one per line. Be sure to remove the '[]' above,\n  # if you add dependencies to this list.\n",
      "path": "/roles/i3/meta/"
    },
    {
      "filename": "main.yml",
      "content": "---\n# handlers file for i3\n- name: Reload i3\n  command: bash -lc \"i3-msg -s /run/user/{{ user.uid }}/i3/ipc-socket.* reload\"\n  become: False\n  ignore_errors: True\n",
      "path": "/roles/i3/handlers/"
    },
    {
      "filename": "test.yml",
      "content": "---\n- hosts: localhost\n  remote_user: root\n  roles:\n    - i3\n",
      "path": "/roles/i3/tests/"
    },
    {
      "filename": "packages.yml",
      "content": "---\n\n- name: install i3 packages\n  aur:\n    use: auto\n    name: \"{{ i3__packages }}\"\n    state: present\n  become: False    \n  when: ansible_os_family == \"Archlinux\"\n  tags: ['packages']\n",
      "path": "/roles/i3/tasks/"
    },
    {
      "filename": "main.yml",
      "content": "---\n\n- name: i3 Tasks\n  debug:\n    msg: \"Starting i3 tasks\"\n\n- import_tasks:\n    file: packages.yml\n  tags: ['packages']\n\n- name: Ensure i3 directories exist\n  file:\n    dest: \"{{ i3_directory_default_location }}/{{ item.dest }}\"\n    state: directory\n    owner: \"{{ item.owner | default(omit) }}\"\n    group: \"{{ item.group | default(omit) }}\"\n    mode: \"{{ item.mode | default(omit) }}\"\n    recurse: \"{{ item.recurse | default(false) }}\"\n  loop: \"{{ i3_directory_definitions }}\"\n  check_mode: no\n  tags: ['profile']\n\n# if this file does not exist, lightdm will fail to start\n- name: Set dmrc to selected window manager\n  copy:\n    content: |\n      [Desktop]\n      Session={{ window_manager }}\n    dest: \"{{ user.home }}/.dmrc\"\n    owner: \"{{ user.name }}\"\n    mode: '0644'\n\n- name: Install i3ipc module\n  pip:\n    name: i3ipc\n    executable: pip\n    state: present\n    extra_args: --break-system-packages\n  tags: ['packages', 'python']\n\n- name: Create i3 scripts folder\n  file:\n    path: /usr/share/i3/scripts\n    state: directory\n    owner: root\n    group: root\n\n- block:\n    - name: Set i3status-rs configuration\n      template:\n        src: \"{{ item }}.j2\"\n        dest: \"{{ user.home }}/.config/{{ item }}\"\n        owner: \"{{ user.name }}\"\n        group: \"{{ user.group }}\"\n        mode: '0644'\n        backup: yes\n      register: wmconfig\n      with_items:\n        - i3status-rust/config.toml\n        - i3status-rust/themes/syncopated.toml\n\n    - name: Set i3 configuration\n      template:\n        src: \"{{ item }}.j2\"\n        dest: \"{{ user.home }}/.config/i3/{{ item }}\"\n        owner: \"{{ user.name }}\"\n        group: \"{{ user.group }}\"\n        mode: '0644'\n        backup: yes\n      register: wmconfig\n      with_items:\n        - config\n        - modes/resize\n        - keybindings\n        - appearance\n        - window_behavior\n        # - window_assignments\n        # - autostart\n\n  notify:\n   - Reload i3\n  tags: ['profile']\n",
      "path": "/roles/i3/tasks/"
    },
    {
      "filename": "main.yml",
      "content": "---\n# vars file for i3\n",
      "path": "/roles/i3/vars/"
    },
    {
      "filename": "main.yml",
      "content": "---\n# defaults file for i3\n\ni3:\n  home: \"{{ lookup('env','HOME') }}/.config/i3\"\n  autostart: 'default'\n  assignments: 'default'\n  workspaces: 'default'\n  keybindings: 'default'\n  tray_output: 'primary'\n\n__i3_workspaces:\n  - workspace:\n    id: 1\n    name: \" 1 \"\n  - workspace:\n    id: 2\n    name: \" 2 \"\n  - workspace:\n    id: 3\n    name: \" 3 \"\n  - workspace:\n    id: 4\n    name: \" 4 \"\n  - workspace:\n    id: 5\n    name: \" 5 \"\n  - workspace:\n    id: 6\n    name: \" 6 \"\n  - workspace:\n    id: 7\n    name: \" 7 \"\n  - workspace:\n    id: 8\n    name: \" 8 \"\n  - workspace:\n    id: 9\n    name: \" 9 \"\n  - workspace:\n    id: 0\n    name: \" 0 \"\n\ni3_directory_default_mode: '0750'\n\n# The default directory owner when creating directories using `i3_directory_definitions`\ni3_directory_default_owner: \"{{ user.name }}\"\n\n# The default directory group when creating directories using `i3_directory_definitions`\ni3_directory_default_group: \"{{ user.group }}\"\n\ni3_directory_default_location: \"{{ user.home }}\"\n\ni3_directory_default_recurse: False\n\ni3_directory_definitions:\n  - dest: \".config/i3\"\n  - dest: \".config/i3/modes\"\n  - dest: \".config/i3status-rust/themes\"\n\ni3__packages:\n  - i3-wm\n  - i3status-rust\n",
      "path": "/roles/i3/defaults/"
    },
    {
      "filename": "main.yml",
      "content": "galaxy_info:\n  author: your name\n  description: your role description\n  company: your company (optional)\n\n  # If the issue tracker for your role is not on github, uncomment the\n  # next line and provide a value\n  # issue_tracker_url: http://example.com/issue/tracker\n\n  # Choose a valid license ID from https://spdx.org - some suggested licenses:\n  # - BSD-3-Clause (default)\n  # - MIT\n  # - GPL-2.0-or-later\n  # - GPL-3.0-only\n  # - Apache-2.0\n  # - CC-BY-4.0\n  license: license (GPL-2.0-or-later, MIT, etc)\n\n  min_ansible_version: 2.1\n\n  # If this a Container Enabled role, provide the minimum Ansible Container version.\n  # min_ansible_container_version:\n\n  galaxy_tags: []\n    # List tags for your role here, one per line. A tag is a keyword that describes\n    # and categorizes the role. Users find roles by searching for tags. Be sure to\n    # remove the '[]' above, if you add tags to this list.\n    #\n    # NOTE: A tag is limited to a single word comprised of alphanumeric characters.\n    #       Maximum 20 tags per role.\n\ndependencies: []\n  # List your role dependencies here, one per line. Be sure to remove the '[]' above,\n  # if you add dependencies to this list.\n",
      "path": "/roles/x11/meta/"
    },
    {
      "filename": "main.yml",
      "content": "---\n# handlers file for x11\n",
      "path": "/roles/x11/handlers/"
    },
    {
      "filename": "test.yml",
      "content": "---\n- hosts: localhost\n  remote_user: root\n  roles:\n    - x11\n",
      "path": "/roles/x11/tests/"
    },
    {
      "filename": "packages.yml",
      "content": "---\n\n- name: install xorg packages\n  aur:\n    use: auto\n    name: \"{{ xorg__packages }}\"\n    state: present\n  become: False\n  when: ansible_os_family == \"Archlinux\"\n  tags: ['packages']\n",
      "path": "/roles/x11/tasks/"
    },
    {
      "filename": "picom.yml",
      "content": "---\n#  - dest: \".config/picom\"\n\n- name: Set picom config\n  template:\n    src: \"picom.conf.j2\"\n    dest: \"{{ user.home }}/.config/picom.conf\"\n    owner: \"{{ user.name }}\"\n    group: \"{{ user.group }}\"\n    mode: '0644'\n    backup: yes\n  tags: [\"profile\", \"picom\"]\n",
      "path": "/roles/x11/tasks/"
    },
    {
      "filename": "dunst.yml",
      "content": "---\n\n#  - dest: \".config/dunst\"\n\n#TODO: Add dunst and picom xdg autostart desktop entries\n- name: Set dunst config\n  template:\n    src: \"dunst/dunstrc.j2\"\n    dest: \"{{ user.home }}/.config/dunst/dunstrc\"\n    owner: \"{{ user.name }}\"\n    group: \"{{ user.group }}\"\n    mode: '0644'\n    backup: yes\n  tags: [\"profile\", \"dunst\"]\n",
      "path": "/roles/x11/tasks/"
    },
    {
      "filename": "main.yml",
      "content": "---\n# tasks file for xorg\n- name: Xorg Tasks\n  debug:\n    msg: \"Starting xorg tasks\"\n\n- import_tasks:\n    file: packages.yml\n  tags: ['packages']\n\n- name: Set xorg.conf\n  template:\n    src: etc/X11/xorg.conf.j2\n    dest: /etc/X11/xorg.conf\n    owner: root\n    group: root\n    mode: '0644'\n    backup: yes\n  tags: [\"video\"]\n\n- block:\n    - name: Set video modules in mkinitcpio\n      template:\n        src: etc/mkinitcpio.conf.j2\n        dest: /etc/mkinitcpio.conf\n        owner: root\n        group: root\n        mode: '0644'\n        backup: yes\n      register: mkinitcpio_conf\n\n    - name: Re-create ramdisk if config changed\n      shell: mkinitcpio -P\n      when: mkinitcpio_conf.changed\n\n  when: (ansible_distribution != 'EndeavourOS' or ansible_facts[\"lsb\"][\"id\"] != 'EndeavourOS')\n  tags: ['video', 'mkinitcpio']\n\n- name: Disable vblank\n  copy:\n    content: |\n      <device screen=\"0\" driver=\"dri2\">\n          <application name=\"Default\">\n              <option name=\"vblank_mode\" value=\"0\"/>\n          </application>\n      </device>\n\n    dest: \"{{ user.home }}/.drirc\"\n    owner: \"{{ user.name }}\"\n    group: \"{{ user.group }}\"\n  when: disable_vblank is defined\n\n- name: Set xserver configs\n  template:\n    src: \"home/{{ item }}.j2\"\n    dest: \"{{ user.home }}/{{ item }}\"\n    owner: \"{{ user.name }}\"\n    group: \"{{ user.group }}\"\n    mode: \"0644\"\n    backup: yes\n  with_items:\n    - .xprofile\n    - .xserverrc\n    - .Xresources\n  register: xconfig\n  changed_when: (xconfig.msg is defined and not 'All items completed' in xconfig.msg)\n  tags: ['env', 'profile']\n\n- name: Set xinitrc config\n  template:\n    src: home/.xinitrc.j2\n    dest: \"{{ user.home }}/.xinitrc\"\n    owner: \"{{ user.name }}\"\n    group: \"{{ user.group }}\"\n    mode: '0755'\n    backup: True\n\n# - name: Ensure .xinitrc is executable\n#   file:\n#     path: \"{{ user.home }}/.xinitrc\"\n#     mode: \"0755\"\n#   ignore_errors: \"{{ ansible_check_mode }}\"\n#   tags: ['env', 'profile']\n",
      "path": "/roles/x11/tasks/"
    },
    {
      "filename": "main.yml",
      "content": "---\n# vars file for x11\n",
      "path": "/roles/x11/vars/"
    },
    {
      "filename": "main.yml",
      "content": "---\n# defaults file for x11\nx:\n  autostart: 'default'\n\nxorg__packages:\n  - dunst\n  - picom\n  - xarchiver\n  - xclip\n  - xcursor-breeze\n  - xdot\n  - xdotool\n  - xf86-input-libinput\n  - xf86-input-wacom\n  - xf86-video-fbdev\n  - xf86-video-intel\n  - xf86-video-vesa\n  - xkill-shortcut\n  - xob\n  - xorg-bdftopcf\n  - xorg-fonts-alias-75dpi\n  - xorg-fonts-alias-100dpi\n  - xorg-fonts-alias-cyrillic\n  - xorg-fonts-alias-misc\n  - xorg-fonts-misc\n  - xorg-iceauth\n  - xorg-mkfontscale\n  - xorg-server\n  - xorg-sessreg\n  - xorg-setxkbmap\n  - xorg-smproxy\n  - xorg-x11perf\n  - xorg-xauth\n  - xorg-xbacklight\n  - xorg-xcmsdb\n  - xorg-xcursorgen\n  - xorg-xdpyinfo\n  - xorg-xdriinfo\n  - xorg-xev\n  - xorg-xgamma\n  - xorg-xhost\n  - xorg-xinit\n  - xorg-xinput\n  - xorg-xkbcomp\n  - xorg-xkbevd\n  - xorg-xkbutils\n  - xorg-xkill\n  - xorg-xlsatoms\n  - xorg-xlsclients\n  - xorg-xlsfonts\n  - xorg-xmodmap\n  - xorg-xpr\n  - xorg-xprop\n  - xorg-xrandr\n  - xorg-xrdb\n  - xorg-xrefresh\n  - xorg-xset\n  - xorg-xsetroot\n  - xorg-xvinfo\n  - xorg-xwd\n  - xorg-xwininfo\n  - xorg-xwud\n",
      "path": "/roles/x11/defaults/"
    },
    {
      "filename": "main.yml",
      "content": "galaxy_info:\n  author: your name\n  description: your role description\n  company: your company (optional)\n\n  # If the issue tracker for your role is not on github, uncomment the\n  # next line and provide a value\n  # issue_tracker_url: http://example.com/issue/tracker\n\n  # Choose a valid license ID from https://spdx.org - some suggested licenses:\n  # - BSD-3-Clause (default)\n  # - MIT\n  # - GPL-2.0-or-later\n  # - GPL-3.0-only\n  # - Apache-2.0\n  # - CC-BY-4.0\n  license: license (GPL-2.0-or-later, MIT, etc)\n\n  min_ansible_version: 2.1\n\n  # If this a Container Enabled role, provide the minimum Ansible Container version.\n  # min_ansible_container_version:\n\n  #\n  # Provide a list of supported platforms, and for each platform a list of versions.\n  # If you don't wish to enumerate all versions for a particular platform, use 'all'.\n  # To view available platforms and versions (or releases), visit:\n  # https://galaxy.ansible.com/api/v1/platforms/\n  #\n  # platforms:\n  # - name: Fedora\n  #   versions:\n  #   - all\n  #   - 25\n  # - name: SomePlatform\n  #   versions:\n  #   - all\n  #   - 1.0\n  #   - 7\n  #   - 99.99\n\n  galaxy_tags: []\n    # List tags for your role here, one per line. A tag is a keyword that describes\n    # and categorizes the role. Users find roles by searching for tags. Be sure to\n    # remove the '[]' above, if you add tags to this list.\n    #\n    # NOTE: A tag is limited to a single word comprised of alphanumeric characters.\n    #       Maximum 20 tags per role.\n\ndependencies: []\n  # List your role dependencies here, one per line. Be sure to remove the '[]' above,\n  # if you add dependencies to this list.\n",
      "path": "/roles/obs-studio/meta/"
    },
    {
      "filename": "main.yml",
      "content": "---\n# handlers file for obs-studio\n",
      "path": "/roles/obs-studio/handlers/"
    },
    {
      "filename": "test.yml",
      "content": "---\n- hosts: localhost\n  remote_user: root\n  roles:\n    - obs-studio\n",
      "path": "/roles/obs-studio/tests/"
    },
    {
      "filename": "mediamtx.yml",
      "content": "###############################################\n# Global settings\n\n# Settings in this section are applied anywhere.\n\n###############################################\n# Global settings -> General\n\n# Verbosity of the program; available values are \"error\", \"warn\", \"info\", \"debug\".\nlogLevel: info\n# Destinations of log messages; available values are \"stdout\", \"file\" and \"syslog\".\nlogDestinations: [stdout]\n# If \"file\" is in logDestinations, this is the file which will receive the logs.\nlogFile: mediamtx.log\n\n# Timeout of read operations.\nreadTimeout: 10s\n# Timeout of write operations.\nwriteTimeout: 10s\n# Size of the queue of outgoing packets.\n# A higher value allows to increase throughput, a lower value allows to save RAM.\nwriteQueueSize: 1024\n# Maximum size of outgoing UDP packets.\n# This can be decreased to avoid fragmentation on networks with a low UDP MTU.\nudpMaxPayloadSize: 1472\n\n# HTTP URL to perform external authentication.\n# Every time a user wants to authenticate, the server calls this URL\n# with the POST method and a body containing:\n# {\n#   \"ip\": \"ip\",\n#   \"user\": \"user\",\n#   \"password\": \"password\",\n#   \"path\": \"path\",\n#   \"protocol\": \"rtsp|rtmp|hls|webrtc\",\n#   \"id\": \"id\",\n#   \"action\": \"read|publish\",\n#   \"query\": \"query\"\n# }\n# If the response code is 20x, authentication is accepted, otherwise\n# it is discarded.\nexternalAuthenticationURL:\n\n# Enable Prometheus-compatible metrics.\nmetrics: no\n# Address of the metrics listener.\nmetricsAddress: 127.0.0.1:9998\n\n# Enable pprof-compatible endpoint to monitor performances.\npprof: no\n# Address of the pprof listener.\npprofAddress: 127.0.0.1:9999\n\n# Command to run when a client connects to the server.\n# This is terminated with SIGINT when a client disconnects from the server.\n# The following environment variables are available:\n# * RTSP_PORT: RTSP server port\n# * MTX_CONN_TYPE: connection type\n# * MTX_CONN_ID: connection ID\nrunOnConnect:\n# Restart the command if it exits.\nrunOnConnectRestart: no\n# Command to run when a client disconnects from the server.\n# Environment variables are the same of runOnConnect.\nrunOnDisconnect:\n\n###############################################\n# Global settings -> API\n\n# Enable controlling the server through the API.\napi: no\n# Address of the API listener.\napiAddress: 127.0.0.1:9997\n\n###############################################\n# Global settings -> Playback server\n\n# Enable downloading recordings from the playback server.\nplayback: no\n# Address of the playback server listener.\nplaybackAddress: :9996\n\n###############################################\n# Global settings -> RTSP server\n\n# Enable publishing and reading streams with the RTSP protocol.\nrtsp: no\n# List of enabled RTSP transport protocols.\n# UDP is the most performant, but doesn't work when there's a NAT/firewall between\n# server and clients, and doesn't support encryption.\n# UDP-multicast allows to save bandwidth when clients are all in the same LAN.\n# TCP is the most versatile, and does support encryption.\n# The handshake is always performed with TCP.\nprotocols: [udp, multicast, tcp]\n# Encrypt handshakes and TCP streams with TLS (RTSPS).\n# Available values are \"no\", \"strict\", \"optional\".\nencryption: \"no\"\n# Address of the TCP/RTSP listener. This is needed only when encryption is \"no\" or \"optional\".\nrtspAddress: :8554\n# Address of the TCP/TLS/RTSPS listener. This is needed only when encryption is \"strict\" or \"optional\".\nrtspsAddress: :8322\n# Address of the UDP/RTP listener. This is needed only when \"udp\" is in protocols.\nrtpAddress: :8000\n# Address of the UDP/RTCP listener. This is needed only when \"udp\" is in protocols.\nrtcpAddress: :8001\n# IP range of all UDP-multicast listeners. This is needed only when \"multicast\" is in protocols.\nmulticastIPRange: 224.1.0.0/16\n# Port of all UDP-multicast/RTP listeners. This is needed only when \"multicast\" is in protocols.\nmulticastRTPPort: 8002\n# Port of all UDP-multicast/RTCP listeners. This is needed only when \"multicast\" is in protocols.\nmulticastRTCPPort: 8003\n# Path to the server key. This is needed only when encryption is \"strict\" or \"optional\".\n# This can be generated with:\n# openssl genrsa -out server.key 2048\n# openssl req -new -x509 -sha256 -key server.key -out server.crt -days 3650\nserverKey: server.key\n# Path to the server certificate. This is needed only when encryption is \"strict\" or \"optional\".\nserverCert: server.crt\n# Authentication methods. Available are \"basic\" and \"digest\".\n# \"digest\" doesn't provide any additional security and is available for compatibility reasons only.\nauthMethods: [basic]\n\n###############################################\n# Global settings -> RTMP server\n\n# Enable publishing and reading streams with the RTMP protocol.\nrtmp: yes\n# Address of the RTMP listener. This is needed only when encryption is \"no\" or \"optional\".\nrtmpAddress: :1935\n# Encrypt connections with TLS (RTMPS).\n# Available values are \"no\", \"strict\", \"optional\".\nrtmpEncryption: \"no\"\n# Address of the RTMPS listener. This is needed only when encryption is \"strict\" or \"optional\".\nrtmpsAddress: :1936\n# Path to the server key. This is needed only when encryption is \"strict\" or \"optional\".\n# This can be generated with:\n# openssl genrsa -out server.key 2048\n# openssl req -new -x509 -sha256 -key server.key -out server.crt -days 3650\nrtmpServerKey: server.key\n# Path to the server certificate. This is needed only when encryption is \"strict\" or \"optional\".\nrtmpServerCert: server.crt\n\n###############################################\n# Global settings -> HLS server\n\n# Enable reading streams with the HLS protocol.\nhls: no\n# Address of the HLS listener.\nhlsAddress: :8888\n# Enable TLS/HTTPS on the HLS server.\n# This is required for Low-Latency HLS.\nhlsEncryption: no\n# Path to the server key. This is needed only when encryption is yes.\n# This can be generated with:\n# openssl genrsa -out server.key 2048\n# openssl req -new -x509 -sha256 -key server.key -out server.crt -days 3650\nhlsServerKey: server.key\n# Path to the server certificate.\nhlsServerCert: server.crt\n# By default, HLS is generated only when requested by a user.\n# This option allows to generate it always, avoiding the delay between request and generation.\nhlsAlwaysRemux: no\n# Variant of the HLS protocol to use. Available options are:\n# * mpegts - uses MPEG-TS segments, for maximum compatibility.\n# * fmp4 - uses fragmented MP4 segments, more efficient.\n# * lowLatency - uses Low-Latency HLS.\nhlsVariant: lowLatency\n# Number of HLS segments to keep on the server.\n# Segments allow to seek through the stream.\n# Their number doesn't influence latency.\nhlsSegmentCount: 7\n# Minimum duration of each segment.\n# A player usually puts 3 segments in a buffer before reproducing the stream.\n# The final segment duration is also influenced by the interval between IDR frames,\n# since the server changes the duration in order to include at least one IDR frame\n# in each segment.\nhlsSegmentDuration: 1s\n# Minimum duration of each part.\n# A player usually puts 3 parts in a buffer before reproducing the stream.\n# Parts are used in Low-Latency HLS in place of segments.\n# Part duration is influenced by the distance between video/audio samples\n# and is adjusted in order to produce segments with a similar duration.\nhlsPartDuration: 200ms\n# Maximum size of each segment.\n# This prevents RAM exhaustion.\nhlsSegmentMaxSize: 50M\n# Value of the Access-Control-Allow-Origin header provided in every HTTP response.\n# This allows to play the HLS stream from an external website.\nhlsAllowOrigin: '*'\n# List of IPs or CIDRs of proxies placed before the HLS server.\n# If the server receives a request from one of these entries, IP in logs\n# will be taken from the X-Forwarded-For header.\nhlsTrustedProxies: []\n# Directory in which to save segments, instead of keeping them in the RAM.\n# This decreases performance, since reading from disk is less performant than\n# reading from RAM, but allows to save RAM.\nhlsDirectory: ''\n\n###############################################\n# Global settings -> WebRTC server\n\n# Enable publishing and reading streams with the WebRTC protocol.\nwebrtc: no\n# Address of the WebRTC HTTP listener.\nwebrtcAddress: :8889\n# Enable TLS/HTTPS on the WebRTC server.\nwebrtcEncryption: no\n# Path to the server key.\n# This can be generated with:\n# openssl genrsa -out server.key 2048\n# openssl req -new -x509 -sha256 -key server.key -out server.crt -days 3650\nwebrtcServerKey: server.key\n# Path to the server certificate.\nwebrtcServerCert: server.crt\n# Value of the Access-Control-Allow-Origin header provided in every HTTP response.\n# This allows to play the WebRTC stream from an external website.\nwebrtcAllowOrigin: '*'\n# List of IPs or CIDRs of proxies placed before the WebRTC server.\n# If the server receives a request from one of these entries, IP in logs\n# will be taken from the X-Forwarded-For header.\nwebrtcTrustedProxies: []\n# Address of a local UDP listener that will receive connections.\n# Use a blank string to disable.\nwebrtcLocalUDPAddress: :8189\n# Address of a local TCP listener that will receive connections.\n# This is disabled by default since TCP is less efficient than UDP and\n# introduces a progressive delay when network is congested.\nwebrtcLocalTCPAddress: ''\n# WebRTC clients need to know the IP of the server.\n# Gather IPs from interfaces and send them to clients.\nwebrtcIPsFromInterfaces: yes\n# List of interfaces whose IPs will be sent to clients.\n# An empty value means to use all available interfaces.\nwebrtcIPsFromInterfacesList: []\n# List of additional hosts or IPs to send to clients.\nwebrtcAdditionalHosts: []\n# ICE servers. Needed only when local listeners can't be reached by clients.\n# STUN servers allows to obtain and share the public IP of the server.\n# TURN/TURNS servers forces all traffic through them.\nwebrtcICEServers2: []\n  # - url: stun:stun.l.google.com:19302\n  # if user is \"AUTH_SECRET\", then authentication is secret based.\n  # the secret must be inserted into the password field.\n  # username: ''\n  # password: ''\n\n###############################################\n# Global settings -> SRT server\n\n# Enable publishing and reading streams with the SRT protocol.\nsrt: no\n# Address of the SRT listener.\nsrtAddress: :8890\n\n###############################################\n# Default path settings\n\n# Settings in \"pathDefaults\" are applied anywhere,\n# unless they are overridden in \"paths\".\npathDefaults:\n\n  ###############################################\n  # Default path settings -> General\n\n  # Source of the stream. This can be:\n  # * publisher -> the stream is provided by a RTSP, RTMP, WebRTC or SRT client\n  # * rtsp://existing-url -> the stream is pulled from another RTSP server / camera\n  # * rtsps://existing-url -> the stream is pulled from another RTSP server / camera with RTSPS\n  # * rtmp://existing-url -> the stream is pulled from another RTMP server / camera\n  # * rtmps://existing-url -> the stream is pulled from another RTMP server / camera with RTMPS\n  # * http://existing-url/stream.m3u8 -> the stream is pulled from another HLS server / camera\n  # * https://existing-url/stream.m3u8 -> the stream is pulled from another HLS server / camera with HTTPS\n  # * udp://ip:port -> the stream is pulled with UDP, by listening on the specified IP and port\n  # * srt://existing-url -> the stream is pulled from another SRT server / camera\n  # * whep://existing-url -> the stream is pulled from another WebRTC server / camera\n  # * wheps://existing-url -> the stream is pulled from another WebRTC server / camera with HTTPS\n  # * redirect -> the stream is provided by another path or server\n  # * rpiCamera -> the stream is provided by a Raspberry Pi Camera\n  # If path name is a regular expression, $G1, G2, etc will be replaced\n  # with regular expression groups.\n  source: publisher\n  # If the source is a URL, and the source certificate is self-signed\n  # or invalid, you can provide the fingerprint of the certificate in order to\n  # validate it anyway. It can be obtained by running:\n  # openssl s_client -connect source_ip:source_port </dev/null 2>/dev/null | sed -n '/BEGIN/,/END/p' > server.crt\n  # openssl x509 -in server.crt -noout -fingerprint -sha256 | cut -d \"=\" -f2 | tr -d ':'\n  sourceFingerprint:\n  # If the source is a URL, it will be pulled only when at least\n  # one reader is connected, saving bandwidth.\n  sourceOnDemand: no\n  # If sourceOnDemand is \"yes\", readers will be put on hold until the source is\n  # ready or until this amount of time has passed.\n  sourceOnDemandStartTimeout: 10s\n  # If sourceOnDemand is \"yes\", the source will be closed when there are no\n  # readers connected and this amount of time has passed.\n  sourceOnDemandCloseAfter: 10s\n  # Maximum number of readers. Zero means no limit.\n  maxReaders: 0\n  # SRT encryption passphrase require to read from this path\n  srtReadPassphrase:\n  # If the stream is not available, redirect readers to this path.\n  # It can be can be a relative path (i.e. /otherstream) or an absolute RTSP URL.\n  fallback:\n\n  ###############################################\n  # Default path settings -> Record and playback\n\n  # Record streams to disk.\n  record: no\n  # Enable serving recordings with the playback server.\n  playback: yes\n  # Path of recording segments.\n  # Extension is added automatically.\n  # Available variables are %path (path name), %Y %m %d %H %M %S %f %s (time in strftime format)\n  recordPath: ./recordings/%path/%Y-%m-%d_%H-%M-%S-%f\n  # Format of recorded segments.\n  # Available formats are \"fmp4\" (fragmented MP4) and \"mpegts\" (MPEG-TS).\n  recordFormat: fmp4\n  # fMP4 segments are concatenation of small MP4 files (parts), each with this duration.\n  # MPEG-TS segments are concatenation of 188-bytes packets, flushed to disk with this period.\n  # When a system failure occurs, the last part gets lost.\n  # Therefore, the part duration is equal to the RPO (recovery point objective).\n  recordPartDuration: 100ms\n  # Minimum duration of each segment.\n  recordSegmentDuration: 1h\n  # Delete segments after this timespan.\n  # Set to 0s to disable automatic deletion.\n  recordDeleteAfter: 24h\n\n  ###############################################\n  # Default path settings -> Authentication\n\n  # Username required to publish.\n  # Hashed values can be inserted with the \"argon2:\" or \"sha256:\" prefix.\n  publishUser:\n  # Password required to publish.\n  # Hashed values can be inserted with the \"argon2:\" or \"sha256:\" prefix.\n  publishPass:\n  # IPs or networks (x.x.x.x/24) allowed to publish.\n  publishIPs: []\n\n  # Username required to read.\n  # Hashed values can be inserted with the \"argon2:\" or \"sha256:\" prefix.\n  readUser:\n  # password required to read.\n  # Hashed values can be inserted with the \"argon2:\" or \"sha256:\" prefix.\n  readPass:\n  # IPs or networks (x.x.x.x/24) allowed to read.\n  readIPs: []\n\n  ###############################################\n  # Default path settings -> Publisher source (when source is \"publisher\")\n\n  # Allow another client to disconnect the current publisher and publish in its place.\n  overridePublisher: yes\n  # SRT encryption passphrase required to publish to this path\n  srtPublishPassphrase:\n\n  ###############################################\n  # Default path settings -> RTSP source (when source is a RTSP or a RTSPS URL)\n\n  # Transport protocol used to pull the stream. available values are \"automatic\", \"udp\", \"multicast\", \"tcp\".\n  rtspTransport: automatic\n  # Support sources that don't provide server ports or use random server ports. This is a security issue\n  # and must be used only when interacting with sources that require it.\n  rtspAnyPort: no\n  # Range header to send to the source, in order to start streaming from the specified offset.\n  # available values:\n  # * clock: Absolute time\n  # * npt: Normal Play Time\n  # * smpte: SMPTE timestamps relative to the start of the recording\n  rtspRangeType:\n  # Available values:\n  # * clock: UTC ISO 8601 combined date and time string, e.g. 20230812T120000Z\n  # * npt: duration such as \"300ms\", \"1.5m\" or \"2h45m\", valid time units are \"ns\", \"us\" (or \"µs\"), \"ms\", \"s\", \"m\", \"h\"\n  # * smpte: duration such as \"300ms\", \"1.5m\" or \"2h45m\", valid time units are \"ns\", \"us\" (or \"µs\"), \"ms\", \"s\", \"m\", \"h\"\n  rtspRangeStart:\n\n  ###############################################\n  # Default path settings -> Redirect source (when source is \"redirect\")\n\n  # RTSP URL which clients will be redirected to.\n  sourceRedirect:\n\n  ###############################################\n  # Default path settings -> Raspberry Pi Camera source (when source is \"rpiCamera\")\n\n  # ID of the camera\n  rpiCameraCamID: 0\n  # width of frames\n  rpiCameraWidth: 1920\n  # height of frames\n  rpiCameraHeight: 1080\n  # flip horizontally\n  rpiCameraHFlip: false\n  # flip vertically\n  rpiCameraVFlip: false\n  # brightness [-1, 1]\n  rpiCameraBrightness: 0\n  # contrast [0, 16]\n  rpiCameraContrast: 1\n  # saturation [0, 16]\n  rpiCameraSaturation: 1\n  # sharpness [0, 16]\n  rpiCameraSharpness: 1\n  # exposure mode.\n  # values: normal, short, long, custom\n  rpiCameraExposure: normal\n  # auto-white-balance mode.\n  # values: auto, incandescent, tungsten, fluorescent, indoor, daylight, cloudy, custom\n  rpiCameraAWB: auto\n  # auto-white-balance fixed gains. This can be used in place of rpiCameraAWB.\n  # format: [red,blue]\n  rpiCameraAWBGains: [0, 0]\n  # denoise operating mode.\n  # values: off, cdn_off, cdn_fast, cdn_hq\n  rpiCameraDenoise: \"off\"\n  # fixed shutter speed, in microseconds.\n  rpiCameraShutter: 0\n  # metering mode of the AEC/AGC algorithm.\n  # values: centre, spot, matrix, custom\n  rpiCameraMetering: centre\n  # fixed gain\n  rpiCameraGain: 0\n  # EV compensation of the image [-10, 10]\n  rpiCameraEV: 0\n  # Region of interest, in format x,y,width,height\n  rpiCameraROI:\n  # whether to enable HDR on Raspberry Camera 3.\n  rpiCameraHDR: false\n  # tuning file\n  rpiCameraTuningFile:\n  # sensor mode, in format [width]:[height]:[bit-depth]:[packing]\n  # bit-depth and packing are optional.\n  rpiCameraMode:\n  # frames per second\n  rpiCameraFPS: 30\n  # period between IDR frames\n  rpiCameraIDRPeriod: 60\n  # bitrate\n  rpiCameraBitrate: 1000000\n  # H264 profile\n  rpiCameraProfile: main\n  # H264 level\n  rpiCameraLevel: '4.1'\n  # Autofocus mode\n  # values: auto, manual, continuous\n  rpiCameraAfMode: continuous\n  # Autofocus range\n  # values: normal, macro, full\n  rpiCameraAfRange: normal\n  # Autofocus speed\n  # values: normal, fast\n  rpiCameraAfSpeed: normal\n  # Lens position (for manual autofocus only), will be set to focus to a specific distance\n  # calculated by the following formula: d = 1 / value\n  # Examples: 0 moves the lens to infinity.\n  #           0.5 moves the lens to focus on objects 2m away.\n  #           2 moves the lens to focus on objects 50cm away.\n  rpiCameraLensPosition: 0.0\n  # Specifies the autofocus window, in the form x,y,width,height where the coordinates\n  # are given as a proportion of the entire image.\n  rpiCameraAfWindow:\n  # enables printing text on each frame.\n  rpiCameraTextOverlayEnable: false\n  # text that is printed on each frame.\n  # format is the one of the strftime() function.\n  rpiCameraTextOverlay: '%Y-%m-%d %H:%M:%S - MediaMTX'\n\n  ###############################################\n  # Default path settings -> Hooks\n\n  # Command to run when this path is initialized.\n  # This can be used to publish a stream when the server is launched.\n  # This is terminated with SIGINT when the program closes.\n  # The following environment variables are available:\n  # * MTX_PATH: path name\n  # * RTSP_PORT: RTSP server port\n  # * G1, G2, ...: regular expression groups, if path name is\n  #   a regular expression.\n  runOnInit:\n  # Restart the command if it exits.\n  runOnInitRestart: no\n\n  # Command to run when this path is requested by a reader\n  # and no one is publishing to this path yet.\n  # This can be used to publish a stream on demand.\n  # This is terminated with SIGINT when there are no readers anymore.\n  # The following environment variables are available:\n  # * MTX_PATH: path name\n  # * MTX_QUERY: query parameters (passed by first reader)\n  # * RTSP_PORT: RTSP server port\n  # * G1, G2, ...: regular expression groups, if path name is\n  #   a regular expression.\n  runOnDemand:\n  # Restart the command if it exits.\n  runOnDemandRestart: no\n  # Readers will be put on hold until the runOnDemand command starts publishing\n  # or until this amount of time has passed.\n  runOnDemandStartTimeout: 10s\n  # The command will be closed when there are no\n  # readers connected and this amount of time has passed.\n  runOnDemandCloseAfter: 10s\n  # Command to run when there are no readers anymore.\n  # Environment variables are the same of runOnDemand.\n  runOnUnDemand:\n\n  # Command to run when the stream is ready to be read, whenever it is\n  # published by a client or pulled from a server / camera.\n  # This is terminated with SIGINT when the stream is not ready anymore.\n  # The following environment variables are available:\n  # * MTX_PATH: path name\n  # * MTX_QUERY: query parameters (passed by publisher)\n  # * RTSP_PORT: RTSP server port\n  # * G1, G2, ...: regular expression groups, if path name is\n  #   a regular expression.\n  # * MTX_SOURCE_TYPE: source type\n  # * MTX_SOURCE_ID: source ID\n  runOnReady:\n  # Restart the command if it exits.\n  runOnReadyRestart: no\n  # Command to run when the stream is not available anymore.\n  # Environment variables are the same of runOnReady.\n  runOnNotReady:\n\n  # Command to run when a client starts reading.\n  # This is terminated with SIGINT when a client stops reading.\n  # The following environment variables are available:\n  # * MTX_PATH: path name\n  # * MTX_QUERY: query parameters (passed by reader)\n  # * RTSP_PORT: RTSP server port\n  # * G1, G2, ...: regular expression groups, if path name is\n  #   a regular expression.\n  # * MTX_READER_TYPE: reader type\n  # * MTX_READER_ID: reader ID\n  runOnRead:\n  # Restart the command if it exits.\n  runOnReadRestart: no\n  # Command to run when a client stops reading.\n  # Environment variables are the same of runOnRead.\n  runOnUnread:\n\n  # Command to run when a recording segment is created.\n  # The following environment variables are available:\n  # * MTX_PATH: path name\n  # * RTSP_PORT: RTSP server port\n  # * G1, G2, ...: regular expression groups, if path name is\n  #   a regular expression.\n  # * MTX_SEGMENT_PATH: segment file path\n  runOnRecordSegmentCreate:\n\n  # Command to run when a recording segment is complete.\n  # The following environment variables are available:\n  # * MTX_PATH: path name\n  # * RTSP_PORT: RTSP server port\n  # * G1, G2, ...: regular expression groups, if path name is\n  #   a regular expression.\n  # * MTX_SEGMENT_PATH: segment file path\n  runOnRecordSegmentComplete:\n\n###############################################\n# Path settings\n\n# Settings in \"paths\" are applied to specific paths, and the map key\n# is the name of the path.\n# Any setting in \"pathDefaults\" can be overridden here.\n# It's possible to use regular expressions by using a tilde as prefix,\n# for example \"~^(test1|test2)$\" will match both \"test1\" and \"test2\",\n# for example \"~^prefix\" will match all paths that start with \"prefix\".\npaths:\n  # example:\n  # my_camera:\n  #   source: rtsp://my_camera\n\n  # Settings under path \"all_others\" are applied to all paths that\n  # do not match another entry.\n  all_others:\n",
      "path": "/roles/obs-studio/files/etc/mediamtx/"
    },
    {
      "filename": "mediamtx.yml",
      "content": "---\n# tasks file for multimedia\n\n- name: Set mediamtx config\n  copy:\n    src: etc/mediamtx/mediamtx.yml\n    dest: /etc/mediamtx/mediamtx.yml\n    backup: True\n  tags: ['mediamtx']\n\n- name: Enable mediamtx service\n  service:\n    name: mediamtx\n    state: stopped\n    enabled: True\n  when: serivces.mediamtx.enabled is defined\n  tags: ['mediamtx']\n",
      "path": "/roles/obs-studio/tasks/"
    },
    {
      "filename": "main.yml",
      "content": "---\n# tasks file for obs-studio\n",
      "path": "/roles/obs-studio/tasks/"
    },
    {
      "filename": "main.yml",
      "content": "---\n# vars file for obs-studio\n",
      "path": "/roles/obs-studio/vars/"
    },
    {
      "filename": "main.yml",
      "content": "---\n# defaults file for obs-studio\n\npackages:\n  - obs-studio\n  - obs-rtspserver\n",
      "path": "/roles/obs-studio/defaults/"
    },
    {
      "filename": "main.yml",
      "content": "galaxy_info:\n  author: your name\n  description: your role description\n  company: your company (optional)\n\n  # If the issue tracker for your role is not on github, uncomment the\n  # next line and provide a value\n  # issue_tracker_url: http://example.com/issue/tracker\n\n  # Choose a valid license ID from https://spdx.org - some suggested licenses:\n  # - BSD-3-Clause (default)\n  # - MIT\n  # - GPL-2.0-or-later\n  # - GPL-3.0-only\n  # - Apache-2.0\n  # - CC-BY-4.0\n  license: license (GPL-2.0-or-later, MIT, etc)\n\n  min_ansible_version: 2.1\n\n  # If this a Container Enabled role, provide the minimum Ansible Container version.\n  # min_ansible_container_version:\n\n  galaxy_tags: []\n    # List tags for your role here, one per line. A tag is a keyword that describes\n    # and categorizes the role. Users find roles by searching for tags. Be sure to\n    # remove the '[]' above, if you add tags to this list.\n    #\n    # NOTE: A tag is limited to a single word comprised of alphanumeric characters.\n    #       Maximum 20 tags per role.\n\ndependencies: []\n  # List your role dependencies here, one per line. Be sure to remove the '[]' above,\n  # if you add dependencies to this list.\n",
      "path": "/roles/jackd/meta/"
    },
    {
      "filename": "main.yml",
      "content": "---\n# handlers file for jackd\n- name: reload user systemd\n  systemd:\n    daemon_reload: yes\n  become_user: \"{{ user.name }}\"\n\n- name: reload systemd\n  systemd:\n    daemon_reload: yes\n",
      "path": "/roles/jackd/handlers/"
    },
    {
      "filename": "test.yml",
      "content": "---\n- hosts: localhost\n  remote_user: root\n  roles:\n    - jackd\n",
      "path": "/roles/jackd/tests/"
    },
    {
      "filename": "main.yml",
      "content": "---\n# tasks file for jackd\n- name: Jack Tasks\n  debug:\n    msg: \"Starting jack tasks\"\n\n- name: Collect only selected facts\n  setup:\n    filter:\n      - 'ansible_system_vendor'\n\n- name: Create environment file for jack_control.service\n  copy:\n    content: |\n      DBUS_SESSION_BUS_ADDRESS=unix:path=/run/user/{{ user.uid }}/bus\n    dest: \"/etc/default/jack_control\"\n\n- name: Create systemd user directory\n  file:\n    path: \"{{ user.home }}/.config/systemd/user\"\n    state: directory\n    owner: \"{{ user.name }}\"\n    group: \"{{ user.group }}\"\n    mode: '0755'\n\n- name: Install jack_control service file\n  copy:\n    src: \"usr/lib/systemd/user/jack_control.service\"\n    dest: \"/usr/lib/systemd/user/jack_control.service\"\n    mode: '0644'\n\n- name: Enable jack services\n  systemd:\n    name: jack_control\n    enabled: yes\n    scope: user\n    daemon_reload: yes\n  environment:\n    XDG_RUNTIME_DIR: \"/run/user/{{ user.uid }}\"\n  become: False\n  ignore_errors: \"{{ ansible_check_mode }}\"\n\n- name: Set jack driver parameters\n  shell: |\n    jack_control eps driver {{ jack_control.eps.driver }}\n    jack_control eps realtime {{ jack_control.eps.realtime }}\n    jack_control eps realtime-priority {{ jack_control.eps.realtimepriority }}\n    jack_control dps device {{ jack_control.dps.device }}\n    jack_control dps rate {{ jack_control.dps.rate }}\n    jack_control dps period {{ jack_control.dps.period }}\n    jack_control dps nperiods {{ jack_control.dps.nperiods }}\n    jack_control dps midi-driver {{ jack_control.dps.mididriver }}\n    jack_control dps monitor {{ jack_control.dps.monitor }}\n  environment:\n    DBUS_SESSION_BUS_ADDRESS: \"{{ lookup('env','DBUS_SESSION_BUS_ADDRESS') }}\"\n  register: result\n  changed_when: result.rc != 0\n  become: False\n\n\n- name: Set JackTrip autostart entry\n  template:\n    src: home/.config/autostart/JackTrip.desktop.j2\n    dest: \"{{ user.home }}/.config/autostart/JackTrip.desktop\"\n    owner: \"{{ user.name }}\"\n    group: \"{{ user.group }}\"\n    mode: \"0644\"\n    backup: yes\n    validate: \"dex -d %s\"\n  when: jacktrip.server.args != '' or jacktrip.client.args != ''\n",
      "path": "/roles/jackd/tasks/"
    },
    {
      "filename": "main.yml",
      "content": "---\n# vars file for jackd\n",
      "path": "/roles/jackd/vars/"
    },
    {
      "filename": "main.yml",
      "content": "---\n# defaults file for jackd\n\npackages:\n  - jack2\n  - jack2-dbus\n  - jack-example-tools\n  - jack-keyboard\n  - jack_capture\n  - jack_link\n  - jack_mixer\n  - jack_snapshot\n  - jack_utils\n  - jacktrip\n\njack_control:\n  dps:\n    device: hw:0\n    capture: none\n    playback: none\n    rate: 48000\n    period: 1024\n    nperiods: 2\n    hwmon: False\n    hwmeter: False\n    duplex: True\n    softmode: False\n    monitor: True\n    dither: n\n    shorts: False\n    mididriver: seq\n  eps:\n    driver: alsa\n    name: default\n    realtime: True\n    realtimepriority: 89\n    temporary: False\n    verbose: False\n    # client-timeout: Client timeout limit in milliseconds. (sint:notset:0:0)\n    # clock-source: Clocksource type : c(ycle) | h(pet) | s(ystem). (uint:notset:0:0)\n    port-max: 2048\n    replaceregistry: False\n    sync: False\n    # self-connect-mode: Self connect mode. (char:notset: : )\n    # slave-drivers: Slave drivers to use (str:notset::)\n",
      "path": "/roles/jackd/defaults/"
    },
    {
      "filename": "main.yml",
      "content": "galaxy_info:\n  author: your name\n  description: your role description\n  company: your company (optional)\n\n  # If the issue tracker for your role is not on github, uncomment the\n  # next line and provide a value\n  # issue_tracker_url: http://example.com/issue/tracker\n\n  # Choose a valid license ID from https://spdx.org - some suggested licenses:\n  # - BSD-3-Clause (default)\n  # - MIT\n  # - GPL-2.0-or-later\n  # - GPL-3.0-only\n  # - Apache-2.0\n  # - CC-BY-4.0\n  license: license (GPL-2.0-or-later, MIT, etc)\n\n  min_ansible_version: 2.1\n\n  # If this a Container Enabled role, provide the minimum Ansible Container version.\n  # min_ansible_container_version:\n\n  galaxy_tags: []\n    # List tags for your role here, one per line. A tag is a keyword that describes\n    # and categorizes the role. Users find roles by searching for tags. Be sure to\n    # remove the '[]' above, if you add tags to this list.\n    #\n    # NOTE: A tag is limited to a single word comprised of alphanumeric characters.\n    #       Maximum 20 tags per role.\n\ndependencies: []\n  # List your role dependencies here, one per line. Be sure to remove the '[]' above,\n  # if you add dependencies to this list.\n",
      "path": "/roles/input-remapper/meta/"
    },
    {
      "filename": "main.yml",
      "content": "---\n# handlers file for input-remapper\n",
      "path": "/roles/input-remapper/handlers/"
    },
    {
      "filename": "test.yml",
      "content": "---\n- hosts: localhost\n  remote_user: root\n  roles:\n    - input-remapper\n",
      "path": "/roles/input-remapper/tests/"
    },
    {
      "filename": "packages.yml",
      "content": "---\n\n- name: install input-remapper packages\n  aur:\n    use: auto\n    name: \"{{ input_remapper__packages }}\"\n    state: present\n  become: False    \n  when: ansible_os_family == \"Archlinux\"\n  tags: ['packages']\n",
      "path": "/roles/input-remapper/tasks/"
    },
    {
      "filename": "main.yml",
      "content": "---\n\n- name: Ensure input-remapper config directories exist\n  file:\n    dest: \"{{ user.home }}/{{ item }}\"\n    state: directory\n    owner: \"{{ user.owner | default(omit) }}\"\n    group: \"{{ user.group | default(omit) }}\"\n    mode: '0744'\n    recurse: false\n  loop:\n    - \".config/input-remapper-2\"\n    - \".config/input-remapper-2/presets\"\n  check_mode: no\n  tags: ['profile']\n\n- name: Sync input-remapper presets folder\n  synchronize:\n    src: presets/\n    dest: \"{{ user.home }}/.config/input-remapper-2/presets/\"\n    recursive: yes\n    mode: push\n    delete: no\n    checksum: yes\n    perms: no\n    rsync_opts:\n      - \"--update\"\n      - \"--omit-dir-times\"\n      - \"--progress\"\n      - \"--itemize-changes\"\n      - \"--chown={{ user.name }}:{{ user.group }}\"\n",
      "path": "/roles/input-remapper/tasks/"
    },
    {
      "filename": "main.yml",
      "content": "---\n# vars file for input-remapper\n",
      "path": "/roles/input-remapper/vars/"
    },
    {
      "filename": "main.yml",
      "content": "---\n# defaults file for input-remapper\n\ninput_remapper__packages:\n  - input-remapper-git\n",
      "path": "/roles/input-remapper/defaults/"
    },
    {
      "filename": "main.yml",
      "content": "galaxy_info:\n  author: your name\n  description: your role description\n  company: your company (optional)\n\n  # If the issue tracker for your role is not on github, uncomment the\n  # next line and provide a value\n  # issue_tracker_url: http://example.com/issue/tracker\n\n  # Choose a valid license ID from https://spdx.org - some suggested licenses:\n  # - BSD-3-Clause (default)\n  # - MIT\n  # - GPL-2.0-or-later\n  # - GPL-3.0-only\n  # - Apache-2.0\n  # - CC-BY-4.0\n  license: license (GPL-2.0-or-later, MIT, etc)\n\n  min_ansible_version: 2.1\n\n  # If this a Container Enabled role, provide the minimum Ansible Container version.\n  # min_ansible_container_version:\n\n  #\n  # Provide a list of supported platforms, and for each platform a list of versions.\n  # If you don't wish to enumerate all versions for a particular platform, use 'all'.\n  # To view available platforms and versions (or releases), visit:\n  # https://galaxy.ansible.com/api/v1/platforms/\n  #\n  # platforms:\n  # - name: Fedora\n  #   versions:\n  #   - all\n  #   - 25\n  # - name: SomePlatform\n  #   versions:\n  #   - all\n  #   - 1.0\n  #   - 7\n  #   - 99.99\n\n  galaxy_tags: []\n    # List tags for your role here, one per line. A tag is a keyword that describes\n    # and categorizes the role. Users find roles by searching for tags. Be sure to\n    # remove the '[]' above, if you add tags to this list.\n    #\n    # NOTE: A tag is limited to a single word comprised of alphanumeric characters.\n    #       Maximum 20 tags per role.\n\ndependencies: []\n  # List your role dependencies here, one per line. Be sure to remove the '[]' above,\n  # if you add dependencies to this list.\n",
      "path": "/roles/networking/meta/"
    },
    {
      "filename": "main.yml",
      "content": "---\n\n- name: enable systemd-timesyncd service\n  systemd:\n    name: systemd-timesyncd\n    enabled: yes\n\n- name: reload firewalld\n  shell: \"firewall-cmd --reload\"\n  ignore_errors: \"{{ ansible_check_mode }}\"\n\n- name: reload ufw\n  shell: \"ufw reload\"\n  ignore_errors: \"{{ ansible_check_mode }}\"\n\n- name: Reload udev rules\n  shell: \"/sbin/udevadm control --reload-rules\"\n",
      "path": "/roles/networking/handlers/"
    },
    {
      "filename": "interfaces.yml",
      "content": "---\n\n- name: Print host network vars\n  debug:\n    msg: \"{{ item.ifname }}\"\n  with_items: \"{{ network_interfaces }}\"\n  tags: ['udev']\n\n- name: Set udev rules for wired NIC names\n  template:\n    src: etc/udev/rules.d/10-network.rules.j2\n    dest: /etc/udev/rules.d/10-network.rules\n    owner: root\n    group: root\n    mode: '0644'\n    backup: no\n  with_items: \"{{ network_interfaces }}\"\n  # when: item.type == 'ethernet' or item.type == 'wifi'\n  tags: ['udev']\n\n# - name: Set udev rule to set network interface names\n#   copy:\n#     content: |\n#       SUBSYSTEM==\"net\", ACTION==\"add\", ATTR{address}==\"{{ item.mac|lower }}\", NAME=\"{{ item.ifname }}\"\n#     dest: \"/etc/udev/rules.d/10-network.rules\"\n#     owner: root\n#   with_items: \"{{ network_interfaces }}\"\n#   when: network_interfaces is defined\n#   notify: Reload udev rules\n#   tags: ['udev']\n\n# - name: Set udev rules for wireless NIC names\n#   template:\n#     src: etc/udev/rules.d/10-network.rules.j2\n#     dest: /etc/udev/rules.d/10-network.rules\n#     owner: root\n#     group: root\n#     mode: '0644'\n#     backup: yes\n#   with_items: \"{{ network_interfaces }}\"\n#   when:\n#     - item.type == 'wifi'\n#     - item.method4 != 'disabled'\n#   tags: ['udev']\n\n- name: Add ethernet device\n  community.general.nmcli:\n    type: \"{{ item.type }}\"\n    ifname: \"{{ item.ifname }}\"\n    conn_name: \"{{ item.conn_name }}\"\n    mac: \"{{ item.mac }}\"\n    ip4: \"{{ item.ip4 }}\"\n    gw4: \"{{ item.gw4 }}\"\n    dns4: \"{{ item.dns4 }}\"\n    dns4_search: \"{{ item.dns4_search }}\"\n    autoconnect: \"{{ item.autoconnect }}\"\n    state: \"{{ item.state }}\"\n    method4: \"{{ item.method4 }}\"\n  with_items: \"{{ network_interfaces }}\"\n  when:\n    - item.type == 'ethernet'\n    - item.conn_name == item.ifname\n    - item.method4 != 'disabled'\n    - item.ip4 is defined\n    - item.gw4 is defined\n\n- name: Add static wifi device\n  community.general.nmcli:\n    type: \"{{ item.type }}\"\n    ifname: \"{{ item.ifname }}\"\n    conn_name: \"{{ item.conn_name }}\"\n    ip4: \"{{ item.ip4 }}\"\n    gw4: \"{{ item.gw4 }}\"\n    dns4: \"{{ item.dns4 }}\"\n    autoconnect: \"{{ item.autoconnect }}\"\n    state: \"{{ item.state }}\"\n    method4: \"{{ item.method4 }}\"\n    wifi:\n      mac-address: \"{{ item.mac }}\"\n      cloned-mac-address: \"{{ item.assigned_address }}\"\n    ssid: \"{{ item.ssid }}\"\n    # wifi_sec:\n    #   key-mgmt: \"{{ item.wifi_sec.key_mgmt }}\"\n    #   psk: \"{{ item.wifi_sec.psk }}\"\n  with_items: \"{{ network_interfaces }}\"\n  when:\n    - item.type == 'wifi'\n    - item.method4 != 'disabled'\n    - item.ip4 is defined\n  tags: ['wireless']\n\n- name: Add dhcp wifi device\n  community.general.nmcli:\n    type: \"{{ item.type }}\"\n    ifname: \"{{ item.ifname }}\"\n    conn_name: \"{{ item.conn_name }}\"\n    autoconnect: \"{{ item.autoconnect }}\"\n    state: \"{{ item.state }}\"\n    method4: \"{{ item.method4 }}\"\n    wifi:\n      mac-address: \"{{ item.mac }}\"\n      cloned-mac-address: \"{{ item.assigned_address }}\"\n    ssid: \"{{ item.ssid }}\"\n    # wifi_sec:\n    #   key-mgmt: \"{{ item.wifi_sec.key_mgmt }}\"\n    #   psk: \"{{ item.wifi_sec.psk }}\"\n  with_items: \"{{ network_interfaces }}\"\n  when:\n    - item.type == 'wifi'\n    - item.method4 != 'disabled'\n  tags: ['wireless']\n\n- name: Add audio subnet device\n  community.general.nmcli:\n    type: \"{{ item.type }}\"\n    ifname: \"{{ item.ifname }}\"\n    conn_name: \"{{ item.conn_name }}\"\n    mac: \"{{ item.mac }}\"\n    ip4: \"{{ item.ip4 }}\"\n    autoconnect: \"{{ item.autoconnect }}\"\n    state: \"{{ item.state }}\"\n    method4: \"{{ item.method4 }}\"\n  with_items: \"{{ network_interfaces }}\"\n  when:\n    - item.gw4 is not defined\n    - item.method4 != 'disabled'\n\n- name: Add bridge device\n  community.general.nmcli:\n    type: \"{{ item.type }}\"\n    ifname: \"{{ item.ifname }}\"\n    conn_name: \"{{ item.conn_name }}\"\n    ip4: \"{{ item.ip4 }}\"\n    gw4: \"{{ item.gw4 }}\"\n    dns4: \"{{ item.dns4 }}\"\n    autoconnect: \"{{ item.autoconnect }}\"\n    state: \"{{ item.state }}\"\n    method4: \"{{ item.method4 }}\"\n  with_items: \"{{ network_interfaces }}\"\n  when:\n    - item.type == 'bridge'\n    - item.method4 != 'disabled'\n\n- name: Add bridge slave\n  community.general.nmcli:\n    type: \"{{ item.type }}\"\n    ifname: \"{{ item.ifname }}\"\n    conn_name: \"{{ item.conn_name }}\"\n    master: \"{{ item.bridge }}\"\n    autoconnect: \"{{ item.autoconnect }}\"\n    state: \"{{ item.state }}\"\n    method4: \"{{ item.method4 }}\"\n  with_items: \"{{ network_interfaces }}\"\n  when:\n    - item.type == 'ethernet'\n    - item.bridge is defined\n    - item.method4 != 'disabled'\n\n- name: Deactive ethernet device\n  community.general.nmcli:\n    type: \"{{ item.type }}\"\n    ifname: \"{{ item.ifname }}\"\n    conn_name: \"{{ item.conn_name }}\"\n    mac: \"{{ item.mac }}\"\n    autoconnect: \"{{ item.autoconnect }}\"\n    state: \"{{ item.state }}\"\n    method4: \"{{ item.method4 }}\"\n  with_items: \"{{ network_interfaces }}\"\n  when:\n    - item.type == 'ethernet'\n    - item.method4 == 'disabled'\n\n- name: Deactive wifi device\n  community.general.nmcli:\n    type: \"{{ item.type }}\"\n    ifname: \"{{ item.ifname }}\"\n    conn_name: \"{{ item.conn_name }}\"\n    autoconnect: \"{{ item.autoconnect }}\"\n    state: \"{{ item.state }}\"\n    method4: \"{{ item.method4 }}\"\n    ssid: \"{{ item.ssid }}\"\n    wifi:\n      mac-address: \"{{ item.mac }}\"\n  with_items: \"{{ network_interfaces }}\"\n  when:\n    - item.type == 'wifi'\n    - item.method4 == 'disabled'\n\n- name: Ensure NetworkManager is enabled and restart service\n  systemd:\n    name: NetworkManager\n    enabled: yes\n    state: restarted\n",
      "path": "/roles/networking/tasks/"
    },
    {
      "filename": "networkmanager.yml",
      "content": "---\n\n# - name: populate /etc/resolv with local dns info\n#   template:\n#       src: etc/resolv.conf.j2\n#       dest: /etc/resolv.conf\n\n- name: Disable systemd-networkd service\n  systemd:\n    name: systemd-networkd\n    enabled: no\n    state: stopped\n  ignore_errors: True\n\n# - name: Disable dhcpcd service\n#   service:\n#       name: dhcpcd.service\n#       enabled: no\n\n- name: Ensure networkmanager connection check is enabled\n  copy:\n    content: |\n      [connectivity]\n      enabled=true\n    dest: \"/etc/NetworkManager/conf.d/20-connectivity.conf\"\n    owner: root\n\n- name: Enable and start networkmanager\n  systemd:\n    name: NetworkManager\n    enabled: yes\n    state: started\n\n- name: Enable and start NetworkManager dispatcher\n  service:\n      name: NetworkManager-dispatcher.service\n      enabled: yes\n      state: started\n\n- import_tasks:\n    file: interfaces.yml\n  when: network_interfaces is defined\n",
      "path": "/roles/networking/tasks/"
    },
    {
      "filename": "ntp.yml",
      "content": "---\n\n- name: Create timesyncd.conf.d directory\n  file:\n    path: /etc/systemd/timesyncd.conf.d\n    state: directory\n\n- name: set ntp servers in timesyncd.conf\n  copy:\n    src: etc/systemd/timesyncd.conf.d/local.conf\n    dest: /etc/systemd/timesyncd.conf.d/local.conf\n    mode: '0644'\n    backup: yes\n  register: timesyncd_conf\n  notify: enable systemd-timesyncd service\n\n- name: Sync hwclock\n  shell: |\n    timedatectl set-ntp true && \\\n    sleep 4 && \\\n    hwclock --systohc\n  when:\n    - timesyncd_conf.changed\n    - ansible_distribution != 'Debian'\n",
      "path": "/roles/networking/tasks/"
    },
    {
      "filename": "firewall.yml",
      "content": "---\n\n- block:\n    - name: Enable and start firewalld\n      systemd:\n        name: firewalld\n        state: started\n        enabled: yes\n\n    - name: Permit traffic to common services\n      firewalld:\n        service: \"{{ item }}\"\n        state: enabled\n        permanent: yes\n      with_items:\n        - ntp\n        - rsyncd\n        - ssh\n      notify: reload firewalld\n      tags: ['nfs', 'ntp', 'rsyncd', 'ssh']\n\n    - name: Permit traffic to jacktrip, barrier and qmidinet\n      firewalld:\n        port: \"{{ item }}\"\n        state: enabled\n        permanent: yes\n      with_items: \"{{ rules.allowed }}\"\n      notify: reload firewalld\n\n  ignore_errors: \"{{ ansible_check_mode }}\"\n  when: ansible_os_family == 'Archlinux' or ansible_distribution == 'Fedora'\n\n\n# Hello. Can you refactor this Ansible task?\n# Please use ufw instead of firewalld\n\n# Sure, here's the refactored Ansible task using ufw instead of firewalld:\n\n- block:\n    - name: Enable and start ufw\n      systemd:\n        name: ufw\n        state: started\n        enabled: yes\n\n    - name: Permit traffic to common services\n      community.general.ufw:\n        rule: allow\n        port: \"{{ item }}\"\n        proto: \"any\"\n      with_items:\n        - 'ntp'\n        - 'rsync'\n        - 'ssh'\n      notify: reload ufw\n      tags: ['nfs', 'ntp', 'rsyncd', 'ssh']\n\n    - name: Permit tcp traffic to jacktrip, barrier and qmidinet\n      community.general.ufw:\n        rule: allow\n        port: \"{{ item }}\"\n        proto: tcp\n      with_items:\n        - '6666'\n        - '7905'\n        - '7906'\n        - '24800'\n\n    - name: Permit udp traffic to jacktrip, barrier and qmidinet\n      community.general.ufw:\n        rule: allow\n        port: \"{{ item }}\"\n        proto: udp\n      with_items:\n        - '4464'\n        - '4560'\n        - '8000'\n        - '12101'\n        - '21928'\n        - '21929'\n        - '50924'\n        - '55311'\n      notify: reload ufw\n\n  when: ansible_distribution == 'MX' or ansible_distribution == 'Debian'\n  ignore_errors: \"{{ ansible_check_mode }}\"\n",
      "path": "/roles/networking/tasks/"
    },
    {
      "filename": "main.yml",
      "content": "---\n- name: Networking Tasks\n  debug:\n    msg: \"Starting networking tasks\"\n\n- import_tasks:\n    file: firewall.yml\n  tags: ['firewall']\n\n# https://gitlab.com/klaasjan/vagrant-ansible/-/blob/master/ansible/roles/configure_network/tasks/main.yml?ref_type=heads\n\n# - name: Setup udev for network devices\n#   replace:\n#     dest: /etc/udev/rules.d/10-network.rules\n#     regexp: 'ATTR.*{{ item.ifname }}'\n#     replace: 'ATTR{address}==\"{{ item.mac|lower }}\", ATTR{type}==\"1\", NAME=\"{{ item.ifname }}'\n#   with_items: \"{{ network_interfaces }}\"\n#   when: network_interfaces is defined\n#   notify: Reload udev rules\n\n#TODO: convert to systemd-networkd\n# - import_tasks:\n#     file: networkmanager.yml\n#   tags: ['networkmanager']\n\n- import_tasks:\n    file: ntp.yml\n  tags: ['ntp']\n\n# TODO: set interface config for .36 network cards betweeen soundbot|ninjabot\n# - include_tasks: interfaces.yml\n\n- name: Set hosts files\n  template:\n    src: etc/hosts.j2\n    dest: /etc/hosts\n    owner: root\n    group: root\n    mode: '0644'\n    backup: True\n  when: etc_hosts is defined\n  tags: ['dns']\n",
      "path": "/roles/networking/tasks/"
    },
    {
      "filename": "main.yml",
      "content": "---\n",
      "path": "/roles/networking/vars/"
    },
    {
      "filename": "main.yml",
      "content": "---\n\npackages:\n  - network-manager-applet\n\nconn_check:\n    uri: \"http://pihole/admin\"\n    interval: 120\n\n\nrules:\n  allowed:\n    - 1900/udp\n    - 1935/tcp\n    - 4000/tcp\n    - 5000/tcp\n    - 8008/tcp\n    - 4464/udp\n    - 4560/udp\n    - 5432/tcp\n    - 6379/tcp\n    - 6666/tcp\n    - 7777/udp\n    - 7905/tcp\n    - 7906/tcp\n    - 8000/udp\n    - 8324/tcp\n    - 8384/tcp\n    - 12101/udp\n    - 21027/udp\n    - 21928/udp\n    - 21929/udp\n    - 22000/tcp\n    - 22000/udp\n    - 24800/tcp\n    - 24801/tcp\n    - 32400/tcp\n    - 32410/udp\n    - 32412/udp\n    - 32413/udp\n    - 32414/udp\n    - 32469/tcp\n    - 50924/udp\n    - 55311/udp\n",
      "path": "/roles/networking/defaults/"
    },
    {
      "filename": "main.yml",
      "content": "galaxy_info:\n  author: your name\n  description: your role description\n  company: your company (optional)\n\n  # If the issue tracker for your role is not on github, uncomment the\n  # next line and provide a value\n  # issue_tracker_url: http://example.com/issue/tracker\n\n  # Choose a valid license ID from https://spdx.org - some suggested licenses:\n  # - BSD-3-Clause (default)\n  # - MIT\n  # - GPL-2.0-or-later\n  # - GPL-3.0-only\n  # - Apache-2.0\n  # - CC-BY-4.0\n  license: license (GPL-2.0-or-later, MIT, etc)\n\n  min_ansible_version: 2.1\n\n  # If this a Container Enabled role, provide the minimum Ansible Container version.\n  # min_ansible_container_version:\n\n  #\n  # Provide a list of supported platforms, and for each platform a list of versions.\n  # If you don't wish to enumerate all versions for a particular platform, use 'all'.\n  # To view available platforms and versions (or releases), visit:\n  # https://galaxy.ansible.com/api/v1/platforms/\n  #\n  # platforms:\n  # - name: Fedora\n  #   versions:\n  #   - all\n  #   - 25\n  # - name: SomePlatform\n  #   versions:\n  #   - all\n  #   - 1.0\n  #   - 7\n  #   - 99.99\n\n  galaxy_tags: []\n    # List tags for your role here, one per line. A tag is a keyword that describes\n    # and categorizes the role. Users find roles by searching for tags. Be sure to\n    # remove the '[]' above, if you add tags to this list.\n    #\n    # NOTE: A tag is limited to a single word comprised of alphanumeric characters.\n    #       Maximum 20 tags per role.\n\ndependencies: []\n  # List your role dependencies here, one per line. Be sure to remove the '[]' above,\n  # if you add dependencies to this list.\n",
      "path": "/roles/docker/meta/"
    },
    {
      "filename": "main.yml",
      "content": "---\n# handlers file for docker\n- name: reload systemd daemon\n  systemd:\n    daemon_reload: yes\n  ignore_errors: \"{{ ansible_check_mode }}\"\n",
      "path": "/roles/docker/handlers/"
    },
    {
      "filename": "test.yml",
      "content": "---\n- hosts: localhost\n  remote_user: root\n  roles:\n    - docker\n",
      "path": "/roles/docker/tests/"
    },
    {
      "filename": "debian.yml",
      "content": "---\n# # Add Docker's official GPG key:\n# sudo apt-get update\n# sudo apt-get install ca-certificates curl\n# sudo install -m 0755 -d /etc/apt/keyrings\n# sudo curl -fsSL https://download.docker.com/linux/debian/gpg -o /etc/apt/keyrings/docker.asc\n# sudo chmod a+r /etc/apt/keyrings/docker.asc\n#\n# # Add the repository to Apt sources:\n# echo \\\n#   \"deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.asc] https://download.docker.com/linux/debian \\\n#   $(. /etc/os-release && echo \"$VERSION_CODENAME\") stable\" | \\\n#   sudo tee /etc/apt/sources.list.d/docker.list > /dev/null\n# sudo apt-get update\n\n\n- name: Update package lists\n  apt: update_cache=yes\n\n- name: Install required packages\n  apt:\n    name:\n      - ca-certificates\n      - curl\n    state: present\n\n- name: Create directory for Docker GPG key\n  file:\n    path: /etc/apt/keyrings\n    state: directory\n    mode: 0755\n\n- name: Download Docker GPG key\n  get_url:\n    url: https://download.docker.com/linux/debian/gpg\n    dest: /etc/apt/keyrings/docker.asc\n    mode: 0644\n\n- name: Set permissions for Docker GPG key\n  file:\n    path: /etc/apt/keyrings/docker.asc\n    mode: 0444\n\n- name: Add Docker repository\n  copy:\n    content: |\n      deb [arch={{ ansible_arch }} signed-by=/etc/apt/keyrings/docker.asc] https://download.docker.com/linux/debian $(lsb_release -sc) stable\n    dest: /etc/apt/sources.list.d/docker.list\n    mode: 0644\n\n- name: Update package lists (again)\n  apt: update_cache=yes\n",
      "path": "/roles/docker/tasks/"
    },
    {
      "filename": "setup.yml",
      "content": "---\n\n\n- block:\n    - name: Ensure docker data directory exists\n      file:\n        path: \"{{ docker.storage }}\"\n        state: directory\n        owner: root\n        group: root\n\n    - name: Set docker storage location\n      lineinfile:\n        path: \"/usr/lib/systemd/system/docker.service\"\n        regexp: \"^ExecStart=/usr/bin/dockerd\"\n        line: \"ExecStart=/usr/bin/dockerd --data-root {{ docker.storage }} -H fd:// --containerd=/run/containerd/containerd.sock\"\n        insertafter: \"[Service]\"\n        firstmatch: True\n        backup: True\n      # register: dockerstorage\n      # failed_when: \"not 'Destination /usr/lib/systemd/system/docker.service does not exist' in dockerstorage.msg\"\n      ignore_errors: \"{{ ansible_check_mode }}\"\n      notify: reload systemd daemon\n\n- name: Create docker config directory\n  file:\n    path: /etc/docker\n    state: directory\n    owner: root\n    group: root\n    mode: '0755'\n\n# - name: Set docker daemon options\n#   template:\n#     src: etc/docker/daemon.json.j2\n#     dest: /etc/docker/daemon.json\n#     owner: root\n#     mode: '0644'\n#     backup: True\n\n- name: Disable overlay redirect\n  copy:\n    content: |\n      options overlay metacopy=off redirect_dir=off\n\n    dest: \"/etc/modprobe.d/disable-overlay-redirect-dir.conf\"\n    owner: root\n\n- name: Set docker service preset\n  systemd:\n    name: docker\n    enabled: True\n  ignore_errors: \"{{ ansible_check_mode }}\"\n  # register: dockerservice\n  # failed_when: \"not 'Could not find the requested service' in dockerservice.msg\"\n",
      "path": "/roles/docker/tasks/"
    },
    {
      "filename": "main.yml",
      "content": "---\n# tasks file for docker\n\n- name: Docker Tasks\n  debug:\n    msg: \"Starting docker tasks\"\n\n- name: Check if Docker is installed\n  command: docker --version\n  register: docker_check\n  ignore_errors: \"{{ ansible_check_mode }}\"\n\n- name: Print Docker version if installed\n  debug:\n    msg: \"Docker version: {{ docker_check.msg }}\"\n  when: docker_check.rc == 0\n\n- block:\n\n    - block:\n        - name: Add Docker repository\n          shell: |\n            yum-config-manager --add-repo \\\n            https://download.docker.com/linux/centos/docker-ce.repo\n          register: result\n\n        - name: Install Docker packages\n          dnf:\n            name: \"{{ item }}\"\n            state: present\n          loop:\n            - docker-ce\n            - docker-ce-cli\n            - containerd.io\n            - docker-compose-plugin\n          when: result is success\n\n        - name: Add docker cli-plugins to path\n          copy:\n            src: etc/profile.d/compose.sh\n            dest: /etc/profile.d/compose.sh\n            mode: '0644'\n\n      when: ansible_distribution == 'Fedora'\n\n    - name: Install docker packages\n      aur:\n        use: paru\n        name: \"{{ item }}\"\n        state: present\n        extra_args: \"--overwrite '*'\"\n      loop:\n        - docker\n        - docker-compose\n        - lazydocker-bin\n      become: False\n      when: ansible_os_family == 'Archlinux'\n\n    # - name: Install docker packages\n    #   aur:\n    #     use: paru\n    #     name: \"{{ item }}\"\n    #     state: present\n    #     extra_args: \"--overwrite '*'\"\n    #   loop:\n    #     - nvidia-container-toolkit\n    #     - nvidia-docker-compose\n    #   become: False\n    #   when:\n    #     - ansible_os_family == 'Archlinux'\n    #     - nvidia is defined\n\n  when: docker_check.rc != 0\n  tags: ['packages']\n\n# https://discuss.python.org/t/getting-requirements-to-build-wheel-did-not-run-successfully-exit-code-1/30365/2\n# - block:\n#     - name: Echo the pip constraint variable into a file\n#       shell: echo \"Cython<3\" > cython_constraint.txt\n#       args:\n#         chdir: /tmp/\n#\n#     - name: Install python docker modules\n#       pip:\n#         name: \"{{ item }}\"\n#         executable: pip3\n#         state: present\n#         extra_args: --break-system-packages\n#       with_items:\n#         - docker\n#         - docker-compose\n#       environment:\n#         PIP_CONSTRAINT: \"/tmp/cython_constraint.txt\"\n#       when: ansible_os_family == 'Archlinux'\n#\n#     - name: Install python docker modules\n#       pip:\n#         name: \"{{ item }}\"\n#         executable: pip3\n#         state: present\n#       with_items:\n#         - docker\n#         - docker-compose\n#       when: ansible_distribution == 'Fedora'\n#\n#   tags: ['packages']\n\n- name: Ensure group \"docker\" exists\n  group:\n    name: docker\n    state: present\n\n#TODO: add failed_when logic\n- name: Add user to docker group\n  user:\n    name: \"{{ user.name }}\"\n    groups: docker\n    append: yes\n  # check_mode: yes\n  ignore_errors: \"{{ ansible_check_mode }}\"\n  # register: dockergroup\n  # failed_when: \"not 'Group docker does not exist' in dockergroup.msg\"\n  tags: ['groups']\n\n- import_tasks:\n    file: setup.yml\n  tags: ['setup']\n",
      "path": "/roles/docker/tasks/"
    },
    {
      "filename": "main.yml",
      "content": "---\n# vars file for docker\n\n\n# docker: \"vars/main.yml\"\n",
      "path": "/roles/docker/vars/"
    },
    {
      "filename": "main.yml",
      "content": "---\n# defaults file for docker\n\n# docker: \"defaults/main.yml\"\n\ndocker:\n  storage: /var/lib/docker\n\nuse_docker: False",
      "path": "/roles/docker/defaults/"
    },
    {
      "filename": "main.yml",
      "content": "galaxy_info:\n  author: your name\n  description: your role description\n  company: your company (optional)\n\n  # If the issue tracker for your role is not on github, uncomment the\n  # next line and provide a value\n  # issue_tracker_url: http://example.com/issue/tracker\n\n  # Choose a valid license ID from https://spdx.org - some suggested licenses:\n  # - BSD-3-Clause (default)\n  # - MIT\n  # - GPL-2.0-or-later\n  # - GPL-3.0-only\n  # - Apache-2.0\n  # - CC-BY-4.0\n  license: license (GPL-2.0-or-later, MIT, etc)\n\n  min_ansible_version: 2.1\n\n  # If this a Container Enabled role, provide the minimum Ansible Container version.\n  # min_ansible_container_version:\n\n  galaxy_tags: []\n    # List tags for your role here, one per line. A tag is a keyword that describes\n    # and categorizes the role. Users find roles by searching for tags. Be sure to\n    # remove the '[]' above, if you add tags to this list.\n    #\n    # NOTE: A tag is limited to a single word comprised of alphanumeric characters.\n    #       Maximum 20 tags per role.\n\ndependencies: []\n  # List your role dependencies here, one per line. Be sure to remove the '[]' above,\n  # if you add dependencies to this list.\n",
      "path": "/roles/pulsar/meta/"
    },
    {
      "filename": "main.yml",
      "content": "---\n# handlers file for pulsar\n",
      "path": "/roles/pulsar/handlers/"
    },
    {
      "filename": "test.yml",
      "content": "---\n- hosts: localhost\n  remote_user: root\n  roles:\n    - pulsar\n",
      "path": "/roles/pulsar/tests/"
    },
    {
      "filename": "main.yml",
      "content": "---\n\n# - name: Check repository version\n#   shell: \"paru -Si pulsar-bin | grep Version | awk '{print $3}' | sed 's/-1$//' | xargs\"\n#   register: desired_version\n#   changed_when: false\n#\n# - name: Get installed application version\n#   shell: \"pulsar -v | head -1 | awk -F ':' '{ print $2 }' | xargs\"\n#   register: current_version\n#   changed_when: false\n\n- block:\n    - name: Install pulsar\n      aur:\n        use: auto\n        name: pulsar-bin\n        state: present\n\n    - name: Check currently installed extensions\n      shell: \"pulsar -p ls |awk -F ' ' '{print $2}'|awk -F '@' '{print $1}'\"\n      register: installed_packages\n      changed_when: installed_packages.rc != 0\n      ignore_errors: \"{{ ansible_check_mode }}\"\n\n    - name: Set list of extensions to install\n      set_fact:\n        _packages: \"{{ pulsar_pkgs|difference(installed_packages.stdout_lines) }}\"\n\n    - name: Install pulsar packages\n      shell: pulsar -p install {{ item }}\n      with_items:\n        - \"{{ _packages }}\"\n      when: _packages | length > 0\n\n    - name: Install config, snippets and styles\n      copy:\n        src: \"home/.pulsar/{{ item }}\"\n        dest: \"{{ user.home }}/.pulsar/{{ item }}\"\n        owner: \"{{ user.name }}\"\n        group: \"{{ user.group }}\"\n        mode: '0644'\n        backup: yes\n      with_items:\n        - config.cson\n        - snippets.cson\n        - styles.less\n\n  become: False\n  vars:\n    pulsar_pkgs:\n      - atom-beautify\n      - atom-jinja2\n      - atom-material-syntax\n      - blocky\n      - color-picker\n      - file-type-icons\n      - file-types\n      - fix-indent-on-paste\n      - highlight-colors\n      - indent-sort\n      - language-ansible\n      - language-diff\n      - language-docker\n      - language-dotfiles\n      - language-generic-config\n      - language-ini\n      - language-markdown\n      - markdown-pdf\n      - markdown-writer\n      - open-terminal-here\n      - permanent-delete\n      - project-icons\n      - ruby-solargraph\n      - sb-atom-sonic-pi\n      - spacegray-atom-dark-syntax\n      - tool-bar\n      - vibrant-ink-ruby\n\n  # when: current_version.stdout != desired_version.stdout\n",
      "path": "/roles/pulsar/tasks/"
    },
    {
      "filename": "main.yml",
      "content": "---\n# vars file for pulsar\n",
      "path": "/roles/pulsar/vars/"
    },
    {
      "filename": "main.yml",
      "content": "---\n# defaults file for pulsar\n",
      "path": "/roles/pulsar/defaults/"
    },
    {
      "filename": "main.yml",
      "content": "galaxy_info:\n  author: your name\n  description: your role description\n  company: your company (optional)\n\n  # If the issue tracker for your role is not on github, uncomment the\n  # next line and provide a value\n  # issue_tracker_url: http://example.com/issue/tracker\n\n  # Choose a valid license ID from https://spdx.org - some suggested licenses:\n  # - BSD-3-Clause (default)\n  # - MIT\n  # - GPL-2.0-or-later\n  # - GPL-3.0-only\n  # - Apache-2.0\n  # - CC-BY-4.0\n  license: license (GPL-2.0-or-later, MIT, etc)\n\n  min_ansible_version: 2.1\n\n  # If this a Container Enabled role, provide the minimum Ansible Container version.\n  # min_ansible_container_version:\n\n  galaxy_tags: []\n    # List tags for your role here, one per line. A tag is a keyword that describes\n    # and categorizes the role. Users find roles by searching for tags. Be sure to\n    # remove the '[]' above, if you add tags to this list.\n    #\n    # NOTE: A tag is limited to a single word comprised of alphanumeric characters.\n    #       Maximum 20 tags per role.\n\ndependencies: []\n  # List your role dependencies here, one per line. Be sure to remove the '[]' above,\n  # if you add dependencies to this list.\n",
      "path": "/roles/xdg/meta/"
    },
    {
      "filename": "main.yml",
      "content": "---\n# handlers file for xdg\n",
      "path": "/roles/xdg/handlers/"
    },
    {
      "filename": "test.yml",
      "content": "---\n- hosts: localhost\n  remote_user: root\n  roles:\n    - xdg\n",
      "path": "/roles/xdg/tests/"
    },
    {
      "filename": "autostart.yml",
      "content": "---\n\n- name: Set xdg autostart applications\n  synchronize:\n    src: etc/xdg/autostart/\n    dest: /etc/xdg/autostart/\n    recursive: yes\n    mode: push\n    delete: yes\n    checksum: yes\n    perms: no\n    rsync_opts:\n      - \"--delete\"\n      - \"--update\"\n      - \"--progress\"\n      - \"--itemize-changes\"\n      - \"--exclude='*.*~'\"\n      - \"--omit-dir-times\"\n      - \"--chown=root:root\"\n\n- name: Update desktop database\n  command: bash -lc \"update-desktop-database\"\n",
      "path": "/roles/xdg/tasks/"
    },
    {
      "filename": "main.yml",
      "content": "---\n\n#  - dest: \".config/autostart\"\n\n- name: Ensure /etc/xdg exists\n  file:\n    path: /etc/xdg\n    state: directory\n    owner: root\n    group: root\n    mode: '0755'\n\n- name: Set XDG env vars\n  copy:\n    content: |\n      # -*- mode: shell-script -*-\n      # ref: https://wiki.archlinux.org/title/XDG_Base_Directory\n      ## XDG_RUNTIME_DIR defined by pam\n      XDG_CONFIG_DIRS=\"/etc/xdg\"\n      XDG_DATA_DIRS=\"/usr/local/share/:/usr/share\"\n      XDG_CONFIG_HOME=\"$HOME/.config\"\n      XDG_CACHE_HOME=\"$HOME/.cache\"\n      XDG_DATA_HOME=\"$HOME/.local/share\"\n      XDG_STATE_HOME=\"$HOME/.local/state\"\n    dest: /usr/lib/environment.d/50-xdg-environment.conf\n  tags: ['env']\n\n- name: Create /etc/xdg/menus and /usr/share/desktop-entries\n  file:\n    path: \"{{ item }}\"\n    state: directory\n    mode: '0755'\n  with_items:\n    - /etc/xdg/menus\n    - /etc/xdg/menus/applications-merged\n    - /etc/xdg/Thunar\n    - /usr/share/desktop-directories\n\n- name: Set xdg user-dirs defaults\n  copy:\n    src: etc/xdg/user-dirs.defaults\n    dest: /etc/xdg/user-dirs.defaults\n    owner: root\n    group: root\n    mode: '0644'\n    backup: yes\n  register: xdg_defaults\n\n- name: Enable xdg-user-dirs-update service\n  systemd:\n    name: xdg-user-dirs-update.service\n    enabled: yes\n    scope: user\n  environment:\n    XDG_RUNTIME_DIR: \"/run/user/{{ user.uid }}\"\n  become: False\n  when: ansible_os_family != 'Debian'\n\n- name: Remove existing user-dirs.dirs\n  file:\n    path: \"{{ user.home }}/.config/user-dirs.dirs\"\n    state: absent\n  register: xdg_userdirs\n\n- name: Run xdg-user-dirs-update\n  shell: xdg-user-dirs-update\n  become: False\n  when: xdg_defaults.changed or xdg_userdirs.changed\n\n- import_tasks:\n    file: autostart.yml\n  tags: ['autostart']\n",
      "path": "/roles/xdg/tasks/"
    },
    {
      "filename": "main.yml",
      "content": "---\n# vars file for xdg\n",
      "path": "/roles/xdg/vars/"
    },
    {
      "filename": "main.yml",
      "content": "---\n# defaults file for xdg\npackages:\n  - xdg\n",
      "path": "/roles/xdg/defaults/"
    },
    {
      "filename": "main.yml",
      "content": "galaxy_info:\n  author: your name\n  description: your role description\n  company: your company (optional)\n\n  # If the issue tracker for your role is not on github, uncomment the\n  # next line and provide a value\n  # issue_tracker_url: http://example.com/issue/tracker\n\n  # Choose a valid license ID from https://spdx.org - some suggested licenses:\n  # - BSD-3-Clause (default)\n  # - MIT\n  # - GPL-2.0-or-later\n  # - GPL-3.0-only\n  # - Apache-2.0\n  # - CC-BY-4.0\n  license: license (GPL-2.0-or-later, MIT, etc)\n\n  min_ansible_version: 2.1\n\n  # If this a Container Enabled role, provide the minimum Ansible Container version.\n  # min_ansible_container_version:\n\n  galaxy_tags: []\n    # List tags for your role here, one per line. A tag is a keyword that describes\n    # and categorizes the role. Users find roles by searching for tags. Be sure to\n    # remove the '[]' above, if you add tags to this list.\n    #\n    # NOTE: A tag is limited to a single word comprised of alphanumeric characters.\n    #       Maximum 20 tags per role.\n\ndependencies: []\n  # List your role dependencies here, one per line. Be sure to remove the '[]' above,\n  # if you add dependencies to this list.\n",
      "path": "/roles/pipewire/meta/"
    },
    {
      "filename": "main.yml",
      "content": "---\n# handlers file for pipewire\n\n- name: Restart PipeWire\n  systemd:\n    name: pipewire\n    state: restarted\n    scope: user\n\n- name: Restart WirePlumber\n  systemd:\n    name: wireplumber\n    state: restarted\n    scope: user\n",
      "path": "/roles/pipewire/handlers/"
    },
    {
      "filename": "test.yml",
      "content": "---\n- hosts: localhost\n  remote_user: root\n  roles:\n    - pipewire\n",
      "path": "/roles/pipewire/tests/"
    },
    {
      "filename": "mainv1.yml",
      "content": "---\n# tasks file for pipewire\n\n# Below is a complete Ansible playbook that automates the installation and configuration of PipeWire, including setting up a custom JSON configuration for your sound card and configuring a noise-reduction filter for a USB handheld microphone using PipeWire's filter-chain module.\n#\n# https://www.perplexity.ai/search/let-s-work-on-migrating-from-j-_TZudN6TQbS1inb0KNHW4g\n\n### Playbook: `setup_pipewire.yml`\n\n- name: Setup PipeWire with custom configuration and noise reduction\n  hosts: localhost\n  become: true\n  vars:\n    pipewire_user: \"{{ ansible_user }}\"\n    pipewire_group: \"pipewire\"\n    realtime_group: \"realtime\"\n    noise_reduction_plugin: \"librnnoise_ladspa.so\"\n    noise_reduction_label: \"noise_suppressor_stereo\"\n    vad_threshold: 0.5\n\n  tasks:\n    - name: Install required packages\n      pacman:\n        name:\n          - pipewire\n          - pipewire-alsa\n          - pipewire-pulse\n          - pipewire-jack\n          - wireplumber\n          - easyeffects\n        state: present\n\n    - name: Create PipeWire group\n      group:\n        name: \"{{ pipewire_group }}\"\n        gid: 200\n        state: present\n\n    - name: Add user to PipeWire group\n      user:\n        name: \"{{ pipewire_user }}\"\n        groups: \"{{ pipewire_group }}\"\n        append: yes\n\n    - name: Create configuration directory\n      file:\n        path: \"/home/{{ pipewire_user }}/.config/pipewire\"\n        state: directory\n        owner: \"{{ pipewire_user }}\"\n        group: \"{{ pipewire_user }}\"\n\n    - name: Copy default PipeWire configuration files\n      copy:\n        src: \"/usr/share/pipewire/\"\n        dest: \"/home/{{ pipewire_user }}/.config/pipewire/\"\n        owner: \"{{ pipewire_user }}\"\n        group: \"{{ pipewire_user }}\"\n        remote_src: yes\n      notify: Restart PipeWire\n\n    - name: Set real-time priorities in limits.conf\n      lineinfile:\n        path: /etc/security/limits.conf\n        line: \"{{ item }}\"\n        state: present\n      loop:\n        - \"@{{ pipewire_group }} - rtprio 95\"\n        - \"@{{ pipewire_group }} - memlock 4194304\"\n        - \"@{{ pipewire_group }} - priority -19\"\n\n    - name: Create custom JSON configuration for sound card\n      copy:\n        dest: \"/home/{{ pipewire_user }}/.config/wireplumber/wireplumber.conf.d/51-disable-suspension.conf\"\n        content: |\n          {\n            \"monitor.alsa.rules\": [\n              {\n                \"matches\": [\n                  { \"node.name\": \"~alsa_input.*\" },\n                  { \"node.name\": \"~alsa_output.*\" }\n                ],\n                \"actions\": {\n                  \"update-props\": {\n                    \"session.suspend-timeout-seconds\": 0\n                  }\n                }\n              }\n            ]\n          }\n        owner: \"{{ pipewire_user }}\"\n        group: \"{{ pipewire_user }}\"\n      notify: Restart WirePlumber\n\n    - name: Create filter-chain configuration for noise reduction\n      copy:\n        dest: \"/home/{{ pipewire_user }}/.config/pipewire/filter-chain.conf.d/noise-reduction.conf\"\n        content: |\n          {\n            \"name\": \"noise_reduction\",\n            \"description\": \"Noise Reduction Filter Chain\",\n            \"filter.graph\": [\n              {\n                \"type\": \"ladspa\",\n                \"name\": \"noise_reduction\",\n                \"plugin\": \"{{ noise_reduction_plugin }}\",\n                \"label\": \"{{ noise_reduction_label }}\",\n                \"control\": {\n                  \"VAD Threshold\": {{ vad_threshold }}\n                }\n              }\n            ],\n            \"capture.props\": {\n              \"node.name\": \"alsa_input.usb-*.*\",\n              \"media.class\": \"Audio/Source\"\n            },\n            \"playback.props\": {\n              \"node.name\": \"filtered_noise_reduction\",\n              \"media.class\": \"Audio/Sink\"\n            }\n          }\n        owner: \"{{ pipewire_user }}\"\n        group: \"{{ pipewire_user }}\"\n      notify: Restart PipeWire\n\n    - name: Enable and start PipeWire services\n      systemd:\n        name: \"{{ item }}\"\n        state: started\n        enabled: yes\n        scope: user\n      loop:\n        - pipewire\n        - pipewire-pulse\n        - wireplumber\n\n  handlers:\n    - name: Restart PipeWire\n      systemd:\n        name: pipewire\n        state: restarted\n        scope: user\n\n    - name: Restart WirePlumber\n      systemd:\n        name: wireplumber\n        state: restarted\n        scope: user\n\n# ### Explanation\n#\n# - **Install required packages**: Installs PipeWire, WirePlumber, and EasyEffects.\n# - **Create PipeWire group**: Creates a group for PipeWire and adds the user to it.\n# - **Copy default configuration files**: Copies default PipeWire configuration files to the user's config directory.\n# - **Set real-time priorities**: Configures real-time priorities in `/etc/security/limits.conf`.\n# - **Create custom JSON configuration**: Disables suspension for ALSA devices.\n# - **Create filter-chain configuration**: Sets up a noise-reduction filter using the RNNoise LADSPA plugin.\n# - **Enable and start services**: Ensures PipeWire and WirePlumber services are enabled and started.\n# - **Handlers**: Restart services when configuration files are changed.\n#\n# ### Running the Playbook\n#\n# To run the playbook, save it to a file named `setup_pipewire.yml` and execute the following command:\n#\n# ```bash\n# ansible-playbook setup_pipewire.yml --ask-become-pass\n# ```\n#\n# This playbook will automate the entire process of setting up PipeWire with custom configurations and noise reduction for your USB handheld microphone.\n#\n# Citations:\n# [1] https://www.reddit.com/r/linux4noobs/comments/uu9r79/how_do_i_install_pipewire_in_arch/\n# [2] https://wiki.archlinux.org/title/Talk:PulseAudio\n# [3] https://discussion.fedoraproject.org/t/pipewire-configuration-for-low-latency/32221\n# [4] https://wiki.archlinux.org/title/Ansible\n# [5] https://www.reddit.com/r/Fedora/comments/ugl5qp/how_to_add_noise_cancellation_in_pipewire/\n",
      "path": "/roles/pipewire/tasks/"
    },
    {
      "filename": "main.yml",
      "content": "# roles/pipewire_config/tasks/main.yml\n---\n\n- name: Install necessary packages\n  pacman:\n    name:\n      - pipewire\n      - pipewire-audio\n      - pipewire-alsa\n      - pipewire-jack\n      - wireplumber\n      - rtkit\n      - easyeffects\n    state: present\n\n- name: Ensure pipewire is real\n  file:\n    path: /usr/share/pipewire/pipewire.conf.d\n    state: directory\n\n- name: Backup existing PipeWire configuration\n  copy:\n    src: /etc/pipewire/pipewire.conf\n    dest: /etc/pipewire/pipewire.conf.bak\n    remote_src: yes\n  ignore_errors: yes\n\n- name: Copy default PipeWire configuration\n  copy:\n    src: /usr/share/pipewire/pipewire.conf\n    dest: /etc/pipewire/pipewire.conf\n    remote_src: yes\n\n- name: Copy default media-session configuration\n  copy:\n    src: /usr/share/pipewire/media-session.d/\n    dest: /etc/pipewire/media-session.d/\n    remote_src: yes\n    mode: preserve\n\n- name: Adjust resampling quality\n  template:\n    src: resample.conf.j2\n    dest: /usr/share/pipewire/pipewire.conf.d/resample.conf\n\n- name: Disable node suspension\n  template:\n    src: 51-disable-suspension.conf.j2\n    dest: /usr/share/wireplumber/wireplumber.conf.d/51-disable-suspension.conf\n\n- name: Restart PipeWire\n  systemd:\n    name: pipewire\n    state: restarted\n    scope: user\n  become: False\n\n- name: Restart WirePlumber\n  systemd:\n    name: wireplumber\n    state: restarted\n    scope: user\n  become: False\n\n- name: Remove old PipeWire user configuration\n  file:\n    path: \"/home/{{ user.home }}/.config/pipewire\"\n    state: absent\n  become: False\n\n- name: Install required packages\n  pacman:\n    name:\n      - ladspa\n      - swh-plugins\n    state: present\n\n- name: Create PulseAudio config directory\n  file:\n    path: /etc/pulse/default.pa.d\n    state: directory\n    mode: '0755'\n\n- name: Configure always-on mic with noise reduction\n  copy:\n    dest: /etc/pulse/default.pa.d/99-powermic-always-on.pa\n    content: |\n      # Load the LADSPA noise reduction plugin\n      load-module module-ladspa-sink sink_name=noise_reduced_mic_sink plugin=noise_suppressor_mono label=noise_suppressor_mono control=50\n\n      # Create a loopback from the PowerMicII-NS to the noise reduction sink\n      load-module module-loopback source=alsa_input.usb-PowerMicII-NS_PowerMicII-NS_000000000000-00.analog-mono sink=noise_reduced_mic_sink\n\n      # Set the default source to the noise-reduced mic\n      set-default-source noise_reduced_mic_sink.monitor\n# \n# - name: restart pulseaudio\n#   systemd:\n#     name: \"{{ item }}\"\n#     state: restarted\n#   with_items:\n#     - pulseaudio.service\n#     - pulseaudio.socket\n#   become: False\n#   environment:\n#     XDG_RUNTIME_DIR: \"/run/user/{{ user.uid }}\"\n#   ignore_errors: \"{{ ansible_check_mode }}\"\n\n- name: Ensure PulseAudio starts on boot\n  copy:\n    dest: /etc/systemd/system/pulseaudio.service\n    content: |\n      [Unit]\n      Description=PulseAudio Sound System\n      After=syslog.target network.target\n\n      [Service]\n      Type=simple\n      ExecStart=/usr/bin/pulseaudio --system --realtime --disallow-exit --no-cpu-limit\n\n      [Install]\n      WantedBy=multi-user.target\n\n- name: Enable and start PulseAudio service\n  systemd:\n    name: pulseaudio\n    enabled: yes\n    state: started\n\n- name: Inform user about next steps\n  debug:\n    msg:\n      - \"Configuration complete. Your PowerMicII-NS should now be always on with noise reduction.\"\n      - \"You may need to restart your system or log out and back in for changes to take effect.\"\n      - \"Use 'pactl list sources' to verify the new source is available.\"\n      - \"You can adjust noise reduction level by modifying the 'control' parameter in the config file.\"\n",
      "path": "/roles/pipewire/tasks/"
    },
    {
      "filename": "main.yml",
      "content": "---\n# vars file for pipewire\n",
      "path": "/roles/pipewire/vars/"
    },
    {
      "filename": "main.yml",
      "content": "---\n# roles/pipewire\npackages:\n  - pipewire\n  - pipewire-alsa\n  - pipewire-audio\n  - pipewire-jack\n  - pipewire-pulse\n  - gst-plugin-pipewire\n  - gst-plugins-bad\n  - gst-plugins-bad-libs\n  - gst-plugins-base\n  - gst-plugins-base-libs\n  - gst-plugins-good\n  - libpipewire\n  - wireplumber\n",
      "path": "/roles/pipewire/defaults/"
    },
    {
      "filename": "main.yml",
      "content": "galaxy_info:\n  author: your name\n  description: your role description\n  company: your company (optional)\n\n  # If the issue tracker for your role is not on github, uncomment the\n  # next line and provide a value\n  # issue_tracker_url: http://example.com/issue/tracker\n\n  # Choose a valid license ID from https://spdx.org - some suggested licenses:\n  # - BSD-3-Clause (default)\n  # - MIT\n  # - GPL-2.0-or-later\n  # - GPL-3.0-only\n  # - Apache-2.0\n  # - CC-BY-4.0\n  license: license (GPL-2.0-or-later, MIT, etc)\n\n  min_ansible_version: 2.1\n\n  # If this a Container Enabled role, provide the minimum Ansible Container version.\n  # min_ansible_container_version:\n\n  #\n  # Provide a list of supported platforms, and for each platform a list of versions.\n  # If you don't wish to enumerate all versions for a particular platform, use 'all'.\n  # To view available platforms and versions (or releases), visit:\n  # https://galaxy.ansible.com/api/v1/platforms/\n  #\n  # platforms:\n  # - name: Fedora\n  #   versions:\n  #   - all\n  #   - 25\n  # - name: SomePlatform\n  #   versions:\n  #   - all\n  #   - 1.0\n  #   - 7\n  #   - 99.99\n\n  galaxy_tags: []\n    # List tags for your role here, one per line. A tag is a keyword that describes\n    # and categorizes the role. Users find roles by searching for tags. Be sure to\n    # remove the '[]' above, if you add tags to this list.\n    #\n    # NOTE: A tag is limited to a single word comprised of alphanumeric characters.\n    #       Maximum 20 tags per role.\n\ndependencies: []\n  # List your role dependencies here, one per line. Be sure to remove the '[]' above,\n  # if you add dependencies to this list.\n",
      "path": "/roles/ruby/meta/"
    },
    {
      "filename": "main.yml",
      "content": "---\n# handlers file for ruby\n",
      "path": "/roles/ruby/handlers/"
    },
    {
      "filename": "test.yml",
      "content": "---\n- hosts: localhost\n  remote_user: root\n  roles:\n    - ruby\n",
      "path": "/roles/ruby/tests/"
    },
    {
      "filename": "asdf.yml",
      "content": "---\n\n- block:\n    - name: Clone asdf\n      git:\n        repo: https://github.com/asdf-vm/asdf.git\n        dest: \"{{ user.home }}/.asdf\"\n        recursive: yes\n        accept_hostkey: yes\n        update: no\n        force: no\n        version: v0.13.1\n      check_mode: no\n\n    - name: Set default-gems\n      template:\n        src: home/.default-gems.j2\n        dest: \"{{ user.home }}/.default-gems\"\n        owner: \"{{ user.name }}\"\n        group: \"{{ user.group }}\"\n        mode: '0644'\n\n    # - name: Install ruby plugin\n    #   shell: |\n    #     source ~/.zshrc && \\\n    #     asdf plugin add ruby https://github.com/asdf-vm/asdf-ruby.git && \\\n    #     asdf install ruby 3.1.4 && \\\n    #     asdf global ruby 3.1.4\n    #   args:\n    #     executable: /bin/zsh\n\n    - name: Install ruby plugin\n      shell: |\n        asdf plugin add ruby https://github.com/asdf-vm/asdf-ruby.git && \\\n        asdf install ruby 3.1.4 && \\\n        asdf global ruby 3.1.4\n\n  become: False\n",
      "path": "/roles/ruby/tasks/"
    },
    {
      "filename": "main.yml",
      "content": "---\n# tasks file for ruby\n- name: Ruby Tasks\n  debug:\n    msg: \"Starting ruby tasks\"\n\n- name: Load a variable file based on the OS type, or a default if not found. the file.\n  include_vars: \"{{ lookup('ansible.builtin.first_found', params) }}\"\n  vars:\n    params:\n      files:\n        # - '{{ansible_distribution}}.yml'\n        - '{{ansible_os_family}}.yml'\n        # - Archlinux.yml\n        # - main.yml\n      paths:\n        - 'vars'\n  tags: ['packages']\n\n- setup:\n- debug:\n    msg: \"{{ packages }}\"\n\n# by default /etc/gemrc is set to --user-install\n# set --no-user-install in /root/.gemrc\n# to install gems system wide using sudo\n- name: Set --no-user-install in /root/.gemrc\n  copy:\n    content: |\n      gem: --no-user-install --no-document\n    dest: \"/root/.gemrc\"\n    owner: root\n\n- name: Set --user-install in /home/user/.gemrc\n  copy:\n    content: |\n      gem: --user-install\n    dest: \"{{ user.home }}/.gemrc\"\n    owner: \"{{ user.name }}\"\n\n- name: Set --no-user-install in /etc/gemrc\n  copy:\n    content: |\n      gem: --user-install\n    dest: \"/etc/gemrc\"\n    owner: root\n\n- name: Install Ruby dev packages\n  package:\n    name: \"{{ packages }}\"\n    state: present\n  tags: ['packages']\n\n- import_tasks:\n    file: asdf.yml\n  tags: ['asdf']\n\n- name: Install ruby profile.d script\n  template:\n    src: etc/profile.d/ruby.sh.j2\n    dest: /etc/profile.d/ruby.sh\n    owner: root\n    group: root\n    mode: '0755'\n    backup: True\n\n# - name: update system bundler\n#   shell: gem update --system 3.4.21\n#\n# - name: gather list of installed gems\n#   shell: \"gem list | awk '{ print $1 }'\"\n#   become: False\n#   register: gemlist\n#   changed_when: gemlist.rc != 0\n#   ignore_errors: \"{{ ansible_check_mode }}\"\n#\n# - name: set list of gems to install\n#   set_fact:\n#     ruby__gems: \"{{ gems|difference(gemlist.stdout) }}\"\n#\n# - name: install ruby gems\n#   shell: \"gem install {{ item }}\"\n#   with_items:\n#     - \"{{ ruby__gems }}\"\n#   when: ruby__gems | length > 0\n",
      "path": "/roles/ruby/tasks/"
    },
    {
      "filename": "Debian.yml",
      "content": "---\n\npackages:\n  - cmake\n  - libgit2-dev\n  - libopenslide-dev\n  - libreadline-dev\n  - libssl-dev\n  - libvips-dev\n  - libyaml-dev\n  - openssl\n  - postgresql-server-dev-all\n  - ruby-dev\n",
      "path": "/roles/ruby/vars/"
    },
    {
      "filename": "Archlinux.yml",
      "content": "---\n\npackages:\n  - cmake\n  - libgit2\n  - libvips\n  - openslide\n  - openssl\n  - postgresql-libs\n  - ruby-psych\n",
      "path": "/roles/ruby/vars/"
    },
    {
      "filename": "RedHat.yml",
      "content": "---\n\npackages:\n  - cmake\n  - libgit2-devel\n  - openslide-devel\n  - readline-devel\n  - openssl-devel\n  - vips-devel\n  - libyaml-devel\n  - openssl\n  # - postgresql-server-devel\n  - libpq-devel\n  - ruby-devel\n",
      "path": "/roles/ruby/vars/"
    },
    {
      "filename": "main.yml",
      "content": "---\n# vars file for ruby\n",
      "path": "/roles/ruby/vars/"
    },
    {
      "filename": "main.yml",
      "content": "---\n# defaults file for ruby\n\npackages:\n  - ruby\n  - ruby-psych\n\nrubies:\n  - 3.1.0\n  - 3.0.0\n\ngems:\n  - activesupport\n  - awesome_print\n  - bcrypt_pbkdf\n  - bundler\n  - childprocess\n  - clipboard\n  - colorize\n  - coltrane\n  - debug\n  - drydock\n  - ed25519\n  - eventmachine\n  - ffi\n  - fractional\n  - geo_coord\n  - highline\n  - i3ipc\n  - i18n\n  - irb\n  - json\n  - jsonl\n  - kramdown\n  - langchainrb\n  - logging\n  - minitest\n  - mocha\n  - multi_json\n  - neovim\n  - net-ssh\n  - open3\n  - open4\n  - parallel\n  - pastel\n  - pry\n  - pry-doc\n  - psych\n  - rake\n  - rdoc\n  - rexml\n  - rouge\n  - ruby-lsp\n  - ruby-openai\n  - rugged\n  - ruport\n  - solargraph\n  - sync\n  - sys-proctable\n  - treetop\n  - tty-box\n  - tty-command\n  - tty-config\n  - tty-prompt\n  - tty-screen\n  - yaml\n",
      "path": "/roles/ruby/defaults/"
    },
    {
      "filename": "main.yml",
      "content": "galaxy_info:\n  author: your name\n  description: your role description\n  company: your company (optional)\n\n  # If the issue tracker for your role is not on github, uncomment the\n  # next line and provide a value\n  # issue_tracker_url: http://example.com/issue/tracker\n\n  # Choose a valid license ID from https://spdx.org - some suggested licenses:\n  # - BSD-3-Clause (default)\n  # - MIT\n  # - GPL-2.0-or-later\n  # - GPL-3.0-only\n  # - Apache-2.0\n  # - CC-BY-4.0\n  license: license (GPL-2.0-or-later, MIT, etc)\n\n  min_ansible_version: 2.1\n\n  # If this a Container Enabled role, provide the minimum Ansible Container version.\n  # min_ansible_container_version:\n\n  galaxy_tags: []\n    # List tags for your role here, one per line. A tag is a keyword that describes\n    # and categorizes the role. Users find roles by searching for tags. Be sure to\n    # remove the '[]' above, if you add tags to this list.\n    #\n    # NOTE: A tag is limited to a single word comprised of alphanumeric characters.\n    #       Maximum 20 tags per role.\n\ndependencies: []\n  # List your role dependencies here, one per line. Be sure to remove the '[]' above,\n  # if you add dependencies to this list.\n",
      "path": "/roles/rofi/meta/"
    },
    {
      "filename": "main.yml",
      "content": "---\n# handlers file for rofi\n",
      "path": "/roles/rofi/handlers/"
    },
    {
      "filename": "test.yml",
      "content": "---\n- hosts: localhost\n  remote_user: root\n  roles:\n    - rofi\n",
      "path": "/roles/rofi/tests/"
    },
    {
      "filename": "main.yml",
      "content": "---\n# tasks file for rofi\n- name: rofi Tasks\n  debug:\n    msg: \"Starting rofi tasks\"\n\n- name: Ensure rofi directories exist\n  file:\n    dest: \"{{ rofi_directory_default_location }}/{{ item.dest }}\"\n    state: directory\n    owner: \"{{ item.owner | default(omit) }}\"\n    group: \"{{ item.group | default(omit) }}\"\n    mode: \"{{ item.mode | default(omit) }}\"\n    recurse: \"{{ item.recurse | default(false) }}\"\n  loop: \"{{ rofi_directory_definitions }}\"\n  check_mode: no\n  tags: ['profile']\n\n- name: Synchronize templates - rofi\n  template:\n    src: \"{{ item }}.j2\"\n    dest: \"{{ user.home }}/.config/rofi/{{ item }}\"\n    owner: \"{{ user.name }}\"\n    group: \"{{ user.group }}\"\n    mode: preserve\n    backup: yes\n  with_items:\n    - config.rasi\n    - gruvbox-common.rasi\n    - gruvbox-dark-hard.rasi\n    - colors/onedark.rasi\n    - scripts/launcher_main.sh\n    - scripts/launcher_t1.sh\n    - scripts/launcher_t4.sh\n    - launchers/type-1/shared/colors.rasi\n    - launchers/type-1/shared/fonts.rasi\n    - launchers/type-1/style-8.rasi\n    - launchers/type-1/style-10.rasi\n    - launchers/type-4/shared/colors.rasi\n    - launchers/type-4/shared/fonts.rasi\n    - launchers/type-4/style-6.rasi\n  tags: ['profile', 'rofi', 'menus']\n",
      "path": "/roles/rofi/tasks/"
    },
    {
      "filename": "main.yml",
      "content": "---\n# vars file for rofi\n",
      "path": "/roles/rofi/vars/"
    },
    {
      "filename": "main.yml",
      "content": "---\n# defaults file for rofi\nrofi_directory_default_mode: '0750'\n\n# The default directory owner when creating directories using `rofi_directory_definitions`\nrofi_directory_default_owner: \"{{ user.name }}\"\n\n# The default directory group when creating directories using `rofi_directory_definitions`\nrofi_directory_default_group: \"{{ user.group }}\"\n\nrofi_directory_default_location: \"{{ user.home }}\"\n\nrofi_directory_default_recurse: False\n\nrofi_directory_definitions:\n  - dest: \".config/rofi/colors\"\n  - dest: \".config/rofi/images\"\n  - dest: \".config/rofi/launchers\"\n  - dest: \".config/rofi/launchers/type-1/shared\"\n  - dest: \".config/rofi/launchers/type-2/shared\"\n  - dest: \".config/rofi/launchers/type-3/shared\"\n  - dest: \".config/rofi/launchers/type-4/shared\"\n  - dest: \".config/rofi/launchers/type-5/shared\"\n  - dest: \".config/rofi/launchers/type-6/shared\"\n  - dest: \".config/rofi/launchers/type-7/shared\"\n  - dest: \".config/rofi/powermenu\"\n  - dest: \".config/rofi/powermenu/type-1/shared\"\n  - dest: \".config/rofi/powermenu/type-2/shared\"\n  - dest: \".config/rofi/powermenu/type-3/shared\"\n  - dest: \".config/rofi/powermenu/type-4/shared\"\n  - dest: \".config/rofi/powermenu/type-5/shared\"\n  - dest: \".config/rofi/powermenu/type-6/shared\"\n  - dest: \".config/rofi/scripts\"\n\npackages:\n  - rofi\n",
      "path": "/roles/rofi/defaults/"
    },
    {
      "filename": "main.yml",
      "content": "galaxy_info:\n  author: your name\n  description: your role description\n  company: your company (optional)\n\n  # If the issue tracker for your role is not on github, uncomment the\n  # next line and provide a value\n  # issue_tracker_url: http://example.com/issue/tracker\n\n  # Choose a valid license ID from https://spdx.org - some suggested licenses:\n  # - BSD-3-Clause (default)\n  # - MIT\n  # - GPL-2.0-or-later\n  # - GPL-3.0-only\n  # - Apache-2.0\n  # - CC-BY-4.0\n  license: license (GPL-2.0-or-later, MIT, etc)\n\n  min_ansible_version: 2.1\n\n  # If this a Container Enabled role, provide the minimum Ansible Container version.\n  # min_ansible_container_version:\n\n  galaxy_tags: []\n    # List tags for your role here, one per line. A tag is a keyword that describes\n    # and categorizes the role. Users find roles by searching for tags. Be sure to\n    # remove the '[]' above, if you add tags to this list.\n    #\n    # NOTE: A tag is limited to a single word comprised of alphanumeric characters.\n    #       Maximum 20 tags per role.\n\ndependencies: []\n  # List your role dependencies here, one per line. Be sure to remove the '[]' above,\n  # if you add dependencies to this list.\n",
      "path": "/roles/barrier/meta/"
    },
    {
      "filename": "main.yml",
      "content": "---\n# handlers file for barrier\n",
      "path": "/roles/barrier/handlers/"
    },
    {
      "filename": "test.yml",
      "content": "---\n- hosts: localhost\n  remote_user: root\n  roles:\n    - barrier\n",
      "path": "/roles/barrier/tests/"
    },
    {
      "filename": "main.yml",
      "content": "---\n\n# tasks file for Barrier\n- name: Barrier Tasks\n  debug:\n    msg: \"Starting Barrier tasks\"\n\n- name: Ensure folders for barrier configs exist\n  file:\n    path: \"{{ item }}\"\n    state: directory\n    owner: \"{{ user.name }}\"\n    group: \"{{ user.group }}\"\n  with_items:\n    - \"{{ user.home }}/.config/Debauchee\"\n    - \"{{ user.home }}/.config/autostart\"\n\n- name: Set barrier server config\n  copy:\n    src: home/.config/Debauchee/{{ inventory_hostname }}.conf\n    dest: \"{{ user.home }}/.config/Debauchee/{{ inventory_hostname }}.conf\"\n    owner: \"{{ user.name }}\"\n    group: \"{{ user.group }}\"\n    mode: '0644'\n    backup: yes\n  when: barrier.server is defined\n\n# - name: Set barrier server autostart\n#   template:\n#     src: \"home/.config/autostart/barrier-server.desktop.j2\"\n#     dest: \"{{ user.home }}/.config/autostart/barrier-server.desktop\"\n#     owner: \"{{ user.name }}\"\n#     group: \"{{ user.group }}\"\n#     mode: '0644'\n#     backup: True\n#   when: barrier.server is defined\n#\n# - name: Set barrier client autostart\n#   template:\n#     src: \"home/.config/autostart/barrier-client.desktop.j2\"\n#     dest: \"{{ user.home }}/.config/autostart/barrier-client.desktop\"\n#     owner: \"{{ user.name }}\"\n#     group: \"{{ user.group }}\"\n#     mode: '0644'\n#     backup: True\n#   when: barrier.client is defined\n",
      "path": "/roles/barrier/tasks/"
    },
    {
      "filename": "main.yml",
      "content": "---\n# vars file for barrier\n",
      "path": "/roles/barrier/vars/"
    },
    {
      "filename": "main.yml",
      "content": "---\n# roles/barrier\npackages:\n  - barrier\n",
      "path": "/roles/barrier/defaults/"
    },
    {
      "filename": "main.yml",
      "content": "galaxy_info:\n  author: your name\n  description: your role description\n  company: your company (optional)\n\n  # If the issue tracker for your role is not on github, uncomment the\n  # next line and provide a value\n  # issue_tracker_url: http://example.com/issue/tracker\n\n  # Choose a valid license ID from https://spdx.org - some suggested licenses:\n  # - BSD-3-Clause (default)\n  # - MIT\n  # - GPL-2.0-or-later\n  # - GPL-3.0-only\n  # - Apache-2.0\n  # - CC-BY-4.0\n  license: license (GPL-2.0-or-later, MIT, etc)\n\n  min_ansible_version: 2.1\n\n  # If this a Container Enabled role, provide the minimum Ansible Container version.\n  # min_ansible_container_version:\n\n  #\n  # Provide a list of supported platforms, and for each platform a list of versions.\n  # If you don't wish to enumerate all versions for a particular platform, use 'all'.\n  # To view available platforms and versions (or releases), visit:\n  # https://galaxy.ansible.com/api/v1/platforms/\n  #\n  # platforms:\n  # - name: Fedora\n  #   versions:\n  #   - all\n  #   - 25\n  # - name: SomePlatform\n  #   versions:\n  #   - all\n  #   - 1.0\n  #   - 7\n  #   - 99.99\n\n  galaxy_tags:\n    []\n    # List tags for your role here, one per line. A tag is a keyword that describes\n    # and categorizes the role. Users find roles by searching for tags. Be sure to\n    # remove the '[]' above, if you add tags to this list.\n    #\n    # NOTE: A tag is limited to a single word comprised of alphanumeric characters.\n    #       Maximum 20 tags per role.\n\ndependencies: []\n  # List your role dependencies here, one per line. Be sure to remove the '[]' above,\n  # if you add dependencies to this list.\n",
      "path": "/roles/user/meta/"
    },
    {
      "filename": "main.yml",
      "content": "---\n# handlers file for user\n",
      "path": "/roles/user/handlers/"
    },
    {
      "filename": "test.yml",
      "content": "---\n- hosts: localhost\n  remote_user: root\n  roles:\n    - user\n",
      "path": "/roles/user/tests/"
    },
    {
      "filename": "main.yml",
      "content": "---\n# tasks file for user\n\n- name: User Tasks\n  debug:\n    msg: \"Starting user tasks\"\n\n- name: Add user to groups\n  user:\n    name: \"{{ user.name }}\"\n    groups: \"video,audio,input\"\n    append: yes\n  tags: ['groups']\n\n\n- block:\n    - name: Check if keys are present\n      stat:\n        path: \"{{ user.home }}/.ssh/id_ed25519\"\n      register: keys\n\n    - name: Start ssh daemon\n      service:\n        name: sshd\n        state: started\n        enabled: True\n\n    - name: Copy keys from remote host\n      delegate_to: 127.0.0.1\n      run_once: True\n      become_user: \"{{ user.name }}\"\n      shell: \"scp {{ user.name }}@{{ keyserver }}:~/.ssh/{{ item }} {{ user.home }}/.ssh/{{ item }}\"\n      args:\n        chdir: \"{{ user.home }}\"\n      with_items:\n        - id_ed25519\n        - id_ed25519.pub\n        - config\n        - known_hosts\n        - authorized_keys\n      when:\n        - not keys.stat.exists\n        - newInstall is defined\n\n  tags: [\"keys\"]\n\n\n# dotfiles\n# user defined tasks here\n# - name: Install .gitconfig\n#   template:\n#     src: home/.gitconfig\n#     dest: \"{{ user.home }}/.gitconfig\"\n#     owner: \"{{ user.name }}\"\n#     group: \"{{ user.group }}\"\n#     mode: '0644'\n#   tags: ['dots']\n",
      "path": "/roles/user/tasks/"
    },
    {
      "filename": "main.yml",
      "content": "---\n# vars file for user\n",
      "path": "/roles/user/vars/"
    },
    {
      "filename": "main.yml",
      "content": "---\n# defaults file for user\n",
      "path": "/roles/user/defaults/"
    },
    {
      "filename": "main.yml",
      "content": "galaxy_info:\n  author: your name\n  description: your role description\n  company: your company (optional)\n\n  # If the issue tracker for your role is not on github, uncomment the\n  # next line and provide a value\n  # issue_tracker_url: http://example.com/issue/tracker\n\n  # Choose a valid license ID from https://spdx.org - some suggested licenses:\n  # - BSD-3-Clause (default)\n  # - MIT\n  # - GPL-2.0-or-later\n  # - GPL-3.0-only\n  # - Apache-2.0\n  # - CC-BY-4.0\n  license: license (GPL-2.0-or-later, MIT, etc)\n\n  min_ansible_version: 2.1\n\n  # If this a Container Enabled role, provide the minimum Ansible Container version.\n  # min_ansible_container_version:\n\n  galaxy_tags: []\n    # List tags for your role here, one per line. A tag is a keyword that describes\n    # and categorizes the role. Users find roles by searching for tags. Be sure to\n    # remove the '[]' above, if you add tags to this list.\n    #\n    # NOTE: A tag is limited to a single word comprised of alphanumeric characters.\n    #       Maximum 20 tags per role.\n\ndependencies: []\n  # List your role dependencies here, one per line. Be sure to remove the '[]' above,\n  # if you add dependencies to this list.\n",
      "path": "/roles/pi/meta/"
    },
    {
      "filename": "main.yml",
      "content": "---\n# handlers file for pi\n",
      "path": "/roles/pi/handlers/"
    },
    {
      "filename": "test.yml",
      "content": "---\n- hosts: localhost\n  remote_user: root\n  roles:\n    - pi\n",
      "path": "/roles/pi/tests/"
    },
    {
      "filename": "main.yml",
      "content": "---\n# tasks file for pi\n",
      "path": "/roles/pi/tasks/"
    },
    {
      "filename": "main.yml",
      "content": "---\n# vars file for pi\n",
      "path": "/roles/pi/vars/"
    },
    {
      "filename": "main.yml",
      "content": "---\n# defaults file for pi\n",
      "path": "/roles/pi/defaults/"
    },
    {
      "filename": "main.yml",
      "content": "galaxy_info:\n  author: your name\n  description: your role description\n  company: your company (optional)\n\n  # If the issue tracker for your role is not on github, uncomment the\n  # next line and provide a value\n  # issue_tracker_url: http://example.com/issue/tracker\n\n  # Choose a valid license ID from https://spdx.org - some suggested licenses:\n  # - BSD-3-Clause (default)\n  # - MIT\n  # - GPL-2.0-or-later\n  # - GPL-3.0-only\n  # - Apache-2.0\n  # - CC-BY-4.0\n  license: license (GPL-2.0-or-later, MIT, etc)\n\n  min_ansible_version: 2.1\n\n  # If this a Container Enabled role, provide the minimum Ansible Container version.\n  # min_ansible_container_version:\n\n  #\n  # Provide a list of supported platforms, and for each platform a list of versions.\n  # If you don't wish to enumerate all versions for a particular platform, use 'all'.\n  # To view available platforms and versions (or releases), visit:\n  # https://galaxy.ansible.com/api/v1/platforms/\n  #\n  # platforms:\n  # - name: Fedora\n  #   versions:\n  #   - all\n  #   - 25\n  # - name: SomePlatform\n  #   versions:\n  #   - all\n  #   - 1.0\n  #   - 7\n  #   - 99.99\n\n  galaxy_tags: []\n    # List tags for your role here, one per line. A tag is a keyword that describes\n    # and categorizes the role. Users find roles by searching for tags. Be sure to\n    # remove the '[]' above, if you add tags to this list.\n    #\n    # NOTE: A tag is limited to a single word comprised of alphanumeric characters.\n    #       Maximum 20 tags per role.\n\ndependencies: []\n  # List your role dependencies here, one per line. Be sure to remove the '[]' above,\n  # if you add dependencies to this list.\n",
      "path": "/roles/distro/meta/"
    },
    {
      "filename": "main.yml",
      "content": "---\n# handlers file for roles/distro\n\n- name: Update pacman cache\n  pacman:\n    update_cache: True\n    upgrade: False\n\n- name: Update pacman mirrors\n  shell: |\n    reflector --download-timeout 2 --protocol https \\\n    --latest 20 --sort rate --score 15 --fastest 12 \\\n    --save /etc/pacman.d/mirrorlist\n  ignore_errors: True\n",
      "path": "/roles/distro/handlers/"
    },
    {
      "filename": "test.yml",
      "content": "---\n- hosts: localhost\n  remote_user: root\n  roles:\n    - roles/distro\n",
      "path": "/roles/distro/tests/"
    },
    {
      "filename": "packages.yml",
      "content": "---\n\n- name: Current packages installed\n  shell: |\n    paru -Q |awk '{print $1}'\n  become: False\n  register: arch_installed_packages\n  check_mode: no\n  tags: ['packages']\n\n- block:\n    - name: install packages\n      aur:\n        use: paru\n        name: \"{{ packages|difference(arch_installed_packages.stdout) }}\"\n        state: present\n        extra_args: \"--overwrite '*'\"\n      become: False\n      when: arch_installed_packages | length > 0\n      tags: ['packages']\n\n  rescue:\n    - name: Handle installation failure\n      debug:\n        msg: \"Failed to install a package. Check the logs.\"\n\n  always:\n    - name: Continue executions\n      debug:\n        msg: \"Continuing with playbook execution.\"\n\n  become: False\n  tags: ['packages']\n\n\n- block:\n    - name: Install host specific xorg packages\n      aur:\n        use: paru\n        name: \"{{ host.xorg.video|difference(arch_installed_packages.stdout) }}\"\n        state: present\n        extra_args: \"--overwrite '*'\"\n      when: host.xorg.video is defined\n\n  rescue:\n    - name: Handle installation failure\n      debug:\n        msg: \"Failed to install a package. Check the logs.\"\n\n  always:\n    - name: Continue executions\n      debug:\n        msg: \"Continuing with playbook execution.\"      \n\n  become: False\n  tags: [\"x\"]\n",
      "path": "/roles/distro/tasks/Archlinux/"
    },
    {
      "filename": "mirrors.yml",
      "content": "---\n\n- name: Check if mirrors have been updated within the past 24h\n  shell: \"fd --changed-within 24hours --search-path=/etc/pacman.d\"\n  register: mirror_status\n  tags: [\"mirrors\"]\n\n- name: Print mirror file status\n  debug:\n    msg: \"{{ mirror_status }}\"\n  when:\n    - ( mirror_status.stdout_lines | length < 0 or update_mirrors is defined )\n    - debugging is defined\n  tags: [\"mirrors\"]\n",
      "path": "/roles/distro/tasks/Archlinux/"
    },
    {
      "filename": "paru.yml",
      "content": "---\n\n- name: Check if paru installed\n  stat:\n    path: /usr/bin/paru\n  register: paru\n  tags: ['packages']\n\n- name: Install paru if not installed\n  block:\n    - name: Install paru\n      pacman:\n        name: paru\n        state: present\n        force: yes\n        extra_args: --noconfirm\n      register: paru_package\n      until: \"paru_package is not failed\"\n      retries: 2\n      delay: 10\n\n  rescue:\n    - name: Clone paru\n      git:\n        repo: \"https://aur.archlinux.org/paru.git\"\n        dest: \"/tmp/paru\"\n        accept_hostkey: yes\n        update: yes\n        force: no\n      become: False\n\n    - name: Make and install paru\n      shell: \"makepkg -si --noconfirm --needed\"\n      args:\n        chdir: \"/tmp/paru\"\n      become: False\n\n    - name: clean and update package cache\n      shell: \"paru -Sc --noconfirm && paru -Syy\"\n      become: False\n\n  when: not paru.stat.exists\n  tags: ['packages']\n\n- name: Adjust paru config\n  template:\n    src: etc/paru.conf.j2\n    dest: /etc/paru.conf\n    mode: '0644'\n    backup: True\n  # ignore_errors: \"{{ ansible_check_mode }}\"\n",
      "path": "/roles/distro/tasks/Archlinux/"
    },
    {
      "filename": "chaotic.yml",
      "content": "---\n\n# - name: Import primary key - chaotic\n#   command: pacman-key --recv-key 3056513887B78AEB --keyserver keyserver.ubuntu.com\n#   register: importkey\n#   changed_when: false\n#\n# - name: Sign primary key - chaotic\n#   command: pacman-key --lsign-key 3056513887B78AEB\n#   register: signkey\n#   changed_when: false\n\n- name: Install chaotic keyring and mirrorlist\n  shell: |\n    pacman -U 'https://cdn-mirror.chaotic.cx/chaotic-aur/chaotic-keyring.pkg.tar.zst' --noconfirm && \\\n    pacman -U 'https://cdn-mirror.chaotic.cx/chaotic-aur/chaotic-mirrorlist.pkg.tar.zst' --noconfirm\n  changed_when: false\n\n- name: Check pacman.conf contents\n  command: cat /etc/pacman.conf\n  register: pacman_conf_output\n  changed_when: false\n\n- name: Add chaotic mirror list\n  copy:\n    src: etc/pacman.d/chaotic-mirrorlist\n    dest: /etc/pacman.d/chaotic-mirrorlist\n    owner: root\n    group: root\n    mode: '0644'\n    backup: True\n\n- name: Add repository to pacman.conf\n  lineinfile:\n    path: /etc/pacman.conf\n    line: |\n      [chaotic-aur]\n      Include = /etc/pacman.d/chaotic-mirrorlist\n    insertafter: EOF\n  when: \"'[chaotic-aur]' not in pacman_conf_output.stdout\"\n  changed_when: false\n  failed_when: false\n  register: pacman_conf_add\n\n- name: Update cache\n  pacman:\n    update_cache: True\n    upgrade: False\n",
      "path": "/roles/distro/tasks/Archlinux/"
    },
    {
      "filename": "main.yml",
      "content": "---\n#setup repositories\n- name: Starting distro tasks\n  debug:\n    var: ansible_os_family\n  tags: ['always']\n\n- name: install reflector package\n  pacman:\n    name: \"{{ item }}\"\n    state: present\n    force: yes\n    extra_args: --noconfirm\n  with_items:\n    - aria2\n    - fd\n    - reflector\n    - ripgrep\n\n- block:\n    # - name: Import syncopated repo key\n    #   community.general.pacman_key:\n    #     id: DF7A6571781ACB52FA9CF8C1EB4DFE46828DFEDD\n    #     url: http://bender.syncopated.net/syncopated/repo/syncopated.gpg\n    #     state: present\n    #   when: repos.syncopated is defined\n    #   tags: [\"repo\"]\n\n    - name: Import archaudio repo key\n      community.general.pacman_key:\n        id: 762AE5DB2B38786364BD81C4B9141BCC62D38EE5\n        url: https://arch.osamc.de/proaudio/osamc.gpg\n        state: present\n      register: archaudio_keys\n      tags: [\"repo\"]\n\n    - name: Set pacman.conf config\n      template:\n        src: etc/pacman.conf.j2\n        dest: /etc/pacman.conf\n        mode: \"0644\"\n        backup: True\n      tags: [\"pacman\"]\n\n    - name: Set makepkg to use aria2\n      template:\n        src: etc/makepkg.conf.j2\n        dest: /etc/makepkg.conf\n        mode: \"0644\"\n        backup: True\n      tags: [\"makepkg\"]\n\n    - import_tasks:\n        file: chaotic.yml\n      when: chaoticrepo|bool\n      tags: [\"repo\", \"chaotic\"]\n\n  # when: \"{{ install. }}|bool\"\n  notify:\n    - \"Update pacman mirrors\"\n    - \"Update pacman cache\"\n\n- name: Flush handlers\n  meta: flush_handlers\n\n- import_tasks:\n    file: paru.yml\n  tags: [\"paru\"]\n  # check_mode: yes\n\n# - import_tasks:\n#     file: packages.yml\n#   tags: [\"packages\"]\n\n# - name: install packages\n#   aur:\n#     use: paru\n#     name: \"{{ arch_packages }}\"\n#     state: present\n#   become: False\n#   when: arch_installed_packages | length > 0\n",
      "path": "/roles/distro/tasks/Archlinux/"
    },
    {
      "filename": "main.yml",
      "content": "---\n# tasks file for roles/distro\n# at this point, packages will be set as a variable....\n\n- setup:\n- debug:\n    msg: \"{{ ansible_os_family }}\"\n  tags: ['always']\n\n- name: Load a variable file based on the OS type, or a default if not found. the file.\n  include_vars: \"{{ lookup('ansible.builtin.first_found', params) }}\"\n  vars:\n    params:\n      files:\n        # - '{{ansible_distribution}}.yml'\n        - '{{ansible_os_family}}.yml'\n        # - Archlinux.yml\n        # - main.yml\n      paths:\n        - 'vars'\n  tags: ['always']\n\n\n\n\n- block:\n    - import_tasks:\n        file: \"Archlinux/main.yml\"\n      tags: ['repo', 'mirrors']\n\n    # - name: Current packages installed\n    #   shell: |\n    #     paru -Q |awk '{print $1}'\n    #   become: False\n    #   register: installed_packages\n    #   check_mode: no\n    #   tags: ['packages']\n    #\n    # - name: Set packages to be installed\n    #   set_fact:\n    #     arch_packages: \"{{ packages|difference(arch_installed_packages.stdout) }}\"\n    #   check_mode: no\n    #   tags: ['packages']\n\n  when: ansible_os_family == 'Archlinux'\n",
      "path": "/roles/distro/tasks/"
    },
    {
      "filename": "Raspberry.yml",
      "content": "---\n\n# repo info\n",
      "path": "/roles/distro/vars/"
    },
    {
      "filename": "Debian.yml",
      "content": "---\nadmin_group: sudo\n",
      "path": "/roles/distro/vars/"
    },
    {
      "filename": "Archlinux.yml",
      "content": "---\nadmin_group: wheel\n\nrepos_chaotic: True\nrepos_syncopated: False\n# syncopated:\n#     mirrors:\n#   \"http://bender.syncopated.net/syncopated/repo\"\n      #  \"http://syncopated.hopto.org/syncopated/repo\"\n\nchaoticrepo: True\n\nIgnorePkg: \"ncurses lib32-ncurses gitui\"\n\ndistro__packages:\n  - archlinux-xdg-menu\n\n\n# alsa: audio role\n# ambisonics: audio role\n# analysis: audio role\n# audio: audio role\n# browser: desktop role\n# codecs: audio role\n# cursors: desktop role\n# desktop: desktop role\n# development: desktop role\n# docs: desktop role\n# fonts: desktop role\n# gtk3: desktop role\n# i3: desktop role\n# icons: desktop role\n# jack: audio role\n# kvantum: desktop role\n# loopers: audio role\n# media: desktop role\n# midi: audio role\n# pipewire: audio role\n# plugins: audio role\n# pulseaudio: audio role\n# python: desktop role\n# qt5: desktop role\n# qt6: desktop role\n# ruby: ruby role\n# samplers: audio role\n# sequencers: audio role\n# sway: desktop role\n# synths: audio role\n# terminal: terminal role\n# themes: desktop role\n# tools: audio role\n# utility: desktop role\n# xorg: x role\n",
      "path": "/roles/distro/vars/"
    },
    {
      "filename": "ArchlinuxOld.yml",
      "content": "---\nadmin_group: wheel\n\nrepos:\n  syncopated:\n    mirrors:\n      - \"http://bender.syncopated.net/syncopated/repo\"\n      #      - \"http://syncopated.hopto.org/syncopated/repo\"\n\n# IgnorePkg: \"ncurses lib32-ncurses gitui\"\n\n# alsa: audio role\n# ambisonics: audio role\n# analysis: audio role\n# audio: audio role\n# browser: desktop role\n# codecs: audio role\n# cursors: desktop role\n# desktop: desktop role\n# development: desktop role\n# docs: desktop role\n# fonts: desktop role\n# gtk3: desktop role\n# i3: desktop role\n# icons: desktop role\n# jack: audio role\n# kvantum: desktop role\n# loopers: audio role\n# media: desktop role\n# midi: audio role\n# pipewire: audio role\n# plugins: audio role\n# pulseaudio: audio role\n# python: desktop role\n# qt5: desktop role\n# qt6: desktop role\n# ruby: ruby role\n# samplers: audio role\n# sequencers: audio role\n# sway: desktop role\n# synths: audio role\n# terminal: terminal role\n# themes: desktop role\n# tools: audio role\n# utility: desktop role\n# xorg: x role\n\npackages:\n  alsa:\n    - a2jmidid\n    - alsa-card-profiles\n    - alsa-firmware\n    - alsa-lib\n    - alsa-plugins\n    - alsa-tools\n    - alsa-topology-conf\n    - alsa-ucm-conf\n    - alsa-utils\n    - zita-alsa-pcmi\n  ambisonics:\n    - ambdec\n    - ambix-o1\n    - iempluginsuite-git\n    - sparta-plugins\n  analysis:\n    - baudline-bin\n    - jaaa\n    - japa\n    - jnoisemeter\n    - vamp-plugin-sdk\n  audio:\n    # - Catch2\n    # - ambix-o3\n    # - ambix-o5\n    # - antimicrox\n    # - crossguid\n    # - drumrox\n    # - kissfft\n    # - linuxsampler-svn\n    # - lnav-git\n    # - mcfx-o1\n    # - mcfx-o3\n    # - mcfx-o5\n    # - platformfolders\n    # - raul\n    # - sonic-visualiser-git\n    # - sononym\n    # - syncopated-theme\n    # - vital-synth-git\n    # - vst2sdk\n    # - wkhtmltopdf-static\n  browser:\n    - elinks\n    - google-chrome\n    - lynx\n    - qutebrowser\n  codecs:\n    - faac\n    - faad2\n    - fftw\n    - flac\n    - gst-libav\n    - gst-plugins-bad\n    - gst-plugins-bad-libs\n    - gst-plugins-base\n    - gst-plugins-base-libs\n    - gst-plugins-good\n    - gstreamer\n    - lame\n    - opus\n    - opus-tools\n    - opusfile\n    - vorbis-tools\n    - wavpack\n    - x264\n    - x265\n  cursors:\n    - xcursor-breeze\n  desktop:\n    # - obs-rtspserver\n    # - pgmodeler\n    - archlinux-xdg-menu\n    - ascii-image-converter\n    - asciiquarium-transparent-git\n    - cbonsai\n    - dconf\n    - dunst\n    - fuse3\n    - fuse-common\n    - gconf\n    - gedit\n    - gedit-dark-variant\n    - gedit-markdownpreview-git\n    - gedit-plugins\n    - gedit-smart-home\n    - geoclue\n    - gksu\n    - gvfs-smb\n    # - hexchat\n    - iotop\n    - libaudec\n    - libcaca\n    - libcyaml\n    - lsp-dsp-lib\n    - lsparu\n    - maim\n    - mediamtx\n    - metagedit-git\n    - network-manager-applet\n    - octopi\n    - paruz\n    - patat-bin\n    # - pgvector\n    - redshift\n    - rofi\n    - sampler\n    - sd\n    - speech-dispatcher\n    - sshpass\n    - stunnel\n    - sudo\n    - sysstat\n    - taglib\n    - thunar\n    - thunar-archive-plugin\n    - thunar-volman\n    - tldr\n    - ttf-tw\n    - ueberzug\n    - unrar\n    - unzip\n    - wmctrl\n    - wmfocus\n    - wordnet-cli\n    - wordnet-common\n    - wordnet-tk\n    - xarchiver\n    - xclip\n    - xdot\n    - zenity\n  livecoding:\n    - bipscript\n    - bipscript-ide\n    - sc3-plugins\n    - sonic-pi-git\n    - supercollider\n  development:\n    - bash-language-server\n    - beautysh\n    - code-marketplace\n    # - devdocs-desktop\n    - git\n    - git-lfs\n    - gitflow-avh\n    - gitflow-zshcompletion-avh\n    - github-cli\n    - gitui\n    - gnuplot\n    - gource\n    - gtksourceview3\n    - gtksourceview4\n    - gtkspell3\n    - gummi\n    - highlight\n    - hspell\n    - html2md\n    - jc\n    - keepassxc\n    - libvoikko\n    - meld\n    - micro\n    - nano-syntax-highlighting\n    - neovim\n    - neovim-symlinks\n    - nodejs\n    - npm\n    - nuspell\n    - nyan-lang-git\n    - obsidian\n    - odt2txt\n    - open-chinese-fonts\n    - pdf2htmlex-appimage\n    - pdfjs\n    - perl-image-exiftool\n    - pod2man\n    - poppler\n    - qpdf\n    - qpdfview\n    - termpdf.py-git\n  texlive:\n    - pandoc-cli\n    - texlive-basic\n    - texlive-bin\n    - texlive-coffee-stains\n    - texlive-doc\n    - texlive-fontsrecommended\n    - texlive-latex\n    - texlive-latexextra\n    - texlive-latexrecommended\n    - texlive-pictures\n    - texlive-xetex\n    - texlive-fontsextra\n  editors:\n    - aubio\n    - audacity\n    - audiofile\n    - midieditor\n    - ocenaudio-bin\n    - polyphone\n    - bitwig-studio\n  fonts:\n    - adobe-source-han-sans-cn-fonts\n    - adobe-source-han-sans-jp-fonts\n    - adobe-source-han-sans-kr-fonts\n    - arc-icon-theme\n    - awesome-terminal-fonts\n    - cantarell-fonts\n    - gnu-free-fonts\n    - noto-color-emoji-fontconfig\n    - noto-fonts\n    - noto-fonts-cjk\n    - noto-fonts-emoji\n    # - numix-circle-icon-theme-git\n    # - numix-icon-theme-git\n    - opendesktop-fonts\n    - ttf-bitstream-vera\n    - ttf-dejavu\n    - ttf-devicons\n    - ttf-firacode-nerd\n    - ttf-font-awesome\n    - ttf-input\n    - ttf-jetbrains-mono\n    - ttf-liberation\n    - ttf-meslo-nerd\n    - ttf-opensans\n    - ttf-ubuntu-font-family\n  gtk3:\n    - breeze-gtk\n    - gtk3-nocsd\n    - gtk-doc\n    - gtk-engine-murrine\n    - gtk-engines\n    - gtk-update-icon-cache\n    - gtksourceview3\n    - gtkspell3\n  i3:\n    - arandr\n    - dex\n    - dunst\n    - i3-wm\n    - i3status-rust\n    - network-manager-applet\n    - nitrogen-git\n    - perl-anyevent-i3\n    - picom\n    - polybar\n    - rofi\n    - sxhkd\n    - wmctrl\n    - wmfocus\n    # - wthrr-git\n    - xob\n  icons:\n    - matcha-gtk-theme\n    # - numix-circle-icon-theme-git\n    # - mcmojave-circle-icon-theme-git\n    # - mojave-gtk-theme\n  jack:\n    - jack2\n    - jack2-dbus\n    - jack-example-tools\n    - jack_capture\n    - jack_utils\n    - jacktrip\n    - njconnect\n  kvantum:\n    # - kvantum-theme-nordic-git\n    # - kvantum-qt5\n    - kvantum-theme-matcha\n  loopers:\n    - sooperlooper-git\n  media:\n    # - cpod-appimage\n    - darktable\n    - epson-inkjet-printer-escpr2\n    - feh\n    # - ffmpeg4.4\n    - ffmpegthumbnailer\n    - gimp\n    - gpick\n    - graphicsmagick\n    - imagemagick\n    - imv\n    - mediainfo\n    - mpv\n    - mpv-plugin-excerpt-git\n    - nitrogen-git\n    - obs-studio\n    - radiotray-ng\n    - shotcut\n    - sxiv\n    - teiler-git\n    - vidcutter\n    - vlc\n    - yt-dlp\n  midi:\n    - jack-keyboard\n    - qmidinet\n    - rtmidi\n    - sendmidi\n    - vmpk\n  pipewire:\n    - gst-plugin-pipewire\n    # - libpipewire\n    # - libwireplumber\n    - pipewire\n    - pipewire-alsa\n    - pipewire-audio\n    - pipewire-jack\n    - pipewire-pulse\n    - wireplumber\n  plugins:\n    - carla\n    - calf\n    - caps-lv2-git\n    - chromaprint\n    - distrho-ports\n    - distrho-ports-lv2\n    - distrho-ports-vst\n    - distrho-ports-vst3\n    - dragonfly-reverb\n    - dragonfly-reverb-clap\n    - dragonfly-reverb-lv2\n    - dragonfly-reverb-standalone\n    - dragonfly-reverb-vst\n    - dragonfly-reverb-vst3\n    - ecasound\n    - fluidsynth\n    # - ingen-git\n    - intersect.lv2-git\n    - jalv\n    - jalv-select-git\n    - noise-repellent\n    - swh-lv2-git\n    - tap-plugins-lv2-git\n    - tonespace\n    - x42-plugins\n    - x42-plugins-lv2\n    - x42-plugins-standalone\n    - zita-ajbridge\n    - zita-alsa-pcmi\n    - zita-convolver\n    - zita-dpl1\n    - zita-lrx\n    - zita-mu1\n    - zita-resampler\n    - zita-rev1\n  pulseaudio:\n    - pamixer\n    - pavucontrol\n    - pulseaudio-alsa\n    - pulseaudio-jack\n    - pulsemixer\n  python:\n    - python-adblock\n    - python-chardet\n    - python-conda-package-handling\n    - python-pagelabels\n    - python-pillow\n    - python-pympler\n    - python-setuptools\n    - python-sphinx-intl\n    - python-sphinxcontrib-svg2pdfconverter\n  qt5:\n    - kvantum\n    - qscintilla-qt5\n    - qt5-base\n    - qt5-graphicaleffects\n    - qt5-quickcontrols2\n    - qt5-tools\n    - qt5-x11extras\n    - qt5-declarative\n    - qt5-location\n    - qt5ct\n  qt6:\n    - qt6-base\n    - qt6-declarative\n    - qt6-multimedia\n    - qt6-tools\n    - qt6ct\n  ruby:\n    - cmake\n    - libgit2\n    - libvips\n    - openslide\n    - openssl\n    - postgresql-libs\n    - ruby-psych\n  samplers:\n    - linuxsampler\n    - mixxx\n    - qsampler\n  sequencers:\n    - hydrogen-git\n    - non-sequencer\n  sway:\n    - autotiling-rs\n    - calcurse\n    - dex\n    - flashfocus\n    - mako\n    - network-manager-applet\n    - nwg-wrapper\n    - playerctl\n    - poweralertd\n    - swappy\n    - sway\n    - swaybg\n    - swaycwd\n    - swayr\n    - sworkstyle\n    - waybar\n    - wf-recorder\n    - wlsunset\n    - wofi\n  synths:\n    - geonkick\n    - geonkick-common\n    - geonkick-lv2\n    - geonkick-standalone\n    - helm-synth\n    - helm-synth-common\n    - helm-synth-lv2\n    - helm-synth-standalone\n    - helm-synth-vst\n  tools:\n    - fmit\n    - jack-example-tools\n    - jack_link\n    - jack_mixer\n    - jack_snapshot\n    - jconvolver\n    - ladspa\n    - lv2-c++-tools\n    - njconnect\n    - non-mixer-lv2-git\n    - patchage\n    # - raysession-git\n    - rnnoise\n    - rtaudio\n    - scala-music\n    - scala-music-scales\n    - sound-gambit\n    - sox\n    - tuned\n  utility:\n    - aria2\n    - atool\n    - await\n    - barrier\n    - bash-completion\n    - bat\n    - bottom\n    - broot\n    - btop\n    - calibre\n    - choose\n    - djvulibre\n    - doggo\n    - duf\n    - dust\n    - elinks\n    - fd\n    - figlet\n    - firewalld\n    - fontforge\n    - git-delta\n    - gnome-keyring\n    - gping\n    - guake\n    - gum\n    - highlight\n    - htop\n    - imagemagick\n    - inetutils\n    - inxi\n    - jc\n    - jq\n    - jupyter-nbconvert\n    - links\n    - lnav\n    - lynx\n    - mediainfo\n    - most\n    - mtr\n    - mupdf-tools\n    - ncdu\n    - neofetch\n    - neovim\n    - neovim-symlinks\n    - net-tools\n    - nodejs\n    - npm\n    - nvtop\n    - odt2txt\n    - openscad\n    - perl-image-exiftool\n    - python-pillow\n    - python-pygments\n    - ranger\n    - ripgrep\n    - ripgrep-all\n    - rsync\n    - rxvt-unicode\n    - smartmontools\n    - socat\n    - termdown\n    - terminator\n    - terminology\n    - tilda\n    - transmission-cli\n    - tree\n    - ueberzug\n    - v4l-utils\n    - w3m\n    - wget\n    - xterm\n    - yadm\n    - zoxide\n    - zsh\n  terminal:\n    - kitty\n    - kitty-shell-integration\n    - kitty-terminfo\n  utils:\n    - aspell-en\n    - barrier\n    - firewalld\n    - fsarchiver\n    - geoclue\n    - gnome-common\n    - gnome-keyring\n    - grsync\n    - inxi\n    # - input-remapper-git\n    - redshift\n    - seahorse\n    - timeshift\n  xorg:\n    # - xf86-video-intel\n    - arandr\n    - autorandr\n    - numlockx\n    - xclip\n    - xdotool\n    - xf86-input-libinput\n    - xf86-input-wacom\n    - xkill-shortcut\n    - xorg-bdftopcf\n    - xorg-fonts-alias-75dpi\n    - xorg-fonts-alias-100dpi\n    - xorg-fonts-alias-cyrillic\n    - xorg-fonts-alias-misc\n    - xorg-fonts-misc\n    - xorg-iceauth\n    - xorg-mkfontscale\n    - xorg-server\n    - xorg-sessreg\n    - xorg-setxkbmap\n    - xorg-smproxy\n    - xorg-x11perf\n    - xorg-xauth\n    - xorg-xbacklight\n    - xorg-xcmsdb\n    - xorg-xcursorgen\n    - xorg-xdpyinfo\n    - xorg-xdriinfo\n    - xorg-xev\n    - xorg-xgamma\n    - xorg-xhost\n    - xorg-xinit\n    - xorg-xinput\n    - xorg-xkbcomp\n    - xorg-xkbevd\n    - xorg-xkbutils\n    - xorg-xkill\n    - xorg-xlsatoms\n    - xorg-xlsclients\n    - xorg-xlsfonts\n    - xorg-xmodmap\n    - xorg-xpr\n    - xorg-xprop\n    - xorg-xrandr\n    - xorg-xrdb\n    - xorg-xrefresh\n    - xorg-xset\n    - xorg-xsetroot\n    - xorg-xvinfo\n    - xorg-xwd\n    - xorg-xwininfo\n    - xorg-xwud\n    - xf86-video-fbdev\n    - xf86-video-vesa\n",
      "path": "/roles/distro/vars/"
    },
    {
      "filename": "RedHat.yml",
      "content": "---\n\nadmin_group: wheel\n",
      "path": "/roles/distro/vars/"
    },
    {
      "filename": "main.yml",
      "content": "---\n# vars file for roles/distro\n",
      "path": "/roles/distro/vars/"
    },
    {
      "filename": "main.yml",
      "content": "---\n# defaults file for roles/distro\n\nadmin_group: wheel\n",
      "path": "/roles/distro/defaults/"
    },
    {
      "filename": "main.yml",
      "content": "galaxy_info:\n  author: your name\n  description: your role description\n  company: your company (optional)\n\n  # If the issue tracker for your role is not on github, uncomment the\n  # next line and provide a value\n  # issue_tracker_url: http://example.com/issue/tracker\n\n  # Choose a valid license ID from https://spdx.org - some suggested licenses:\n  # - BSD-3-Clause (default)\n  # - MIT\n  # - GPL-2.0-or-later\n  # - GPL-3.0-only\n  # - Apache-2.0\n  # - CC-BY-4.0\n  license: license (GPL-2.0-or-later, MIT, etc)\n\n  min_ansible_version: 2.1\n\n  # If this a Container Enabled role, provide the minimum Ansible Container version.\n  # min_ansible_container_version:\n\n  galaxy_tags: []\n    # List tags for your role here, one per line. A tag is a keyword that describes\n    # and categorizes the role. Users find roles by searching for tags. Be sure to\n    # remove the '[]' above, if you add tags to this list.\n    #\n    # NOTE: A tag is limited to a single word comprised of alphanumeric characters.\n    #       Maximum 20 tags per role.\n\ndependencies: []\n  # List your role dependencies here, one per line. Be sure to remove the '[]' above,\n  # if you add dependencies to this list.\n",
      "path": "/roles/alsa/meta/"
    },
    {
      "filename": "main.yml",
      "content": "---\n# handlers file for alsa\n",
      "path": "/roles/alsa/handlers/"
    },
    {
      "filename": "test.yml",
      "content": "---\n- hosts: localhost\n  remote_user: root\n  roles:\n    - alsa\n",
      "path": "/roles/alsa/tests/"
    },
    {
      "filename": "main.yml",
      "content": "---\n# tasks file for alsa\n- name: Alsa Tasks\n  debug:\n    msg: \"Starting alsa tasks\"\n\n- name: Set alsa card order\n  lineinfile:\n    path: /etc/modprobe.d/10-alsa_usb.conf\n    line: \"options snd slots=snd-hda-intel,snd-usb-audio\"\n    create: yes\n    backup: yes\n",
      "path": "/roles/alsa/tasks/"
    },
    {
      "filename": "main.yml",
      "content": "---\n# vars file for alsa\n",
      "path": "/roles/alsa/vars/"
    },
    {
      "filename": "main.yml",
      "content": "---\n# roles/alsa\npackages:\n  - alsa-card-profiles\n  - alsa-firmware\n  - alsa-lib\n  - alsa-plugins\n  - alsa-topology-conf\n  - alsa-ucm-conf\n  - alsa-utils\n  - a2jmidid\n",
      "path": "/roles/alsa/defaults/"
    },
    {
      "filename": "main.yml",
      "content": "galaxy_info:\n  author: your name\n  description: your role description\n  company: your company (optional)\n\n  # If the issue tracker for your role is not on github, uncomment the\n  # next line and provide a value\n  # issue_tracker_url: http://example.com/issue/tracker\n\n  # Choose a valid license ID from https://spdx.org - some suggested licenses:\n  # - BSD-3-Clause (default)\n  # - MIT\n  # - GPL-2.0-or-later\n  # - GPL-3.0-only\n  # - Apache-2.0\n  # - CC-BY-4.0\n  license: license (GPL-2.0-or-later, MIT, etc)\n\n  min_ansible_version: 2.1\n\n  # If this a Container Enabled role, provide the minimum Ansible Container version.\n  # min_ansible_container_version:\n\n  #\n  # Provide a list of supported platforms, and for each platform a list of versions.\n  # If you don't wish to enumerate all versions for a particular platform, use 'all'.\n  # To view available platforms and versions (or releases), visit:\n  # https://galaxy.ansible.com/api/v1/platforms/\n  #\n  # platforms:\n  # - name: Fedora\n  #   versions:\n  #   - all\n  #   - 25\n  # - name: SomePlatform\n  #   versions:\n  #   - all\n  #   - 1.0\n  #   - 7\n  #   - 99.99\n\n  galaxy_tags: []\n    # List tags for your role here, one per line. A tag is a keyword that describes\n    # and categorizes the role. Users find roles by searching for tags. Be sure to\n    # remove the '[]' above, if you add tags to this list.\n    #\n    # NOTE: A tag is limited to a single word comprised of alphanumeric characters.\n    #       Maximum 20 tags per role.\n\ndependencies: []\n  # List your role dependencies here, one per line. Be sure to remove the '[]' above,\n  # if you add dependencies to this list.\n",
      "path": "/roles/nas/meta/"
    },
    {
      "filename": "main.yml",
      "content": "---\n# handlers file for nfs\n\n- name: reload firewalld\n  shell: \"firewall-cmd --reload\"\n  ignore_errors: \"{{ ansible_check_mode }}\"\n",
      "path": "/roles/nas/handlers/"
    },
    {
      "filename": "test.yml",
      "content": "---\n- hosts: localhost\n  remote_user: root\n  roles:\n    - nfs\n",
      "path": "/roles/nas/tests/"
    },
    {
      "filename": "samba.yml",
      "content": "---\n\n- name: Ensure group storage exists\n  group:\n    name: storage\n    gid: 1036\n\n- name: Ensure user home exists\n  user:\n    name: home\n    state: present\n    shell: /sbin/nologin\n    group: storage\n\n- name: Set smb.conf\n  copy:\n    src: etc/samba/smb.conf\n    dest: /etc/samba/smb.conf\n    owner: root\n    group: root\n    mode: '0644'\n    backup: True\n\n- name: Permit traffic to samba services\n  firewalld:\n    service: samba\n    permanent: yes\n    state: enabled\n\n- name: Enable samba service\n  service:\n    name: samba\n    state: started\n    enabled: yes\n",
      "path": "/roles/nas/tasks/"
    },
    {
      "filename": "nfs.yml",
      "content": "---\n\n# - name: mount_names\n#   set_fact:\n#     mount_names: \"{{ ansible_mounts | map(attribute='mount') | list}}\"\n#   tags: ['nfstest']\n#\n# - debug:\n#     var: mount_names\n#   loop: \"{{ share.nfs.exports }}\"\n#   failed_when: item not in mount_names\n#   tags: ['nfstest']\n\n- name: Create exports folder\n  file:\n    path: /srv/exports\n    state: directory\n    owner: \"{{ user.name }}\"\n    group: \"{{ user.group }}\"\n    mode: \"2775\"\n  when: bind_share_exports|bool\n\n- block:\n    - name: Ensure group nobody exists\n      group:\n        name: nobody\n        gid: 65534\n        non_unique: True\n        system: True\n\n    - name: Ensure user nobody exists\n      user:\n        name: nobody\n        system: True\n        state: present\n        shell: /sbin/nologin\n        uid: 65534\n        group: nobody\n\n    - name: Install nfs configs\n      template:\n        src: \"etc/{{ item }}.j2\"\n        dest: \"/etc/{{ item }}\"\n        mode: \"0644\"\n        backup: yes\n      with_items:\n        - idmapd.conf\n        - nfs.conf\n\n    - name: Ensure nfs/rpc services are enabled and started\n      service:\n        name: \"{{ item }}\"\n        state: restarted\n        enabled: yes\n      with_items:\n        - nfs-server\n        - nfs-mountd\n        - nfs-idmapd\n        - rpcbind\n\n    - block:\n        - name: Permit traffic to rpcbind\n          firewalld:\n            port: \"{{ item }}\"\n            permanent: yes\n            state: enabled\n          with_items:\n            - 111/tcp\n            - 111/udp\n            - 662/tcp\n            - 662/udp\n            - 892/tcp\n            - 892/udp\n            - 2049/tcp\n            - 32769/udp\n            - 32803/tcp\n            - 40418/udp\n\n        - name: reload firewalld\n          shell: \"firewall-cmd --reload\"\n          ignore_errors: \"{{ ansible_check_mode }}\"\n\n      when: ansible_os_family == 'Archlinux'\n\n    - block:\n        - name: Permit tcp traffic to rpcbind\n          community.general.ufw:\n            rule: allow\n            port: \"{{ item }}\"\n            proto: tcp\n          with_items:\n            - \"111\"\n            - \"662\"\n            - \"892\"\n            - \"2049\"\n            - \"32803\"\n\n        - name: Permit udp traffic to rpcbind\n          community.general.ufw:\n            rule: allow\n            port: \"{{ item }}\"\n            proto: udp\n          with_items:\n            - \"111\"\n            - \"662\"\n            - \"892\"\n            - \"32769\"\n            - \"32803\"\n\n      when: ansible_distribution == 'MX' or ansible_distribution == 'Debian'\n\n  ignore_errors: \"{{ ansible_check_mode }}\"\n\n- name: Ensure the exported folder already exists\n  file:\n    path: \"{{ share.nfs.parent }}/{{ item }}\"\n    state: directory\n    owner: \"{{ user.name }}\"\n    group: \"{{ user.group }}\"\n    mode: '2775'\n  with_items:\n    - \"{{ share.nfs.exports }}\"\n\n- name: Create exports folder\n  file:\n    path: /srv/exports/{{ item }}\n    state: directory\n    owner: \"{{ user.name }}\"\n    group: \"{{ user.group }}\"\n  with_items:\n    - \"{{ share.nfs.exports }}\"\n  when: bind_share_exports|bool\n\n- name: Ensure required entries are made to fstab file\n  lineinfile:\n    path: /etc/fstab\n    state: present\n    line: \"{{ share.nfs.parent }}/{{ item }} /srv/exports/{{ item }} none bind 0 0\"\n  with_items:\n    - \"{{ share.nfs.exports }}\"\n  register: fstab\n  when: bind_share_exports|bool\n\n- name: Reload systemd\n  systemd:\n    daemon_reload: yes\n  when: (fstab.changed or bind_share_exports|bool)\n\n# https://docs.ansible.com/ansible/latest/collections/ansible/posix/mount_module.html#parameter-state\n- name: Mount and bind the exports\n  ansible.posix.mount:\n    path: \"/srv/exports/{{ item }}\"\n    src: \"{{ user.home }}/{{ item }}\"\n    opts: bind\n    state: ephemeral\n    fstype: none\n  with_items: \"{{ share.nfs.exports }}\"\n  ignore_errors: True\n\n# - name: Mounted the binded folders\n#   shell: |\n#     mount /srv/exports/{{ item }}\n#   with_items:\n#     - \"{{ share.nfs.exports }}\"\n\n- name: Set the exports\n  template:\n    src: etc/exports.j2\n    dest: /etc/exports\n    owner: root\n    group: root\n    mode: \"0644\"\n    backup: yes\n  register: exportsra\n\n- name: Reload exports\n  shell: exportfs -rv\n  when: exportsra.changed\n",
      "path": "/roles/nas/tasks/"
    },
    {
      "filename": "nfstest.yml",
      "content": "---\n\n# generated task file\n\n- name: Set up NFS server\n  hosts: nfs_servers\n  tasks:\n    - name: Create directory for NFS exports\n      file:\n        path: /srv/exports\n        state: directory\n        owner: owner_name\n        group: group_name\n        mode: \"0755\"\n\n    - name: Ensure 'nobody' user and group exist\n      user:\n        name: nobody\n        group: nobody\n        state: present\n        system: yes\n        non_unique: yes\n        uid: 65534\n        gid: 65534\n\n    - name: Install NFS configurations\n      template:\n        src: etc/{{ item }}.j2\n        dest: /etc/{{ item }}\n      with_items:\n        - idmapd.conf\n        - nfs.conf\n\n    - name: Enable and start NFS services\n      systemd:\n        name: \"{{ item }}\"\n        enabled: yes\n        state: started\n      with_items:\n        - nfs-server\n        - nfs-mountd\n        - nfs-idmapd\n        - rpcbind\n\n    - name: Permit traffic to rpcbind service (Archlinux/EndeavourOS)\n      firewalld:\n        service: rpc-bind\n        permanent: yes\n        state: enabled\n        immediate: yes\n      when: ansible_os_family == 'Archlinux'\n\n    - name: Permit traffic to rpcbind service (MX/Debian)\n      ufw:\n        rule: allow\n        port: \"{{ item }}\"\n        proto: tcp\n      loop:\n        - 111\n        - 2049\n        - 20048\n        - 20049\n        - 20050\n      when: ansible_distribution == 'MX' or ansible_distribution == 'Debian'\n\n    - name: Ignore errors in check mode\n      command: echo \"Ignoring errors\"\n      ignore_errors: yes\n      check_mode: yes\n\n    - name: Ensure exported folders exist\n      file:\n        path: /srv/exports/{{ item.name }}\n        state: directory\n        owner: \"{{ item.owner }}\"\n        group: \"{{ item.group }}\"\n        mode: \"{{ item.mode }}\"\n      with_items:\n        - { name: \"folder1\", owner: \"owner_name\", group: \"group_name\", mode: \"0755\" }\n        - { name: \"folder2\", owner: \"owner_name\", group: \"group_name\", mode: \"0755\" }\n\n    - name: Add entries to /etc/fstab\n      lineinfile:\n        path: /etc/fstab\n        line: \"{{ item.line }}\"\n      with_items:\n        - { line: \"/srv/exports/folder1 /path/to/mount1 nfs defaults 0 0\" }\n        - { line: \"/srv/exports/folder2 /path/to/mount2 nfs defaults 0 0\" }\n\n    - name: Reload systemd daemon\n      systemd:\n        daemon_reload: yes\n\n    - name: Mount exported folders\n      mount:\n        path: \"/path/to/mount{{ item }}\"\n        src: \"server_ip:/srv/exports/folder{{ item }}\"\n        fstype: nfs\n        opts: defaults\n        state: mounted\n      with_sequence: start=1 end=2\n\n    - name: Set exports in /etc/exports\n      template:\n        src: etc/exports.j2\n        dest: /etc/exports\n\n    - name: Reload exports\n      command: exportfs -r\n",
      "path": "/roles/nas/tasks/"
    },
    {
      "filename": "musikcube.yml",
      "content": "---\n\n- name: Install musikcube systemd\n  template:\n    src: etc/systemd/system/musikcube.service\n    dest: /etc/systemd/system/musikcube.service\n    mode: '0644'\n\n- name: Enable musikcube services\n  systemd:\n    name: musikcubed\n    enabled: yes\n    state: started\n    daemon_reload: yes\n",
      "path": "/roles/nas/tasks/"
    },
    {
      "filename": "rsyncd.yml",
      "content": "---\n\n- name: Install rsyncd config\n  template:\n    src: etc/rsyncd.conf.j2\n    dest: /etc/rsyncd.conf\n    mode: '0644'\n  register: rsyncd_config\n\n- name: Ensure rsyncd service is running\n  service:\n    name: rsyncd\n    state: restarted\n    enabled: yes\n  when: rsyncd_config.changed\n",
      "path": "/roles/nas/tasks/"
    },
    {
      "filename": "main.yml",
      "content": "---\n- name: NAS Tasks\n  debug:\n    msg: \"Starting NAS tasks\"\n\n- import_tasks:\n    file: nfs.yml\n  tags: ['nfs']\n\n- import_tasks:\n    file: samba.yml\n  when: samba_host|bool\n  tags: ['samba']\n\n# - import_tasks:\n#     file: rsyncd.yml\n#   when: rsyncd_host|bool\n#   tags: ['rsyncd']\n#\n# - import_tasks:\n#     file: musikcube.yml\n#   when: musikcube_host|bool\n#   tags: ['musikcube']\n",
      "path": "/roles/nas/tasks/"
    },
    {
      "filename": "main.yml",
      "content": "---\n# vars file for nfs\n",
      "path": "/roles/nas/vars/"
    },
    {
      "filename": "main.yml",
      "content": "---\n# defaults file for nas\n\nfirewall:\n  nfs:\n    ports:\n      lockd:\n        tcp: 32803\n        udp: 32769\n      mountd: 892\n      statd: 662\n      rpc: 40418\n\nsamba_host: False\n\nbind_share_exports: False\n",
      "path": "/roles/nas/defaults/"
    },
    {
      "filename": "main.yml",
      "content": "---\n\n- name: restart nginx\n  debug: msg=\"checking config first\"\n  changed_when: True\n  notify:\n    - check nginx configuration\n    - restart nginx - after config check\n\n- name: reload nginx\n  debug: msg=\"checking config first\"\n  changed_when: True\n  notify:\n    - check nginx configuration\n    - reload nginx - after config check\n\n- name: check nginx configuration\n  shell: \"{{ nginx_binary_name }} -t\"\n  register: result\n  changed_when: \"result.rc != 0\"\n  when: nginx_installation_type in nginx_installation_types_using_service\n\n- name: restart nginx - after config check\n  service: name={{ nginx_service_name }} state=restarted\n  when: nginx_installation_type in nginx_installation_types_using_service and nginx_daemon_mode == \"on\"\n\n- name: reload nginx - after config check\n  service: name={{ nginx_service_name }} state=reloaded\n  when: nginx_installation_type in nginx_installation_types_using_service and nginx_daemon_mode == \"on\"\n\n- name: restart rsyslog\n  service: name=rsyslog state=restarted\n",
      "path": "/roles/nginx/handlers/"
    },
    {
      "filename": "ensure-dirs.yml",
      "content": "---\n\n- name: Create the directories for site specific configurations\n  file:\n    path: \"{{ nginx_conf_dir }}/{{ item }}\"\n    state: directory\n    owner: root\n    group: nginx\n    mode: '0755'\n    recurse: False\n  with_items:\n    - \"sites-available\"\n    - \"sites-enabled\"\n    - \"auth_basic\"\n    - \"conf.d\"\n    - \"conf.d/stream\"\n  tags: [configuration,nginx]\n\n- name: Ensure log directory exist\n  file:\n    path: \"{{ nginx_log_dir }}\"\n    state: directory\n    owner: nginx\n    group: nginx\n    recurse: false\n  tags: [configuration,nginx]\n",
      "path": "/roles/nginx/tasks/"
    },
    {
      "filename": "configuration.yml",
      "content": "---\n- name: Copy the nginx configuration file\n  template: src=nginx.conf.j2 dest={{nginx_conf_dir}}/nginx.conf\n  notify:\n   - restart nginx\n  tags: [nginx_conf,nginx]\n\n- name: Ensure auth_basic files created\n  template: src=auth_basic.j2 dest={{nginx_conf_dir}}/auth_basic/{{ item }} owner=root group={{nginx_group}} mode=0750\n  with_items: \"{{ nginx_auth_basic_files.keys() }}\"\n  tags: [nginx_conf,nginx]\n\n- name: Create the configurations for sites\n  template: src=site.conf.j2 dest={{nginx_conf_dir}}/sites-available/{{ item }}.conf\n  with_items: \"{{ nginx_sites.keys() | difference(nginx_remove_sites) }}\"\n  notify:\n   - reload nginx\n  tags: [nginx_vhost,nginx]\n\n- name: Create links for sites-enabled\n  file: state=link src={{nginx_conf_dir}}/sites-available/{{ item }}.conf dest={{nginx_conf_dir}}/sites-enabled/{{ item }}.conf\n  with_items: \"{{ nginx_sites.keys() | difference(nginx_remove_sites) }}\"\n  notify:\n   - reload nginx\n  tags: [nginx_vhost,nginx]\n\n- name: Create the configurations for independent config file\n  template: src=config.conf.j2 dest={{nginx_conf_dir}}/conf.d/{{ item }}.conf\n  with_items: \"{{ nginx_configs.keys() }}\"\n  notify:\n   - reload nginx\n  tags: [nginx_conf,nginx]\n\n- name: Create the configurations for independent config file for streams\n  template: src=config_stream.conf.j2 dest={{nginx_conf_dir}}/conf.d/stream/{{ item }}.conf\n  with_items: \"{{ nginx_stream_configs.keys() }}\"\n  notify:\n   - reload nginx\n  tags: [nginx_conf,nginx]\n  when: nginx_official_repo_mainline\n",
      "path": "/roles/nginx/tasks/"
    },
    {
      "filename": "remove-extras.yml",
      "content": "---\n- name: Find enabled sites\n  shell: ls -1 {{nginx_conf_dir}}/sites-enabled || true\n  register: enabled_sites\n  changed_when: False\n  tags: [configuration,nginx]\n\n- name: Disable unmanaged sites\n  file: path={{nginx_conf_dir}}/sites-enabled/{{ item }} state=absent\n  with_items: \"{{ enabled_sites.stdout.split() }}\"\n  # 'item.conf' => 'item'\n  when: item[:-5] not in nginx_sites.keys()\n  notify:\n   - reload nginx\n  tags: [configuration,nginx]\n\n- name: Find config files\n  shell: ls -1 {{nginx_conf_dir}}/conf.d\n  register: config_files\n  changed_when: False\n  tags: [configuration,nginx]\n\n- name: Remove unmanaged config files\n  file: name={{nginx_conf_dir}}/conf.d/{{ item }} state=absent\n  with_items: \"{{ config_files.stdout.split() }}\"\n  # 'item.conf' => 'item'\n  when: item[:-5] not in nginx_configs.keys()\n  notify:\n   - reload nginx\n  tags: [configuration,nginx]\n",
      "path": "/roles/nginx/tasks/"
    },
    {
      "filename": "nginx-official-repo.yml",
      "content": "---\n#TODO: find out why you would pass RUNLEVEL=1 to perform this task....\n- name: Ensure RPM official nginx key\n  rpm_key: key=http://nginx.org/keys/nginx_signing.key\n  environment: \"{{ nginx_env }}\"\n  when: ansible_distribution == 'RedHat'\n\n- name: Ensure YUM official nginx repository\n  template: src=nginx.repo.j2 dest=/etc/yum.repos.d/nginx.repo\n  when: ansible_distribution == 'RedHat'",
      "path": "/roles/nginx/tasks/"
    },
    {
      "filename": "installation.source.yml",
      "content": "---\n\n- name: install nginx dependencies\n  dnf:\n    name: \"{{ item }}\"\n    state: present\n    update_cache: yes\n  with_items:\n    - git\n    - \"@Development Tools\"\n    - pcre2-devel\n    - pcre-devel\n  when: ansible_distribution == 'Fedora'\n\n- name: install nginx dependencies\n  pacman:\n    name: \"{{ item }}\"\n    state: present\n    force: yes\n    extra_args: --noconfirm\n  with_items:\n    - base-devel\n    - git\n    - pcre\n    - pcre2\n  when: ansible_os_family == 'Archlinux'\n\n- name: create nginx group\n  group:\n    name: nginx\n    state: present\n    system: True\n\n- name: create nginx user\n  user:\n    name: nginx\n    state: present\n    group: nginx\n    system: True\n\n- name: fetch nginx source\n  get_url:\n    url: http://nginx.org/download/nginx-1.22.1.tar.gz\n    dest: \"/tmp\"\n    validate_certs: no\n\n- name: extract nginx source\n  unarchive:\n    src: /tmp/nginx-1.22.1.tar.gz\n    dest: \"/tmp\"\n    remote_src: yes\n\n- name: clone fancyindex\n  git:\n    repo: \"https://github.com/aperezdc/ngx-fancyindex.git\"\n    dest: \"/tmp/ngx-fancyindex\"\n    accept_hostkey: yes\n    update: no\n    force: no\n    recursive: yes\n\n- name: configure nginx with modules\n  shell: |\n    ./configure --prefix=/usr --http-log-path=/var/log/nginx/access.log --error-log-path=/var/log/nginx/error.log --pid-path=/run/nginx.pid --conf-path=/etc/nginx/nginx.conf --modules-path=/usr/share/nginx/modules --add-module=../ngx-fancyindex --with-http_addition_module --with-http_mp4_module --with-http_gunzip_module --with-http_gzip_static_module --with-http_ssl_module\n  args:\n    chdir: /tmp/nginx-1.22.1\n\n- name: make and install nginx\n  shell: |\n      make && make install\n  args:\n    chdir: /tmp/nginx-1.22.1\n",
      "path": "/roles/nginx/tasks/"
    },
    {
      "filename": "installation.packages.yml",
      "content": "---\n- name: Install the selinux python module\n  yum: name=python3-libselinux state=present\n  when: ansible_distribution == \"RedHat\"\n  tags: [packages,nginx]\n\n# this really isn't needed here as we install epel using the common role\n# will comment out for now\n# - name: Install the epel packages\n#   yum: name=epel-release state=present\n#   when: nginx_is_el|bool\n#   tags: [packages,nginx]\n\n- name: Install the nginx packages from either epel or nginx_offical repo\n  yum: >\n    name={{ item }}\n    state=latest\n    enablerepo={{ \"nginx\" if nginx_official_repo else \"\" }}\n  with_items: \"{{ nginx_redhat_pkg }}\"\n  when:  nginx_is_el|bool and not nginx_passenger\n  tags: [packages,nginx]\n\n  ###update 5/4 - changed to state=present as using latest lead to an\n  #unexpected update to nginx\n  # use state=latest in case nginx was already installed from epel.\n  # this will ensure the passenger complied version of nginx is installed\n- name: Install nginx & passenger packages using passenger repo\n  yum: >\n    name={{ item }}\n    state=present\n    enablerepo={{ yum_passenger_repo }}\n  with_items: \"{{ nginx_passenger_redhat_pkg }}\"\n  when: nginx_is_el|bool and nginx_passenger\n  tags: [packages,nginx]\n\n- name: Install the nginx packages for a rhel based distro that isn't Redhat or Centos\n  yum: name={{ item }} state=present\n  with_items: \"{{ nginx_redhat_pkg }}\"\n  when: ansible_distribution == \"RedHat\" and not nginx_is_el|bool\n  tags: [packages,nginx]\n",
      "path": "/roles/nginx/tasks/"
    },
    {
      "filename": "generate.yml",
      "content": "---\n  - name: Generate RSA key\n    command: openssl genrsa -out {{ ssl_certs_privkey_path }} {{ ssl_certs_key_size }} creates={{ ssl_certs_privkey_path }}\n\n  - name: Generate CSR\n    command: openssl req -new -subj \"{{ ssl_certs_fields }}\" -key {{ ssl_certs_privkey_path }} -out {{ ssl_certs_csr_path }} creates={{ ssl_certs_csr_path }}\n\n  - name: Generate self-signed SSL certificate\n    command: openssl req -nodes -x509 -days {{ ssl_certs_days }} -in {{ ssl_certs_csr_path }} -key {{ ssl_certs_privkey_path }} -out {{ ssl_certs_cert_path }} -extensions v3_ca creates={{ ssl_certs_cert_path }}\n    when: ssl_certs_generate_self_signed",
      "path": "/roles/nginx/tasks/ssl/"
    },
    {
      "filename": "ssl.yml",
      "content": "---\n  - name: Ensure OpenSSL is installed\n    yum: name=openssl state=present\n    when: ansible_distribution == \"RedHat\"\n    tags: [ssl-certs,packages]\n\n  - name: Ensure ssl folder exist\n    file:\n      path: \"{{ ssl_certs_path }}\"\n      state: directory\n      owner: \"{{ ssl_certs_path_owner }}\"\n      group: \"{{ ssl_certs_path_group }}\"\n      mode: \"{{ ssl_certs_mode }}\"\n    tags: [ssl-certs,configuration]\n\n  - local_action: stat path={{ ssl_certs_local_privkey_path }}\n    register: stat_privkey\n    become: no\n    tags: [ssl-certs,configuration]\n\n  - local_action: stat path={{ ssl_certs_local_cert_path }}\n    register: stat_cert\n    become: no\n    tags: [ssl-certs,configuration]\n\n  - name: Test if privkey file is needed\n    fail: msg=\"Privkey file {{ ssl_certs_local_privkey_path }} is missing\"\n    when: not stat_privkey.stat.exists and stat_cert.stat.exists\n    tags: [ssl-certs,configuration]\n\n  - name: Test if cert file is needed\n    fail: msg=\"Cert file {{ ssl_certs_local_cert_path }} is missing\"\n    when: stat_privkey.stat.exists and not stat_cert.stat.exists\n    tags: [ssl-certs,configuration]\n\n  - include_tasks: generate.yml\n    when: >\n      ( not stat_privkey.stat.exists and not stat_cert.stat.exists )\n      and ( ssl_certs_local_privkey_data is undefined and ssl_certs_local_cert_data is undefined )\n    tags: [ssl-certs,configuration]\n\n  - name: Copy SSL certificates\n    copy:\n      src: \"{{ item.src }}\"\n      dest: \"{{ item.dest }}\"\n      owner: \"{{ ssl_certs_path_owner }}\"\n      group: \"{{ ssl_certs_path_group }}\"\n      mode: \"{{ ssl_certs_mode }}\"\n    when: >\n      ( stat_privkey.stat.exists and stat_cert.stat.exists )\n      and ( ssl_certs_local_privkey_data is undefined and ssl_certs_local_cert_data is undefined )\n    with_items:\n      - { src: \"{{ ssl_certs_local_cert_path }}\", dest: \"{{ ssl_certs_cert_path }}\" }\n      - { src: \"{{ ssl_certs_local_privkey_path }}\", dest: \"{{ ssl_certs_privkey_path }}\" }\n    tags: [ssl-certs,configuration]\n\n  - name: Copy SSL certificate data\n    copy:\n      content: \"{{ item.content }}\"\n      dest: \"{{ item.dest }}\"\n      owner: \"{{ ssl_certs_path_owner }}\"\n      group: \"{{ ssl_certs_path_group }}\"\n      mode: \"{{ ssl_certs_mode }}\"\n    when: ssl_certs_local_privkey_data is defined and ssl_certs_local_cert_data is defined\n    with_items:\n      - { content: \"{{ ssl_certs_local_cert_data|default }}\", dest: \"{{ ssl_certs_cert_path }}\" }\n      - { content: \"{{ ssl_certs_local_privkey_data|default }}\", dest: \"{{ ssl_certs_privkey_path }}\" }\n    no_log: true\n    tags: [ssl-certs,configuration]\n\n  - name: Generate strong DHE parameter - https://weakdh.org/\n    command: openssl dhparam -out {{ssl_certs_dhparam_path}} {{ssl_certs_dhparam_size}} creates={{ssl_certs_dhparam_path}}\n    when: ssl_certs_generate_dh_param\n    tags: [ssl-certs,configuration]\n",
      "path": "/roles/nginx/tasks/ssl/"
    },
    {
      "filename": "fancyindex.yml",
      "content": "---\n\n- name: install nginx dependencies\n  dnf:\n    name: \"{{ item }}\"\n    state: present\n    update_cache: yes\n  with_items:\n    - git\n    - \"@Development Tools\"\n    - pcre2-devel\n    - pcre-devel\n  when: ansible_distribution == 'Fedora'\n\n- name: install nginx dependencies\n  pacman:\n    name: \"{{ item }}\"\n    state: present\n    force: yes\n    extra_args: --noconfirm\n  with_items:\n    - base-devel\n    - git\n    - pcre\n    - pcre2\n  when: ansible_os_family == 'Archlinux'\n\n- name: fetch nginx source\n  get_url:\n    url: http://nginx.org/download/nginx-1.22.1.tar.gz\n    dest: \"/tmp\"\n    validate_certs: no\n\n- name: extract nginx source\n  unarchive:\n    src: /tmp/nginx-1.22.1.tar.gz\n    dest: \"/tmp\"\n    remote_src: yes\n\n- name: clone fancyindex\n  git:\n    repo: \"https://github.com/aperezdc/ngx-fancyindex.git\"\n    dest: \"/tmp/ngx-fancyindex\"\n    accept_hostkey: yes\n    update: no\n    force: no\n    recursive: yes\n\n- name: configure nginx with modules\n  shell: |\n    ./configure --prefix=/usr --http-log-path=/var/log/nginx/access.log --error-log-path=/var/log/nginx/error.log --pid-path=/run/nginx.pid --conf-path=/etc/nginx/nginx.conf --modules-path=/usr/share/nginx/modules --add-module=../ngx-fancyindex --with-http_addition_module --with-http_mp4_module --without-http_autoindex_module --without-http_gzip_module\n  args:\n    chdir: /tmp/nginx-1.22.1\n\n- name: make and install nginx\n  shell: |\n      make && make install\n  args:\n    chdir: /tmp/nginx-1.22.1\n",
      "path": "/roles/nginx/tasks/"
    },
    {
      "filename": "selinux.yml",
      "content": "---\n\n- block:\n    - name: Allow nginx to read files in syncopated webroot\n      sefcontext:\n        target: '/usr/share/nginx/html/syncopated(/.*)?'\n        setype: httpd_sys_content_t\n        state: present\n\n    - name: Apply new SELinux file context to filesystem\n      command: restorecon -iRv /usr/share/nginx/html/syncopated/\n\n  become: True\n  notify: restart nginx\n",
      "path": "/roles/nginx/tasks/"
    },
    {
      "filename": "passenger-phusion-repo.yml",
      "content": "---\n- name: Ensure RPM passenger-phusion key\n  rpm_key: key=https://packagecloud.io/gpg.key validate_certs=yes\n  when: ansible_distribution == 'RedHat'\n  tags: [configuration,nginx]\n\n- name: Ensure passenger yum repo file exists\n  template: src=nginx.repo.j2 dest=/etc/yum.repos.d/passenger.repo\n  when: ansible_distribution == 'RedHat'\n  tags: [configuration,nginx]\n\n- name: force yum to import gpgkey\n  shell: yum -qy repolist\n  tags: [configuration,nginx]",
      "path": "/roles/nginx/tasks/"
    },
    {
      "filename": "remove-unwanted.yml",
      "content": "---\n- name: Remove unwanted sites\n  file: path={{nginx_conf_dir}}/{{ item[0] }}/{{ item[1] }}.conf state=absent\n  with_nested:\n    - [ 'sites-enabled', 'sites-available']\n    - \"{{ nginx_remove_sites }}\"\n  notify:\n   - reload nginx\n  tags: [configuration,nginx]\n\n- name: Remove unwanted conf\n  file: path={{nginx_conf_dir}}/conf.d/{{ item[1] }}.conf state=absent\n  with_items: \"{{ nginx_remove_configs }}\"\n  notify:\n   - reload nginx\n  tags: [configuration,nginx]\n\n- name: Remove unwanted auth_basic_files\n  file: path={{nginx_conf_dir}}/auth_basic/{{ item[1] }} state=absent\n  with_items: \"{{ nginx_remove_auth_basic_files }}\"\n  notify:\n   - reload nginx\n  tags: [configuration,nginx]",
      "path": "/roles/nginx/tasks/"
    },
    {
      "filename": "remove-defaults.yml",
      "content": "---\n- name: Disable the default site\n  file: path={{nginx_conf_dir}}/sites-enabled/default state=absent\n  notify:\n  - reload nginx\n  tags: [configuration,nginx]\n\n- name: Remove the default configuration\n  file: path={{nginx_conf_dir}}/conf.d/default.conf state=absent\n  when: nginx_remove_default_configs\n  # when: >\n  #   'default' not in nginx_configs.keys()\n  notify:\n  - reload nginx\n  tags: [configuration,nginx]",
      "path": "/roles/nginx/tasks/"
    },
    {
      "filename": "main.yml",
      "content": "---\n\n- include_tasks: tasks/ssl.yml\n  when: use_ssl is defined\n  tags: ['ssl']\n\n- name: copy rsyslog config for nginx\n  copy: >\n    src=90-nginx_rsyslog.conf\n    dest=/etc/rsyslog.d/90-nginx_rsyslog.conf\n    owner=root\n    group=root\n    mode=0644\n  notify: restart rsyslog\n  tags: [configuration,nginx]\n\n- import_tasks:\n    file: nginx-official-repo.yml\n  when: nginx_official_repo == True\n\n- import_tasks:\n    file: passenger-phusion-repo.yml\n  when: nginx_passenger == True\n\n- import_tasks:\n    file: installation.packages.yml\n  when: nginx_installation_type == \"packages\"\n\n- import_tasks:\n    file: installation.source.yml\n  when: nginx_installation_type == \"source\"\n\n- import_tasks:\n    file: ensure-dirs.yml\n\n- import_tasks:\n    file: remove-defaults.yml\n  when: not keep_only_specified\n\n- import_tasks:\n    file: remove-extras.yml\n  when: keep_only_specified\n\n- import_tasks:\n    file: remove-unwanted.yml\n\n- import_tasks:\n    file: configuration.yml\n\n- name: Create /usr/share/nginx/html\n  file:\n    path: /usr/share/nginx/html\n    state: directory\n    owner: root\n    group: root\n    recurse: True\n\n- name: create blank index.html for default traffic\n  copy: >\n    src=index.html\n    dest=/usr/share/nginx/html/index.html\n    backup=yes\n    owner=root\n    group=root\n    mode=0644\n  when: nginx_create_blank_index\n\n- import_tasks:\n    file: selinux.yml\n\n- name: Start the nginx service\n  service: name={{ nginx_service_name }} state=started enabled=yes\n  when: nginx_installation_type in nginx_installation_types_using_service and nginx_daemon_mode == \"on\"\n  tags: [service,nginx]\n",
      "path": "/roles/nginx/tasks/"
    },
    {
      "filename": "main.yml",
      "content": "---\nnginx_redhat_pkg:\n  - nginx\n\nnginx_ubuntu_pkg:\n  - python-selinux\n  - nginx\n\nnginx_freebsd_pkg:\n  - nginx\n\nnginx_suse_pkg:\n  - nginx\n\nnginx_env:\n RUNLEVEL: 1\n\nnginx_installation_types_using_service: [\"packages\", \"configuration-only\"]\n\nnginx_is_el: \"{{ distribution in ['RedHat', 'CentOS'] }}\"\n\nyum_epel_repo: epel\nyum_base_repo: base\nyum_passenger_repo: passenger\n\nnginx_official_repo: False\nnginx_official_repo_mainline: False\n\nnginx_passenger: False\nnginx_passenger_redhat_pkg:\n  - curl\n  - pygpgme\n  - nginx\n  - passenger\n  - passenger-devel\n\n\nkeep_only_specified: False\n\n\nnginx_installation_type: \"packages\"\nnginx_binary_name: \"nginx\"\nnginx_service_name: \"{{nginx_binary_name}}\"\nnginx_conf_dir: \"{% if ansible_distribution == 'FreeBSD' %}/usr/local/etc/nginx{% else %}/etc/nginx{% endif %}\"\n\nnginx_user: \"{% if ansible_distribution == 'RedHat' or ansible_distribution == 'Fedora' %}nginx{% elif ansible_distribution == 'Debian' %}www-data{% elif ansible_distribution == 'FreeBSD' %}www{% endif %}\"\nnginx_group: \"{{nginx_user}}\"\n\nnginx_pid_file: '/var/run/{{nginx_service_name}}.pid'\n\nnginx_worker_processes: \"{% if ansible_processor_vcpus is defined %}{{ ansible_processor_vcpus }}{% else %}auto{% endif %}\"\nnginx_worker_rlimit_nofile: 1024\nnginx_log_dir: \"/var/log/nginx\"\n\nnginx_events_params:\n  - worker_connections {% if nginx_max_clients is defined %}{{nginx_max_clients}}{% else %}512{% endif %}\n\nnginx_http_params:\n  - sendfile \"on\";\n  - tcp_nopush \"on\";\n  - tcp_nodelay \"on\";\n  - keepalive_timeout \"70\";\n  - log_format  graylog2_format  '$remote_addr - $remote_user [$time_local] \"$request\" $status $body_bytes_sent \"$http_referer\" \"$http_user_agent\" \"$http_x_forwarded_for\" <msec=$msec|connection=$connection|connection_requests=$connection_requests|millis=$request_time>';\n  - access_log {{nginx_log_dir}}/access.log graylog2_format;\n  - error_log \"{{nginx_log_dir}}/error.log\";\n  - server_tokens off;\n  - types_hash_max_size 2048;\n  - fastcgi_buffers 256 4k;\n  - map_hash_bucket_size 128;\n  - map $sent_http_content_type $expires { default off; text/html epoch; text/css max; application/javascript max; ~image/ max; }\n\nnginx_stream_params: []\n\nnginx_sites:\n  00_default:\n    - listen 80 default_server\n    - server_name _\n    - root \"{% if ansible_distribution == 'FreeBSD' %}/usr/local/www/nginx-dist{% else %}/usr/share/nginx/html{% endif %}\"\n    - index index.html\n    - autoindex on\nnginx_remove_sites: []\n\nnginx_configs:\n  proxy:\n    - proxy_http_version 1.1\n    - proxy_set_header Upgrade $http_upgrade\n    - proxy_set_header Connection upgrade\n    - proxy_set_header Host $http_host\n    - proxy_set_header X-Forwarded-Proto $scheme\n    - proxy_set_header X-Forwarded-For $remote_addr\n    - proxy_set_header X-Forwarded-Port $server_port\n    - proxy_set_header X-Request-Start $msec\n  gzip:\n    - gzip on\n    - gzip_min_length  1100\n    - gzip_buffers  4 32k\n    - gzip_types    text/css text/javascript text/xml text/plain text/x-component application/javascript application/x-javascript application/json application/xml  application/rss+xml font/truetype application/x-font-ttf font/opentype application/vnd.ms-fontobject image/svg+xml image/png image/gif image/jpeg\n    - gzip_vary on\n    - gzip_http_version 1.1\n    - gzip_comp_level  9\n    - gzip_disable \"MSIE [1-6]\\.(?!.*SV1)\"\n\nnginx_stream_configs: {}\n\nnginx_remove_default_configs: False\n\nnginx_remove_configs: []\n\nnginx_auth_basic_files: {}\nnginx_remove_auth_basic_files: []\n\nnginx_daemon_mode: \"on\"\n\nnginx_create_blank_index: True\n\n\n\nssl_certs_country: \"US\"\nssl_certs_locality: \"Chicago\"\nssl_certs_organization: \"some org\"\nssl_certs_state: \"Illinois\"\nssl_certs_common_name: \"someorg.net\"\nssl_certs_days: \"3650\"\nssl_certs_fields: \"/C={{ssl_certs_country}}/ST={{ssl_certs_state}}/L={{ssl_certs_locality}}/O={{ssl_certs_organization}}/CN={{ssl_certs_common_name}}\"\n\nssl_certs_path: \"/etc/ssl/certs/{{ssl_certs_common_name}}\"\nssl_certs_path_owner: \"root\"\nssl_certs_path_group: \"root\"\nssl_certs_privkey_path: \"{{ssl_certs_path}}/{{ssl_certs_common_name}}.key\"\nssl_certs_cert_path: \"{{ssl_certs_path}}/{{ssl_certs_common_name}}.crt\"\nssl_certs_csr_path: \"{{ssl_certs_path}}/{{ssl_certs_common_name}}.csr\"\nssl_certs_dhparam_path: \"{{ssl_certs_path}}/dhparam.pem\"\nssl_certs_mode: 0644\n\nssl_certs_local_privkey_path: \"/etc/pki/ssl/{{ssl_certs_common_name}}.key\"\nssl_certs_local_cert_path: \"/etc/pki/ssl/{{ssl_certs_common_name}}.crt\"\n\nssl_certs_generate_self_signed: false\nssl_certs_key_size: \"2048\"\nssl_certs_generate_dh_param: false\nssl_certs_dhparam_size: \"2048\"\n",
      "path": "/roles/nginx/defaults/"
    },
    {
      "filename": "main.yml",
      "content": "galaxy_info:\n  author: your name\n  description: your role description\n  company: your company (optional)\n\n  # If the issue tracker for your role is not on github, uncomment the\n  # next line and provide a value\n  # issue_tracker_url: http://example.com/issue/tracker\n\n  # Choose a valid license ID from https://spdx.org - some suggested licenses:\n  # - BSD-3-Clause (default)\n  # - MIT\n  # - GPL-2.0-or-later\n  # - GPL-3.0-only\n  # - Apache-2.0\n  # - CC-BY-4.0\n  license: license (GPL-2.0-or-later, MIT, etc)\n\n  min_ansible_version: 2.1\n\n  # If this a Container Enabled role, provide the minimum Ansible Container version.\n  # min_ansible_container_version:\n\n  galaxy_tags: []\n    # List tags for your role here, one per line. A tag is a keyword that describes\n    # and categorizes the role. Users find roles by searching for tags. Be sure to\n    # remove the '[]' above, if you add tags to this list.\n    #\n    # NOTE: A tag is limited to a single word comprised of alphanumeric characters.\n    #       Maximum 20 tags per role.\n\ndependencies: []\n  # List your role dependencies here, one per line. Be sure to remove the '[]' above,\n  # if you add dependencies to this list.\n",
      "path": "/roles/terminal/meta/"
    },
    {
      "filename": "main.yml",
      "content": "---\n# handlers file for terminal\n",
      "path": "/roles/terminal/handlers/"
    },
    {
      "filename": "test.yml",
      "content": "---\n- hosts: localhost\n  remote_user: root\n  roles:\n    - terminal\n",
      "path": "/roles/terminal/tests/"
    },
    {
      "filename": "packages.yml",
      "content": "---\n\n- name: Install terminal packages\n  aur:\n    use: paru\n    name: \"{{ terminal__packages }}\"\n    state: present\n    extra_args: \"--overwrite '*'\"\n  become: False\n  when: ansible_os_family == \"Archlinux\"\n",
      "path": "/roles/terminal/tasks/"
    },
    {
      "filename": "main.yml",
      "content": "---\n# tasks file for terminal\n\n- import_tasks:\n    file: packages.yml\n  tags: ['packages']\n\n- name: Ensure terminal directories exist\n  file:\n    dest: \"{{ terminal_directory_default_location }}/{{ item.dest }}\"\n    state: directory\n    owner: \"{{ item.owner | default(omit) }}\"\n    group: \"{{ item.group | default(omit) }}\"\n    mode: \"{{ item.mode | default(omit) }}\"\n    recurse: \"{{ item.recurse | default(false) }}\"\n  loop: \"{{ terminal_directory_definitions }}\"\n  check_mode: no\n\n- name: Install kitty templates\n  template:\n    src: \"kitty/{{ item }}.j2\"\n    dest: \"{{ user.home }}/.config/kitty/{{ item }}\"\n    owner: \"{{ user.name }}\"\n    group: \"{{ user.group }}\"\n    mode: '0644'\n    backup: True\n  with_items:\n    - kitty.conf\n    - current-theme.conf\n    - open-actions.conf\n    - start.conf\n  tags: ['kitty']\n\n- name: Set tilda config\n  template:\n    src: tilda/config_0.j2\n    dest: \"{{ user.home }}/.config/tilda/config_0\"\n    owner: \"{{ user.name }}\"\n    group: \"{{ user.group }}\"\n    mode: '0644'\n  tags: ['tilda']\n\n- block:\n  - name: Install guake-utils\n    copy:\n      src: guake-utils\n      dest: /usr/local/bin/guake-utils\n      mode: '0755'\n\n  - name: Install guake settings\n    copy:\n      src: .guake/guake-settings\n      dest: \"{{ user.home }}/.guake/guake-settings\"\n      owner: \"{{ user.name }}\"\n      group: \"{{ user.group }}\"\n      mode: '0644'\n    register: guakesettings\n\n  - name: Import guake-settings\n    shell: /usr/local/bin/guake-utils import\n    when: guakesettings.changed\n    become: False\n\n  tags: ['guake']\n",
      "path": "/roles/terminal/tasks/"
    },
    {
      "filename": "main.yml",
      "content": "---\n# vars file for terminal\n",
      "path": "/roles/terminal/vars/"
    },
    {
      "filename": "main.yml",
      "content": "---\n# defaults file for terminal\n\n# The default directory permission mode when creating directories using `terminal_directory_definitions`\nterminal_directory_default_mode: '0750'\n\n# The default directory owner when creating directories using `terminal_directory_definitions`\nterminal_directory_default_owner: \"{{ user.name }}\"\n\n# The default directory group when creating directories using `terminal_directory_definitions`\nterminal_directory_default_group: \"{{ user.name }}\"\n\nterminal_directory_default_location: \"{{ user.home }}\"\n\nterminal_directory_default_recurse: False\n\nterminal_directory_definitions:\n  - dest: \".config/alacritty\"\n  - dest: \".config/terminator\"\n  - dest: \".config/kitty\"\n  - dest: \".config/tilda\"\n  - dest: \".guake\"\n\nterminal__packages:\n  - blackbox-terminal\n  - guake\n  - kitty-shell-integration\n  - kitty-terminfo\n  - termdown\n  - terminator\n  - termpdf.py-git\n  - tilda\n",
      "path": "/roles/terminal/defaults/"
    },
    {
      "filename": "main.yml",
      "content": "galaxy_info:\n  author: your name\n  description: your role description\n  company: your company (optional)\n\n  # If the issue tracker for your role is not on github, uncomment the\n  # next line and provide a value\n  # issue_tracker_url: http://example.com/issue/tracker\n\n  # Choose a valid license ID from https://spdx.org - some suggested licenses:\n  # - BSD-3-Clause (default)\n  # - MIT\n  # - GPL-2.0-or-later\n  # - GPL-3.0-only\n  # - Apache-2.0\n  # - CC-BY-4.0\n  license: license (GPL-2.0-or-later, MIT, etc)\n\n  min_ansible_version: 2.1\n\n  # If this a Container Enabled role, provide the minimum Ansible Container version.\n  # min_ansible_container_version:\n\n  #\n  # Provide a list of supported platforms, and for each platform a list of versions.\n  # If you don't wish to enumerate all versions for a particular platform, use 'all'.\n  # To view available platforms and versions (or releases), visit:\n  # https://galaxy.ansible.com/api/v1/platforms/\n  #\n  # platforms:\n  # - name: Fedora\n  #   versions:\n  #   - all\n  #   - 25\n  # - name: SomePlatform\n  #   versions:\n  #   - all\n  #   - 1.0\n  #   - 7\n  #   - 99.99\n\n  galaxy_tags: []\n    # List tags for your role here, one per line. A tag is a keyword that describes\n    # and categorizes the role. Users find roles by searching for tags. Be sure to\n    # remove the '[]' above, if you add tags to this list.\n    #\n    # NOTE: A tag is limited to a single word comprised of alphanumeric characters.\n    #       Maximum 20 tags per role.\n\ndependencies: []\n  # List your role dependencies here, one per line. Be sure to remove the '[]' above,\n  # if you add dependencies to this list.\n",
      "path": "/roles/libvirt/meta/"
    },
    {
      "filename": "main.yml",
      "content": "---\n# handlers file for libvirt\n",
      "path": "/roles/libvirt/handlers/"
    },
    {
      "filename": "test.yml",
      "content": "---\n- hosts: localhost\n  remote_user: root\n  roles:\n    - libvirt\n",
      "path": "/roles/libvirt/tests/"
    },
    {
      "filename": "vagrant.yml",
      "content": "---\n\n- block:\n\n    - name: Add Hasicorp repository\n      shell: yum-config-manager --add-repo https://rpm.releases.hashicorp.com/RHEL/hashicorp.repo\n\n    - name: Install vagrant requirements\n      dnf:\n        name: \"{{ item }}\"\n        state: present\n        update_cache: yes\n      loop:\n        - '@Development Tools'\n        - cmake\n        - libguestfs-tools-c\n        - libvirt-devel\n        - libxml2-devel\n        - libxslt-devel\n        - rsync\n        - ruby\n        - ruby-devel\n        - zlib-devel\n\n    - name: Install vagrant\n      dnf:\n        name: vagrant\n        state: present\n        update_cache: yes\n\n  when: ansible_distribution == 'Fedora'\n  tags: ['packages']\n\n- block:\n\n    - name: Install vagrant\n      pacman:\n        name: vagrant\n        state: present\n        force: yes\n        extra_args: --noconfirm\n\n  when: ansible_os_family == 'Archlinux'\n  tags: ['packages']\n",
      "path": "/roles/libvirt/tasks/"
    },
    {
      "filename": "main.yml",
      "content": "---\n# tasks file for libvirt\n\n- name: Libvirt Tasks\n  debug:\n    msg: \"Starting libvirt tasks\"\n\n- block:\n    # :: exfatprogs and exfat-utils are in conflict. Remove exfat-utils? [y/N]\n    - name: Remove conflicting packages\n      pacman:\n        name: exfat-utils\n        state: absent\n        force: yes\n        extra_args: --noconfirm\n\n    - name: Install libvirt packages\n      pacman:\n        name: \"{{ item }}\"\n        state: present\n        force: yes\n        extra_args: --noconfirm --overwrite '*'\n      loop:\n        - dmidecode\n        - dnsmasq\n        - edk2-ovmf\n        - libguestfs\n        - libvirt\n        - qemu-full\n        - virt-install\n        - virt-manager\n        - virt-viewer\n\n  when: ansible_os_family == 'Archlinux'\n  tags: ['packages']\n\n- name: Set socket group and perms to allow for remote access\n  copy:\n    src: etc/libvirt/libvirtd.conf\n    dest: /etc/libvirt/libvirtd.conf\n    mode: '0644'\n\n- name: Disable lvmetad for remote access reasons\n  lineinfile:\n    dest: /etc/lvm/lvm.conf\n    regexp: \"^    use_lvmetad = 1\"\n    line: \"    use_lvmetad = 0\"\n    backrefs: yes\n    backup: yes\n\n- name: Add user to libvirt group\n  user:\n    name: \"{{ user.name }}\"\n    groups: \"libvirt,kvm\"\n    append: yes\n  ignore_errors: \"{{ ansible_check_mode }}\"\n\n- name: set libvirtd service preset\n  systemd:\n    name: libvirtd\n    enabled: True\n  when: libvirt.service == 'enabled'\n\n- import_tasks:\n    file: vagrant.yml\n  when: use_vagrant|default(false)|bool == True\n  tags: ['vagrant']\n",
      "path": "/roles/libvirt/tasks/"
    },
    {
      "filename": "main.yml",
      "content": "---\n# vars file for libvirt\n",
      "path": "/roles/libvirt/vars/"
    },
    {
      "filename": "main.yml",
      "content": "---\n# defaults file for libvirt\n\nlibvirt:\n  service: 'disabled'\n\nuse_libvirt: False",
      "path": "/roles/libvirt/defaults/"
    },
    {
      "filename": "main.yml",
      "content": null,
      "path": "/roles/daw/meta/"
    },
    {
      "filename": "main.yml",
      "content": null,
      "path": "/roles/daw/handlers/"
    },
    {
      "filename": "packages.yml",
      "content": "---\n\n# - block:\n#     - name: Install ambisonics packages\n#       aur:\n#         use: paru\n#         name: \"{{ packages.ambisonics }}\"\n#         state: present\n#\n#     - name: Install analysis packages\n#       aur:\n#         use: paru\n#         name: \"{{ packages.analysis }}\"\n#         state: present\n#\n#     - name: Install editors packages\n#       aur:\n#         use: paru\n#         name: \"{{ packages.editors }}\"\n#         state: present\n#\n#     - name: Install loopers packages\n#       aur:\n#         use: paru\n#         name: \"{{ packages.loopers }}\"\n#         state: present\n#\n#     - name: Install midi packages\n#       aur:\n#         use: paru\n#         name: \"{{ packages.midi }}\"\n#         state: present\n#\n#     - name: Install plugins packages\n#       aur:\n#         use: paru\n#         name: \"{{ packages.plugins }}\"\n#         state: present\n#\n#     - name: Install samplers packages\n#       aur:\n#         use: paru\n#         name: \"{{ packages.samplers }}\"\n#         state: present\n#\n#     - name: Install sequencers packages\n#       aur:\n#         use: paru\n#         name: \"{{ packages.sequencers }}\"\n#         state: present\n#\n#     - name: Install synths packages\n#       aur:\n#         use: paru\n#         name: \"{{ packages.synths }}\"\n#         state: present\n#\n#     - name: Install tools packages\n#       aur:\n#         use: paru\n#         name: \"{{ packages.tools }}\"\n#         state: present\n#\n#\n#   become: False\n#   tags: ['packages']\n",
      "path": "/roles/daw/tasks/"
    },
    {
      "filename": "sonic-pi.yml",
      "content": "---\n\n- block:\n    - name: install packages\n      aur:\n        use: paru\n        name: sonic-pi-git\n        state: present\n        extra_args: \"--overwrite '*'\"\n      become: False\n      tags: ['packages']\n\n  rescue:\n    - name: Handle installation failure\n      debug:\n        msg: \"Failed to install a sonic-pi-git. Check the logs.\"\n\n  always:\n    - name: Continue executions\n      debug:\n        msg: \"Continuing with playbook execution.\"\n\n  become: False\n  tags: ['packages']\n",
      "path": "/roles/daw/tasks/livecoding/"
    },
    {
      "filename": "bipscript.yml",
      "content": "---\n",
      "path": "/roles/daw/tasks/livecoding/"
    },
    {
      "filename": "main.yml",
      "content": "---\n\n# - import_tasks:\n#     file: sonic-pi.yml\n#   tags: ['sonic-pi']\n#\n# - import_tasks:\n#     file: bipscript.yml\n#   tags: ['bipscript']\n",
      "path": "/roles/daw/tasks/livecoding/"
    },
    {
      "filename": "osc2midi.yml",
      "content": "---\n\n- name: Install osc2midi\n  package:\n    name: osc2midi\n    state: present\n\n- name: Set osc2midi config\n  copy:\n    src: usr/share/osc2midi/touchosc/Beatmachine.omm\n    dest: /usr/share/osc2midi/touchosc/Beatmachine.omm\n    mode: '0644'\n    backup: yes\n",
      "path": "/roles/daw/tasks/controllers/"
    },
    {
      "filename": "protokol.yml",
      "content": "---\n\n- name: Check if Protokol is already installed\n  stat:\n    path: \"/usr/local/bin/Protokol_{{ protokol.version }}\"\n  register: protokol_installed\n  changed_when: false\n\n- name: Check if update_Protokol variable is defined\n  set_fact:\n    protokol_update_required: \"{{ update_Protokol is defined }}\"\n  changed_when: false\n\n- block:\n    - name: Remove existing Protokol version\n      file:\n        path: \"/usr/local/bin/Protokol_{{ protokol.version }}\"\n        state: absent\n      when: protokol_update_required\n\n    - name: Fetch Protokol\n      get_url:\n        url: \"{{ protokol.url }}/{{ protokol.file }}\"\n        dest: \"/tmp\"\n\n    - name: Extract and install Protokol\n      shell:\n        cmd: |\n          unzip -q -o \"/tmp/{{ protokol.file }}\" -d \"/tmp\"\n          mv \"/tmp/Protokol\" \"/usr/local/bin/Protokol_{{ protokol.version }}\"\n          chmod +x /usr/local/bin/Protokol_{{ protokol.version }}\n      args:\n        creates: \"/usr/local/bin/Protokol_{{ protokol.version }}\"\n        executable: /bin/bash\n\n    - name: Create new symlink\n      file:\n        src: \"/usr/local/bin/Protokol\"\n        dest: \"/usr/local/bin/Protokol_{{ protokol.version }}\"\n        state: link\n        force: yes\n\n    - name: Install desktop entry\n      copy:\n        src: usr/share/applications/Protokol.desktop\n        dest: /usr/share/applications/Protokol.desktop\n        mode: '644'\n\n  when: not protokol_installed.stat.exists or protokol_update_required\n",
      "path": "/roles/daw/tasks/controllers/"
    },
    {
      "filename": "touchosc.yml",
      "content": "---\n\n- name: Check if TouchOSC is already installed\n  stat:\n    path: \"/usr/local/bin/TouchOSC_{{ touchosc.version }}\"\n  register: touchosc_installed\n  changed_when: false\n\n- name: Check if update_TouchOSC variable is defined\n  set_fact:\n    touchosc_update_required: \"{{ update_TouchOSC is defined }}\"\n  changed_when: false\n\n- block:\n    - name: Remove existing TouchOSC version\n      file:\n        path: \"/usr/local/bin/TouchOSC_{{ touchosc.version }}\"\n        state: absent\n      when: touchosc_installed.stat.exists and touchosc_update_required\n\n    - name: Fetch TouchOSC\n      get_url:\n        url: \"{{ touchosc.url }}/{{ touchosc.file }}\"\n        dest: \"/tmp\"\n\n    - name: Extract and install TouchOSC\n      shell:\n        cmd: |\n          unzip -q -o \"/tmp/{{ touchosc.file }}\" -d \"/tmp\"\n          mv \"/tmp/TouchOSC\" \"/usr/local/bin/TouchOSC_{{ touchosc.version }}\"\n          chmod +x /usr/local/bin/TouchOSC_{{ touchosc.version }}\n      args:\n        creates: \"/usr/local/bin/TouchOSC_{{ touchosc.version }}\"\n        executable: /bin/bash\n\n    - name: create new symlink\n      file:\n        src: \"/usr/local/bin/TouchOSC_{{ touchosc.version }}\"\n        dest: \"/usr/local/bin/TouchOSC\"\n        state: link\n        force: yes\n\n    - name: Install desktop entry\n      copy:\n        src: usr/share/applications/TouchOSC.desktop\n        dest: /usr/share/applications/TouchOSC.desktop\n        mode: '644'\n\n  when: not touchosc_installed.stat.exists or touchosc_update_required\n",
      "path": "/roles/daw/tasks/controllers/"
    },
    {
      "filename": "main.yml",
      "content": "---\n\n- import_tasks:\n    file: touchosc.yml\n  tags: ['touchosc']\n\n- import_tasks:\n    file: protokol.yml\n  tags: ['protokol']\n\n- import_tasks:\n    file: osc2midi.yml\n  tags: ['osc2midi']\n\n- name: Enable avahi service\n  systemd:\n    name: avahi-daemon\n    enabled: yes\n    state: started\n\n\n\n# existing_file.results: This refers to the result of the stat task,\n# which gathers information about the existence of files/directories specified in the loop parameter.\n\n# selectattr('stat.exists', 'defined'): This filter selects the items from existing_file.results\n# where the stat.exists attribute is defined. In other words, it filters out any results that don't have the stat.exists attribute.\n\n# selectattr('stat.islnk', 'defined'): This filter further narrows down the selected items from the previous step\n# by filtering only those results where the stat.islnk attribute is defined.\n# This ensures that only symlink entries are considered.\n\n# list: This filter converts the filtered results into a list format.\n\n# length > 0: This checks if the length of the resulting list is greater than zero,\n# indicating that there are existing symlink entries for the specified paths.\n",
      "path": "/roles/daw/tasks/controllers/"
    },
    {
      "filename": "reaper.yml",
      "content": "---\n\n- name: Install backup_reaper.sh\n  copy:\n    src: home/.local/bin/backup_reaper.sh\n    dest: \"{{ user.home }}/.local/bin/backup_reaper.sh\"\n    owner: \"{{ user.name }}\"\n    group: \"{{ user.group }}\"\n    mode: '0755'\n    backup: False\n\n- name: Check if reaper is already installed\n  stat:\n    path: /usr/local/bin/reaper\n  register: result\n  ignore_errors: \"{{ ansible_check_mode }}\"\n\n- block:\n    - name: Check reaper version\n      shell: |\n        cat whatsnew.txt | grep {{ reaper.version }}\n      args:\n        chdir: /opt/REAPER\n      register: if_installed_version\n      changed_when: if_installed_version.stdout == ''\n      failed_when: \"'No such file or directory' in if_installed_version.msg and if_installed_version.rc != 0\"\n\n    - name: Debug msg\n      debug:\n        msg: \"{{ if_installed_version }}\"\n\n    - name: Backup reaper home config\n      shell: \"{{ user.home }}/.local/bin/backup_reaper.sh\"\n      register: reaper_backup\n      become_user: \"{{ user.name }}\"\n      environment:\n        PATH: \"{{ ansible_env.PATH }}:/sbin:/bin:{{ path|join(':') }}\"\n      tags: ['backup']\n\n    - name: Debug msg\n      debug:\n        msg: \"{{ reaper_backup }}\"\n\n  when: result.stat.exists\n\n- block:\n    - name: Fetch reaper\n      get_url:\n        url: \"{{ reaper.url }}{{ reaper.file }}\"\n        dest: \"/tmp\"\n        # validate_certs: no\n\n    - name: Uninstall reaper\n      shell: |\n        bash -x ./uninstall-reaper.sh --quiet --uninstall\n      args:\n        chdir: /opt/REAPER\n      when: result.stat.exists\n\n    - name: Extract and install reaper\n      shell: |\n        tar -xvf {{ reaper.file }}\n\n        cd reaper_linux_x86_64/\n\n        ./install-reaper.sh --install /opt \\\n                        --integrate-desktop \\\n                        --usr-local-bin-symlink\n      args:\n        chdir: \"/tmp\"\n\n  when: (not result.stat.exists or if_installed_version.changed)\n\n- name: Uninstall reaper only\n  shell: |\n    bash -x ./uninstall-reaper.sh --quiet --uninstall\n  args:\n    chdir: /opt/REAPER\n  when: result.stat.exists and uninstall_reaper|default(false)|bool\n",
      "path": "/roles/daw/tasks/editors/"
    },
    {
      "filename": "main.yml",
      "content": "---\n\n- import_tasks:\n    file: reaper.yml\n  tags: ['reaper']\n",
      "path": "/roles/daw/tasks/editors/"
    },
    {
      "filename": "soniclineup.yml",
      "content": "---\n\n- name: Check if Sonic-Lineup is already installed\n  stat:\n    path: /usr/local/bin/sonic-lineup\n  register: result\n  ignore_errors: \"{{ ansible_check_mode }}\"\n\n- block:\n    - name: Fetch Sonic-Lineup\n      get_url:\n        url: \"{{ url }}/{{ file }}\"\n        dest: \"/tmp\"\n        validate_certs: no\n\n    - name: Link Sonic-Lineup to bin\n      shell: |\n        chmod +x {{ file }}\n        mv -v {{ file }} /usr/local/bin/\n      args:\n        chdir: \"/tmp\"\n\n    - name: Create symlink\n      file:\n        src: \"/usr/local/bin/SonicLineup-1.1-x86_64.AppImage\"\n        dest: \"/usr/local/bin/sonic-lineup\"\n        state: link\n        force: yes\n\n  when: not result.stat.exists and not uninstall_soniclineup|default(false)|bool\n  vars:\n    url: \"https://code.soundsoftware.ac.uk/attachments/download/2766\"\n    file: \"SonicLineup-1.1-x86_64.AppImage\"\n\n\n- name: Uninstall Sonic-Lineup\n  file:\n    path: \"/usr/local/bin/sonic-lineup\"\n    state: absent\n    follow: yes\n  when: result.stat.exists and uninstall_soniclineup|default(false)|bool\n\n# when: not result.stat.exists and not uninstall_soniclineup|default(false)|bool\n#\n# If the software package is already installed (the result.stat.exists condition is true),\n# the pipeline should not proceed with the installation.\n# Additionally, if there is a request to uninstall \"SonicLineup\" (uninstall_soniclineup|default(false)|bool is true),\n# the pipeline should not proceed with the installation, even if the package is not currently installed.\n",
      "path": "/roles/daw/tasks/analysis/"
    },
    {
      "filename": "sonicannotator.yml",
      "content": "---\n\n- name: Check if Sonic-Annotator is already installed\n  stat:\n    path: /usr/local/bin/sonic-annotator\n  register: sonicannotator\n  ignore_errors: \"{{ ansible_check_mode }}\"\n\n- block:\n    - name: Fetch Sonic-Annotator\n      get_url:\n        url: \"{{ url }}/{{ file }}\"\n        dest: \"/tmp\"\n        validate_certs: no\n\n    - name: Extract Sonic-Annotator\n      shell: |\n        tar -xvf {{ file }}\n\n        cd sonic-annotator-1.6-linux64-static/\n\n        chmod +x sonic-annotator\n\n        mv sonic-annotator /usr/local/bin/sonic-annotator\n      args:\n        chdir: \"/tmp\"\n\n  when: not sonicannotator.stat.exists\n  vars:\n    url: \"https://code.soundsoftware.ac.uk/attachments/download/2708\"\n    file: \"sonic-annotator-1.6-linux64-static.tar.gz\"\n\n- name: Uninstall Sonic-Annotator\n  file:\n    path: \"/usr/local/bin/sonic-annotator\"\n    state: absent\n  when: sonicannotator.stat.exists and uninstall_sonicannotator|default(false)|bool\n",
      "path": "/roles/daw/tasks/analysis/"
    },
    {
      "filename": "tony.yml",
      "content": "---\n#TODO: There is an aur PKGBUILD for this\n\n- name: Check if Tony is already installed\n  stat:\n    path: /usr/local/bin/tony\n  register: result\n  ignore_errors: \"{{ ansible_check_mode }}\"\n\n- name: Install libxcrypt-compat\n  pacman:\n    name: libxcrypt-compat\n    state: present\n    force: yes\n    extra_args: --noconfirm\n  tags: ['packages']\n\n- block:\n    - name: Fetch Tony\n      get_url:\n        url: \"{{ tony.url }}/Tony-2.1.1-x86_64.AppImage\"\n        dest: \"/tmp\"\n        validate_certs: no\n\n    - name: Link Tony AppImage to bin\n      shell: |\n        chmod +x Tony-2.1.1-x86_64.AppImage\n        mv Tony-2.1.1-x86_64.AppImage /usr/local/bin/\n      args:\n        chdir: \"/tmp\"\n\n    - name: Create symlink\n      file:\n        src: \"/usr/local/bin/Tony-2.1.1-x86_64.AppImage\"\n        dest: \"/usr/local/bin/tony\"\n        state: link\n        force: yes\n\n  when: not result.stat.exists and not uninstall_tony|default(false)|bool\n\n- name: Uninstall Tony\n  file:\n    path: \"/usr/local/bin/tony\"\n    state: absent\n    follow: yes\n  when: result.stat.exists and uninstall_tony|default(false)|bool\n",
      "path": "/roles/daw/tasks/analysis/"
    },
    {
      "filename": "vamp.yml",
      "content": "---\n\n- name: Check if the vamp plugins currently exist\n  stat:\n    path: \"/usr/local/share/vamp/vamp-example-plugins.so\"\n  register: vamp_installed\n  ignore_errors: \"{{ ansible_check_mode }}\"\n\n- block:\n\n    - name: Fetch vamp plugin installer\n      get_url:\n        url: \"https://code.soundsoftware.ac.uk/attachments/download/2696/vamp-plugin-pack-installer-1.0\"\n        dest: /tmp\n        mode: '0755'\n\n    - name: Set user perms for /usr/local/share/vamp\n      file:\n        path: /usr/local/share/vamp\n        state: directory\n        owner: \"{{ user.name }}\"\n        group: \"{{ user.group }}\"\n        mode: '0755'\n\n    - name: Run vamp plugin pack installer\n      script: |\n        /usr/bin/uxterm -class 'backup' -e /usr/bin/env DISPLAY=:0 /usr/bin/env VAMP_PATH=\"/usr/local/share/vamp\" ./vamp-plugin-pack-installer-1.0\n      args:\n        chdir: /tmp\n      run_once: True\n      become: False\n      ignore_errors: True\n\n\n  when: not vamp_installed.stat.exists\n\n# - name: add vamp_path to /etc/environment\n#   lineinfile:\n#     path: /etc/environment\n#     regexp: '^VAMP_PATH '\n#     insertafter: '\\n'\n#     line: VAMP_PATH=/usr/local/share/vamp\n#   become: True\n",
      "path": "/roles/daw/tasks/analysis/"
    },
    {
      "filename": "main.yml",
      "content": "---\n\n- import_tasks:\n    file: sonicannotator.yml\n  tags: ['sonicannotator']\n\n- import_tasks:\n    file: soniclineup.yml\n  tags: ['soniclineup']\n\n- import_tasks:\n    file: tony.yml\n  tags: ['tony']\n\n- import_tasks:\n    file: vamp.yml\n  tags: ['vamp']\n",
      "path": "/roles/daw/tasks/analysis/"
    },
    {
      "filename": "mixxx.yml",
      "content": "---\n# fix for ERROR hiddev1: /usr/lib/udev/rules.d/69-mixxx-usb-uaccess.rules:57 Only network interfaces can be renamed, ignoring NAME=\"usb/%k\".\n- name: Comment out mixxx udev rule\n  lineinfile:\n    dest: /usr/lib/udev/rules.d/69-mixxx-usb-uaccess.rules\n    regexp: \"^KERNEL==\"\n    line: '#KERNEL==\"hiddev*\", NAME=\"usb/%k\", GROUP=\"uaccess\"'\n    backrefs: yes\n    backup: yes\n  ignore_errors: \"{{ ansible_check_mode }}\"\n",
      "path": "/roles/daw/tasks/players/"
    },
    {
      "filename": "main.yml",
      "content": "---\n\n- import_tasks:\n    file: mixxx.yml\n  tags: ['mixxx']\n",
      "path": "/roles/daw/tasks/players/"
    },
    {
      "filename": "main.yml",
      "content": "---\n\n- name: DAW Tasks\n  debug:\n    msg: \"Starting DAW role tasks\"\n\n- name: Set global variables\n  set_fact:\n    touchosc_installed: false\n    touchosc_update_required: false\n  tags: ['daw']\n\n- name: Ensure application directories exist\n  file:\n    path: \"{{ application_directory_default_location }}/{{ item.dest }}\"\n    state: directory\n    owner: \"{{ item.owner | default(omit) }}\"\n    group: \"{{ item.group | default(omit) }}\"\n    mode: \"{{ item.mode | default(omit) }}\"\n    recurse: \"{{ item.recurse | default(false) }}\"\n  loop: \"{{ application_directory_definitions }}\"\n  check_mode: no\n  tags: ['profile']\n\n- import_tasks:\n    file: controllers/main.yml\n  tags: ['controllers']\n\n- import_tasks:\n    file: analysis/main.yml\n  tags: ['analysis']\n\n- import_tasks:\n    file: players/main.yml\n  tags: ['players']\n\n- import_tasks:\n    file: editors/main.yml\n  tags: ['editors']\n\n# - import_tasks:\n#     file: livecoding/main.yml\n#   tags: ['livecoding']\n",
      "path": "/roles/daw/tasks/"
    },
    {
      "filename": "main.yml",
      "content": "---\n",
      "path": "/roles/daw/vars/"
    },
    {
      "filename": "main.yml",
      "content": "---\n\n# The default directory permission mode when creating directories using `application_directory_definitions`\napplication_directory_default_mode: '0755'\n\n# The default directory owner when creating directories using `application_directory_definitions`\napplication_directory_default_owner: \"{{ user.name }}\"\n\n# The default directory group when creating directories using `application_directory_definitions`\napplication_directory_default_group: \"{{ user.group }}\"\n\napplication_directory_default_location: \"{{ user.home }}\"\n\napplication_directory_default_recurse: False\n\napplication_directory_definitions:\n  - dest: \".sonic-pi/config\"\n  - dest: \".config/RaySession/session_templates/sound/XXX_SESSION_NAME_XXX.hydrogen\"\n\nbaudline:\n  url: \"https://www.baudline.com\"\n  file: \"baudline_1.08_linux_x86_64.tar.gz\"\n\njacktrip:\n  git: \"https://github.com/jacktrip/jacktrip.git\"\n\nocenaudio:\n  url:\n    debian: \"https://www.ocenaudio.com/start_download/ocenaudio_debian9_64.deb\"\n    fedora: \"https://www.ocenaudio.com/downloads/index.php/ocenaudio_centos8.rpm?\"\n\npatchage:\n  git: \"https://gitlab.com/drobilla/patchage.git\"\n\npolyphone:\n  git: \"https://github.com/davy7125/polyphone.git\"\n\nqmidinet:\n  git: \"https://github.com/rncbc/qmidinet.git\"\n\nreaper:\n  url: \"https://www.reaper.fm/files/7.x/\"\n  file: reaper717_linux_x86_64.tar.xz\n  version: v7.17\n\nscala:\n  url: \"http://www.huygens-fokker.org/software/\"\n  file: \"scala-22-pc64-linux.tar.bz2\"\n\nswami:\n  git: \"https://github.com/swami/swami.git\"\n\nlibinstpatch:\n  git: \"https://github.com/swami/libinstpatch.git\"\n\ntimemachine:\n  git: \"https://github.com/swh/timemachine.git\"\n\ntony:\n  url: \"https://code.soundsoftware.ac.uk/attachments/download/2617\"\n  file: \"Tony-2.1.1-x86_64.AppImage\"\n\ntouchosc:\n  url: \"https://hexler.net/pub/touchosc\"\n  file: \"touchosc-1.2.8.194-linux-x64.zip\"\n  version: 1.2.8.194\n\nprotokol:\n  url: \"https://hexler.net/pub/protokol/\"\n  file: \"protokol-0.5.4.105-linux-x64.zip\"\n  version: 0.5.4.105\n\npackages:\n  - ambdec\n  - ambix-o1\n  - ambix-o3\n  - ambix-o5\n  - audacity\n  - baudline-bin\n  - bipscript\n  - bipscript-ide\n  - bitwig-studio\n  - calf\n  - caps-lv2-git\n  - carla\n  - cpod-appimage\n  - darktable\n  - distrho-ports\n  - distrho-ports-lv2\n  - distrho-ports-vst\n  - distrho-ports-vst3\n  - djvulibre\n  - dragonfly-reverb\n  - dragonfly-reverb-clap\n  - dragonfly-reverb-lv2\n  - dragonfly-reverb-standalone\n  - dragonfly-reverb-vst\n  - dragonfly-reverb-vst3\n  - drumrox\n  - ecasound\n  - ffmpeg4.4\n  - ffmpegthumbnailer\n  - fftw\n  - fluidsynth\n  - fontforge\n  - geonkick\n  - geonkick-common\n  - geonkick-lv2\n  - geonkick-standalone\n  - gimp\n  - helm-synth\n  - helm-synth-common\n  - helm-synth-lv2\n  - helm-synth-standalone\n  - helm-synth-vst\n  - hydrogen-git\n  - iempluginsuite\n  - ingen-git\n  - intersect.lv2-git\n  - jaaa\n  - jalv\n  - jalv-select-git\n  - japa\n  - jc\n  - jconvolver\n  - jnoisemeter\n  - ladspa\n  - lame\n  - libaudec\n  - libcaca\n  - linuxsampler\n  - linuxsampler-svn\n  - lsp-dsp-lib\n  - lv2-c++-tools\n  - mcfx-o1\n  - mcfx-o3\n  - mcfx-o5\n  - mediamtx\n  - midieditor\n  - mixxx\n  - mtr\n  - non-mixer-lv2-git\n  - non-sequencer\n  - ocenaudio-bin\n  - patchage\n  - patchance\n  - qmidinet\n  - qsampler\n  - raul\n  - raysession\n  - rnnoise\n  - rtaudio\n  - rtmidi\n  - sc3-plugins\n  - scala-music\n  - scala-music-scales\n  - sendmidi\n  - sonic-pi-git\n  - sonic-visualiser\n  - sonic-visualiser-git\n  - sononym\n  - sooperlooper-git\n  - sound-gambit\n  - sparta-plugins\n  - supercollider\n  - swh-lv2-git\n  - tap-plugins-lv2-git\n  - tonsespace\n  - vital-synth-git\n  - vmpk\n  - vst2sdk\n  - x42-plugins\n  - x42-plugins-lv2\n  - x42-plugins-standalone\n  - zita-ajbridge\n  - zita-alsa-pcmi\n  - zita-convolver\n  - zita-dpl1\n  - zita-lrx\n  - zita-mu1\n  - zita-resampler\n  - zita-rev1\n\n\n# audio_packages:\n#   utilities_and_tools:\n#     - a2jmidid  # MIDI bridge\n#     - aria2     # Downloader with some audio streaming capabilities\n#     - audiofile  # Python audio file I/O library\n#     - ecasound  # Audio server for ALSA/OSS\n#     - faac      # Free Audio Codec library (encoding)\n#     - faad2     # Free Audio Codec library (decoding)\n#     - ffmpeg     # Powerful multimedia framework (can handle audio encoding/decoding)\n#     - fluidsynth  # Software synthesizer\n#     - fmit      # Lightweight MIDI sequencer\n#     - jack2      # JACK Audio Connection Kit (low-latency audio server)\n#     - jack2-dbus  # JACK Audio Connection Kit D-Bus bridge\n#     - lame      # MP3 encoding library\n#     - librosa    # Python library for music and audio analysis\n#     - midieditor # MIDI sequencer\n#     - mixxx     # Open-source DJ software\n#     - qsampler  # Sample playback synthesizer\n#     - qtractor  # Digital audio workstation\n#     - recorder   # Simple command-line audio recorder\n#     - sox        # Lightweight audio converter and editor\n#     - timidity++ # Software MIDI synthesizer\n#     - vorbis-tools # Ogg Vorbis encoder/decoder\n#\n#   libraries_and_development_tools:\n#     - aubio     # Audio signal processing library\n#     - csound     # Sound synthesis and audio programming language\n#     - lsp-dsp-lib # Digital Signal Processing library\n#     - rtaudio    # Real-time audio library\n#     - rtmidi     # Real-time MIDI library\n#     - scala-music # Scala music theory library\n#     - scala-music-scales # Scala musical scales library\n#     - vamp-plugin-sdk # Development kit for creating Vamp audio plugins\n#\n#   plugins_and_effects:\n#     - ambdec    # Ambisonic audio decoder\n#     - calf      # Collection of Modular Audio Processing Software (LV2 plugins)\n#     - dragonfly-reverb  # Collection of audio effects\n#     - jalv       # JACK Audio Level Meter\n#     - jconvolver # JACK convolution reverb plugin\n#     - jnoisemeter # JACK noise meter\n#     - ladspa     # Linux Audio Developers Simple Plugin API (collection of audio plugins)\n#     - sc3-plugins # SuperCollider audio plugins\n#     - spat       # Spatial audio plugin for JACK\n#     - swh-lv2-git # Supernova Workstation Host (LV2 audio plugin host)\n#\n#   music_creation_and_editing_software:\n#     - audacity  # Audio editor and recorder\n#     - carla     # Software modular synthesizer\n#     - guitarix   # Real-time guitar effects processor\n#     - helm-synth  # Software synthesizer with Helm graphical interface\n#     - hydrogen-git # Hydrogen drum machine\n#     - linuxsampler # Software sampler\n#     - ocenaudio-bin # Audio editor with spectral editing features\n#     - pavucontrol # PulseAudio volume control\n#     - pulseaudio-alsa # PulseAudio ALSA module\n#     - pulseaudio-jack # PulseAudio JACK module\n#     - sonic-pi-git # Live coding environment for music creation\n#     - sound-juicer # Audio extractor from videos\n#     - soundconverter  # Audio format converter\n#     - supercollider # Open-source audio programming language\n#\n#   miscellaneous:\n#     - cantarell-fonts  # Font that can be useful for musical notation\n#     - chromecast  # Consider if using chromecast for casting audio\n#     - fontforge  # Font editor (useful for creating custom musical notation fonts)\n#     - sendmidi   # Send MIDI messages from the command line\n#     - sound-font-converter # MIDI soundfont converter\n#     - soundproxy  # Audio proxy server\n#     - speech-dispatcher # Audio routing and processing tool\n#     - timidity-opus  # Ogg Vorbis output plugin for Timidity++\n#     - timidity-pd  # Pure Data output plugin for Timidity++\n#     - tonespace  # Real-time audio processing framework\n#     - vmpk       # Virtual MIDI Piano Keyboard\n#     - vorbis-tools # Ogg Vorbis encoder/decoder\n#     - zita-ajbridge # JACK-ALSA bridge for Zita software\n#     - zita-alsa-pcmi # ALSA PCM audio driver for Zita software\n#     - zita-convolver # Convolution reverb plugin for Zita software\n",
      "path": "/roles/daw/defaults/"
    },
    {
      "filename": "main.yml",
      "content": "galaxy_info:\n  author: your name\n  description: your role description\n  company: your company (optional)\n\n  # If the issue tracker for your role is not on github, uncomment the\n  # next line and provide a value\n  # issue_tracker_url: http://example.com/issue/tracker\n\n  # Choose a valid license ID from https://spdx.org - some suggested licenses:\n  # - BSD-3-Clause (default)\n  # - MIT\n  # - GPL-2.0-or-later\n  # - GPL-3.0-only\n  # - Apache-2.0\n  # - CC-BY-4.0\n  license: license (GPL-2.0-or-later, MIT, etc)\n\n  min_ansible_version: 2.1\n\n  # If this a Container Enabled role, provide the minimum Ansible Container version.\n  # min_ansible_container_version:\n\n  #\n  # Provide a list of supported platforms, and for each platform a list of versions.\n  # If you don't wish to enumerate all versions for a particular platform, use 'all'.\n  # To view available platforms and versions (or releases), visit:\n  # https://galaxy.ansible.com/api/v1/platforms/\n  #\n  # platforms:\n  # - name: Fedora\n  #   versions:\n  #   - all\n  #   - 25\n  # - name: SomePlatform\n  #   versions:\n  #   - all\n  #   - 1.0\n  #   - 7\n  #   - 99.99\n\n  galaxy_tags: []\n    # List tags for your role here, one per line. A tag is a keyword that describes\n    # and categorizes the role. Users find roles by searching for tags. Be sure to\n    # remove the '[]' above, if you add tags to this list.\n    #\n    # NOTE: A tag is limited to a single word comprised of alphanumeric characters.\n    #       Maximum 20 tags per role.\n\ndependencies: []\n  # List your role dependencies here, one per line. Be sure to remove the '[]' above,\n  # if you add dependencies to this list.\n",
      "path": "/roles/base/meta/"
    },
    {
      "filename": "main.yml",
      "content": "---\n# handlers file for common\n- name: Restart sshd\n  service:\n    name: sshd\n    state: restarted\n    enabled: True\n",
      "path": "/roles/base/handlers/"
    },
    {
      "filename": "test.yml",
      "content": "---\n- hosts: localhost\n  remote_user: root\n  roles:\n    - common\n",
      "path": "/roles/base/tests/"
    },
    {
      "filename": "packages.yml",
      "content": "---\n\n- name: install base packages\n  aur:\n    use: auto\n    name: \"{{ base__packages }}\"\n    state: present\n  become: False\n  when: ansible_os_family == \"Archlinux\"\n  tags: ['packages']\n",
      "path": "/roles/base/tasks/"
    },
    {
      "filename": "march.yml",
      "content": "---\n\n- name: Check -march support\n  shell: |\n    /lib/ld-linux-x86-64.so.2 --help | grep supported|xargs|awk '{print $1}'\n  register: supported_march\n  tags: [\"always\"]\n  check_mode: False\n\n- block:\n    - name: Set architecture\n      set_fact:\n        architecture: \"x86-64-v3\"\n      when: supported_march.stdout_lines[0] == 'x86-64-v3'\n\n    - name: Set architecture\n      set_fact:\n        architecture: \"x86-64\"\n      when: supported_march.stdout_lines[0] == 'x86-64-v2'\n\n  when: supported_march.stdout_lines[0] is defined\n  tags: [\"always\"]\n  check_mode: False\n",
      "path": "/roles/base/tasks/"
    },
    {
      "filename": "sshd.yml",
      "content": "---\n\n#TODO: fix so that if the playbook run fails, handlers are still run for tasks that\n# did complete successfully\n\n- name: Set sshd config\n  template:\n    src: etc/ssh/sshd_config.j2\n    dest: /etc/ssh/sshd_config\n    backup: True\n  # notify: Restart sshd\n  register: sshdconfig\n\n- name: Restart sshd\n  service:\n    name: sshd\n    state: restarted\n    enabled: True\n  when: sshdconfig.changed\n\n# - name: Adjust gnome-keyring-service file to include ssh and gpg\n#   copy:\n#     src: usr/lib/systemd/user/gnome-keyring-daemon.service\n#     dest: /usr/lib/systemd/user/gnome-keyring-daemon.service\n#     mode: '0644'\n#     backup: yes\n#   register: keyringservice\n#   tags: ['gnome-keyring']\n\n# - name: Disable gnome-keyring service\n#   systemd:\n#     name: gnome-keyring-daemon\n#     enabled: yes\n#     scope: user\n#   become_user: \"{{ user.name }}\"\n#   # when: keyringservice.changed\n#   tags: ['gnome-keyring']\n",
      "path": "/roles/base/tasks/"
    },
    {
      "filename": "environment.yml",
      "content": "---\n\n- name: Placeholder for /etc/environment\n  copy:\n    src: etc/environment\n    dest: /etc/environment\n    owner: root\n    group: root\n    mode: '0644'\n    backup: yes\n\n- name: Set /etc/profile\n  template:\n    src: etc/profile.j2\n    dest: /etc/profile\n    owner: root\n    group: root\n    mode: '0644'\n    backup: yes\n",
      "path": "/roles/base/tasks/"
    },
    {
      "filename": "ranger.yml",
      "content": "---\n\n- name: Install ranger configs\n  synchronize:\n    src: home/ranger/\n    dest: \"{{ user.home }}/.config/ranger/\"\n    recursive: yes\n    mode: push\n    delete: no\n    checksum: yes\n    perms: no\n    rsync_opts:\n      - \"--update\"\n      - \"--omit-dir-times\"\n      - \"--progress\"\n      - \"--itemize-changes\"\n      - \"--chown={{ user.name }}:{{ user.group }}\"\n  ignore_errors: \"{{ ansible_check_mode }}\"\n  tags: ['ranger']\n",
      "path": "/roles/base/tasks/"
    },
    {
      "filename": "autofs.yml",
      "content": "---\n\n- name: Set autofs config folder\n  set_fact:\n    _autofs_dir: /etc\n  when: ansible_distribution == 'Fedora' or ansible_distribution == 'Debian'\n\n- name: Set autofs config folder\n  set_fact:\n    _autofs_dir: /etc/autofs\n  when: ansible_os_family == 'Archlinux'\n\n# - block:\n#     - name: Install autofs\n#       apt:\n#         name: autofs\n#         state: present\n#       when: ansible_distribution == 'Debian'\n#\n#     - name: Install autofs\n#       dnf:\n#         name: autofs\n#         state: present\n#         update_cache: yes\n#       when: ansible_distribution == 'Fedora'\n#\n#     - name: Install autofs\n#       aur:\n#         use: auto\n#         name: autofs\n#         state: present\n#       become: False\n#       when: ansible_os_family == 'Archlinux'\n#\n#   tags: ['packages']\n\n- block:\n    - name: Create mount directory folder if it doesn't already exist\n      file:\n        path: /mnt/{{ autofs_client.host }}\n        state: directory\n        mode: '0755'\n\n    - name: Install autofs configs\n      template:\n        src: etc/autofs/{{ item }}.j2\n        dest: \"{{ _autofs_dir }}/{{ item }}\"\n        mode: '0644'\n        backup: yes\n      with_items:\n        - autofs.conf\n        - auto.master\n        - auto.mnt\n      register: autofsconfig\n\n    - name: Enable autofs service\n      systemd:\n        name: autofs\n        enabled: yes\n      ignore_errors: \"{{ ansible_check_mode }}\"\n",
      "path": "/roles/base/tasks/"
    },
    {
      "filename": "autologin.yml",
      "content": "---\n\n- name: Create getty@tty1.service.d directory\n  file:\n    path: \"/etc/systemd/system/getty@tty1.service.d\"\n    state: directory\n    owner: root\n    group: root\n\n- name: Create systemd drop-in file for virtual console autologin\n  template:\n    src: \"etc/systemd/system/getty@tty1.service.d/autologin.conf.j2\"\n    dest: \"/etc/systemd/system/getty@tty1.service.d/autologin.conf\"\n    owner: root\n    group: root\n    mode: '0644'\n    backup: yes\n\n- name: \"Get current systemd default\"\n  command: \"systemctl get-default\"\n  changed_when: false\n  register: systemdefault\n\n- name: \"Set default to graphical target\"\n  command: \"systemctl set-default multi-user.target\"\n  when: \"'multi-user' not in systemdefault.stdout\"\n",
      "path": "/roles/base/tasks/"
    },
    {
      "filename": "lnav.yml",
      "content": "---\n",
      "path": "/roles/base/tasks/"
    },
    {
      "filename": "grub.yml",
      "content": "---\n#TODO: package this\n# - name: Install modified starfield theme\n#   unarchive:\n#     src: files/usr/share/grub/starfield.tar.gz\n#     dest: \"/usr/share/grub/themes\"\n#   when: ansible_os_family == 'Archlinux'\n\n- name: Check for EFI support\n  shell: efibootmgr -v\n  register: efi_check\n  ignore_errors: yes\n  tags: ['check']\n\n- name: Set efi_supported variable\n  set_fact:\n    efi_supported: \"{{ not efi_check.failed }}\"\n  tags: ['check']\n\n- setup:\n- debug:\n    msg: \"{{ efi_supported }}\"\n  tags: ['debug']\n\n- name: Copy background to /usr/share/backgrounds\n  copy:\n    src: usr/share/backgrounds/str_01_04.png\n    dest: /usr/share/backgrounds/str_01_04.png\n\n- name: Set kernel cmdline params in grub\n  template:\n    src: etc/default/grub.j2\n    dest: /etc/default/grub\n    owner: root\n    group: root\n    mode: \"644\"\n    backup: yes\n  register: default_grub\n\n- name: Remake grub if changes were made\n  ansible.builtin.command: \"{{ grub_mkconfig_command }}\"\n  when:\n    - default_grub.changed\n  vars:\n    grub_mkconfig_command: >-\n      {% set grub_command_map = {\n        'Debian': 'update-grub',\n        'Fedora': 'grub2-mkconfig -o /boot/efi/EFI/Fedora/grub.cfg\\ngrub2-mkconfig -o /boot/grub2/grub.cfg',\n        'Archlinux': 'grub-mkconfig -o /boot/grub/grub.cfg'\n      } %}\n\n      {{ grub_command_map.get(ansible_os_family, '# Unsupported distribution') }}\n",
      "path": "/roles/base/tasks/"
    },
    {
      "filename": "updatedb.yml",
      "content": "---\n\n- name: Check if locate command is available\n  command: locate --version\n  register: locate_check\n  ignore_errors: true\n\n- name: Set locate_available variable\n  set_fact:\n    locate_available: \"{{ not locate_check.failed }}\"\n\n- block:\n    - name: Set directories to not be indexed\n      template:\n        src: etc/updatedb.conf.j2\n        dest: /etc/updatedb.conf\n        owner: root\n        group: root\n        mode: '0644'\n        backup: yes\n      register: updatedb_conf\n\n    - name: Run updatedb\n      command: \"updatedb\"\n      when: updatedb_conf.changed\n      ignore_errors: True\n\n  when: locate_available|bool\n",
      "path": "/roles/base/tasks/"
    },
    {
      "filename": "zram.yml",
      "content": "---\n\n# - name: Disable swap\n#   shell: swapoff -a\n#\n# - block:\n#\n#     - name: Install zram-generator\n#       package:\n#         name: zram-generator\n#         state: present\n#       tags: ['packages']\n#\n#     - name: Install zram-generator.conf\n#       copy:\n#         src: etc/systemd/zram-generator.conf\n#         dest: /etc/systemd/zram-generator.conf\n#         mode: '0644'\n#\n#     - name: Install sysctl zram parameters\n#       copy:\n#         src: etc/sysctl.d/99-vm-zram-parameters.conf\n#         dest: /etc/sysctl.d/99-vm-zram-parameters.conf\n#         mode: '0644'\n#\n#     - name: Reload systemd daemon\n#       systemd:\n#         daemon_reload: true\n#\n#   when: ansible_distribution != 'Debian'\n",
      "path": "/roles/base/tasks/"
    },
    {
      "filename": "main.yml",
      "content": "---\n\n- name: Base Tasks\n  debug:\n    msg: \"Starting base tasks\"\n  register: expected_value\n\n- import_tasks:\n    file: packages.yml\n  tags: ['packages']\n\n- name: Ensure root directories exist\n  file:\n    dest: \"{{ item.dest }}\"\n    state: directory\n    owner: \"{{ item.owner | default(omit) }}\"\n    group: \"{{ item.group | default(omit) }}\"\n    mode: \"{{ item.mode | default(omit) }}\"\n    recurse: \"{{ item.recurse | default(false) }}\"\n  loop: \"{{ root_directory_definitions }}\"\n\n- import_tasks:\n    file: sshd.yml\n  tags: [\"sshd\"]\n\n- import_tasks:\n    file: environment.yml\n  tags: [\"env\", \"profile\"]\n\n- import_tasks:\n    file: grub.yml\n  tags: [\"grub\"]\n\n- import_tasks:\n    file: updatedb.yml\n  tags: [\"updatedb\"]\n\n- import_tasks:\n    file: ranger.yml\n  tags: ['ranger']\n\n# - import_tasks:\n#     file: lnav.yml\n#   tags: ['lnav']\n\n# - import_tasks:\n#     file: zram.yml\n#   tags: [\"zram\"]\n\n# - import_tasks:\n#     file: autofs.yml\n#   tags: [\"autofs\"]\n\n# - import_tasks:\n#     file: autologin.yml\n#   tags: ['autologin']\n#   when: autologin is defined\n",
      "path": "/roles/base/tasks/"
    },
    {
      "filename": "main.yml",
      "content": "---\n# vars file for base\n\nexpected_value: \"role_base_varsMain.yml\"\n",
      "path": "/roles/base/vars/"
    },
    {
      "filename": "main.yml",
      "content": "---\n# defaults file for common\n\n# The default directory permission mode when creating directories using `root_directory_definitions`\nroot_directory_default_mode: '0755'\n\n# The default directory owner when creating directories using `root_directory_definitions`\nroot_directory_default_owner: root\n\n# The default directory group when creating directories using `root_directory_definitions`\nroot_directory_default_group: root\n\nroot_directory_default_recurse: False\n\nroot_directory_definitions:\n  - dest: /etc/X11/xorg.conf.d\n  - dest: /etc/fonts\n  - dest: /etc/pulse/default.pa.d\n  - dest: /etc/systemd/timesyncd.conf.d\n  - dest: /etc/xdg\n  - dest: /etc/mediamtx\n  - dest: /etc/autofs\n  - dest: /usr/share/backgrounds\n\nexpected_value: \"role_base_defaults\"\n\nbase__packages:\n  # - asciiquarium-transparent-git\n  # - crossguid\n  # - html2md\n  # - lnav-git\n  # - nyan-lang-git\n  # - python-conda-package-handling\n  - ascii-image-converter\n  - asciiquarium-git\n  - aspell\n  - aspell-en\n  - atool\n  - audiofile\n  - autofs\n  - await\n  - bandwhich\n  - bash-completion\n  - bash-language-server\n  - bat\n  - beautysh\n  - bottom\n  - choose\n  - chromaprint\n  - cmake\n  - cpupower\n  - curlie\n  - dex\n  - doggo\n  - downgrade\n  - duf\n  - dust\n  - elinks\n  - eza\n  - faac\n  - faad2\n  - fd\n  - figlet\n  - firewalld\n  - fsarchiver\n  - fuse3\n  - fuse-common\n  - git\n  - git-delta\n  - git-lfs\n  - github-cli\n  - gitui\n  - glow\n  - gnome-keyring\n  - gnuplot\n  - gource\n  - gping\n  - graphicsmagick\n  - gst-libav\n  - gstreamer\n  - gum\n  - highlight\n  - hspell\n  - htop\n  - i7z\n  - imagemagick\n  - inetutils\n  - inxi\n  - iotop\n  - jq\n  - libcyaml\n  - libgit2\n  - libgit2-glib\n  - libvips\n  - libvoikko\n  - links\n  - lnav\n  - lynx\n  - mako\n  - mediainfo\n  - meld\n  - micro\n  - mlocate\n  - most\n  - mupdf-tools\n  - nano-syntax-highlighting\n  - ncdu\n  - net-tools\n  - nodejs\n  - npm\n  - numlockx\n  - nuspell\n  - odt2txt\n  - openssl\n  - opus\n  - opus-tools\n  - opusfile\n  - pamixer\n  - pandoc-cli\n  - pdf2htmlex-appimage\n  - pdfjs\n  - perl-image-exiftool\n  - pgvector\n  - platformfolders\n  - playerctl\n  - pod2man\n  - poppler\n  - postgresql-libs\n  - poweralertd\n  - python-adblock\n  - python-chardet\n  - python-j2cli\n  - python-pagelabels\n  - python-pillow\n  - python-pygments\n  - python-pympler\n  - python-setuptools\n  - python-sphinx-intl\n  - python-sphinxcontrib-svg2pdfconverter\n  - qpdf\n  - ranger\n  - ripgrep\n  - ripgrep-all\n  - rsync\n  - rxvt-unicode\n  - sd\n  - smartmontools\n  - socat\n  - speech-dispatcher\n  - sshpass\n  - stunnel\n  - sudo\n  - swappy\n  - sysstat\n  - taglib\n  - teiler-git\n  - texlive-basic\n  - texlive-bin\n  # - texlive-coffee-stains\n  - texlive-doc\n  - texlive-fontsextra\n  - texlive-fontsrecommended\n  - texlive-latex\n  - texlive-latexextra\n  - texlive-latexrecommended\n  - texlive-pictures\n  - texlive-xetex\n  - tldr\n  - transmission-cli\n  - tree\n  - ueberzug\n  - unrar\n  - unzip\n  - v4l-utils\n  - vorbis-tools\n  - wavpack\n  - wget\n  - wkhtmltopdf-static\n  - wmctrl\n  - wordnet-cli\n  - wordnet-common\n  - x264\n  - x265\n  - xterm\n  - yad\n  - yt-dlp\n  - zoxide\n",
      "path": "/roles/base/defaults/"
    },
    {
      "filename": "main.yml",
      "content": "galaxy_info:\n  author: your name\n  description: your role description\n  company: your company (optional)\n\n  # If the issue tracker for your role is not on github, uncomment the\n  # next line and provide a value\n  # issue_tracker_url: http://example.com/issue/tracker\n\n  # Choose a valid license ID from https://spdx.org - some suggested licenses:\n  # - BSD-3-Clause (default)\n  # - MIT\n  # - GPL-2.0-or-later\n  # - GPL-3.0-only\n  # - Apache-2.0\n  # - CC-BY-4.0\n  license: license (GPL-2.0-or-later, MIT, etc)\n\n  min_ansible_version: 2.1\n\n  # If this a Container Enabled role, provide the minimum Ansible Container version.\n  # min_ansible_container_version:\n\n  galaxy_tags: []\n    # List tags for your role here, one per line. A tag is a keyword that describes\n    # and categorizes the role. Users find roles by searching for tags. Be sure to\n    # remove the '[]' above, if you add tags to this list.\n    #\n    # NOTE: A tag is limited to a single word comprised of alphanumeric characters.\n    #       Maximum 20 tags per role.\n\ndependencies: []\n  # List your role dependencies here, one per line. Be sure to remove the '[]' above,\n  # if you add dependencies to this list.\n",
      "path": "/roles/vscode/meta/"
    },
    {
      "filename": "main.yml",
      "content": "---\n# handlers file for vscode\n",
      "path": "/roles/vscode/handlers/"
    },
    {
      "filename": "test.yml",
      "content": "---\n- hosts: localhost\n  remote_user: root\n  roles:\n    - vscode\n",
      "path": "/roles/vscode/tests/"
    },
    {
      "filename": "main.yml",
      "content": "---\n\n# - name: Check repository version\n#   shell: \"paru -Si code | grep -w 'extra/code' | awk '{print $2}' | sed 's/-1$//' | xargs\"\n#   register: desired_version\n#   changed_when: false\n#\n# - name: Get installed application version\n#   shell: \"code --version | head -1 |awk '{print $1}'\"\n#   register: current_version\n#   changed_when: false\n\n- block:\n    - name: Install vscode\n      aur:\n        use: auto\n        name: \"{{ item }}\"\n        state: present\n      with_items:\n          - code\n          - code-marketplace\n      register: vscode_install\n      tags: ['packages']\n\n    - name: Check currently installed extensions\n      shell: code --list-extensions\n      register: installed_extensions\n      changed_when: installed_extensions.rc != 0\n      ignore_errors: \"{{ ansible_check_mode }}\"\n\n    # - name: something\n    #   debug:\n    #     var: extensions|difference(installed_extensions.stdout_lines)\n\n    - name: Set list of extensions to install\n      set_fact:\n        _extensions: \"{{ extensions|difference(installed_extensions.stdout_lines) }}\"\n\n    - name: Install VSCode extensions\n      shell: \"code --install-extension {{ item }}\"\n      with_items:\n        - \"{{ _extensions }}\"\n      when: _extensions | length > 0\n\n  rescue:\n    - name: Handle installation failure\n      debug:\n        msg: \"Failed to install VSCode extension: {{ item }}\"\n      loop: \"{{ ansible_failed_result.results | map(attribute='item') | list }}\"\n\n  always:\n    - name: Continue execution\n      debug:\n        msg: \"Continuing with playbook execution\"\n\n  become: False\n  vars:\n    extensions:\n      - \"10nates.ollama-autocoder\"\n      - \"beardedbear.beardedicons\"\n      - \"beardedbear.beardedtheme\"\n      - \"bradlc.vscode-tailwindcss\"\n      - \"byi8220.indented-block-highlighting\"\n      - \"castwide.solargraph\"\n      - \"darkriszty.markdown-table-prettify\"\n      - \"esbenp.prettier-vscode\"\n      - \"foxundermoon.shell-format\"\n      - \"github.vscode-github-actions\"\n      - \"gruntfuggly.todo-tree\"\n      - \"heybourn.headwind\"\n      - \"huggingFace.huggingface-vscode\"\n      - \"james-Yu.latex-workshop\"\n      - \"jokela.vscode-sfz\"\n      - \"kentor.sort-indentation-group\"\n      - \"kevinrose.vsc-python-indent\"\n      - \"leodevbro.blockman\"\n      - \"mblode.pretty-formatter\"\n      - \"miladfathy.html-color-theme\"\n      - \"ms-azuretools.vscode-docker\"\n      - \"ms-azuretools.vscode-docker\"\n      - \"ms-python.debugpy\"\n      - \"ms-python.python\"\n      - \"ms-python.vscode-pylance\"\n      - \"ms-toolsai.jupyter\"\n      - \"ms-toolsai.jupyter-keymap\"\n      - \"ms-toolsai.jupyter-renderers\"\n      - \"ms-toolsai.vscode-jupyter-cell-tags\"\n      - \"ms-toolsai.vscode-jupyter-slideshow\"\n      - \"ms-vscode-remote.remote-ssh\"\n      - \"ms-vscode-remote.remote-ssh-edit\"\n      - \"ms-vscode.remote-explorer\"\n      - \"njpwerner.autodocstring\"\n      - \"redhat.vscode-yaml\"\n      - \"renxzen.google-monokai-theme\"\n      - \"samuelcolvin.jinjahtml\"\n      - \"shopify.ruby-lsp\"\n      - \"textworld.textworld-vscode\"\n      - \"the-e3n.block-highlighter\"\n      - \"tomoki1207.pdf\"\n      - \"yzane.markdown-pdf\"\n      - \"zjffun.snippetsmanager\"\n\n#TODO: update desktop entry to use --password-store=\"gnome\"\n",
      "path": "/roles/vscode/tasks/"
    },
    {
      "filename": "main.yml",
      "content": "---\n# vars file for vscode\n",
      "path": "/roles/vscode/vars/"
    },
    {
      "filename": "main.yml",
      "content": "---\n# defaults file for vscode\n",
      "path": "/roles/vscode/defaults/"
    },
    {
      "filename": "main.yml",
      "content": "galaxy_info:\n  author: your name\n  description: your role description\n  company: your company (optional)\n\n  # If the issue tracker for your role is not on github, uncomment the\n  # next line and provide a value\n  # issue_tracker_url: http://example.com/issue/tracker\n\n  # Choose a valid license ID from https://spdx.org - some suggested licenses:\n  # - BSD-3-Clause (default)\n  # - MIT\n  # - GPL-2.0-or-later\n  # - GPL-3.0-only\n  # - Apache-2.0\n  # - CC-BY-4.0\n  license: license (GPL-2.0-or-later, MIT, etc)\n\n  min_ansible_version: 2.1\n\n  # If this a Container Enabled role, provide the minimum Ansible Container version.\n  # min_ansible_container_version:\n\n  galaxy_tags: []\n    # List tags for your role here, one per line. A tag is a keyword that describes\n    # and categorizes the role. Users find roles by searching for tags. Be sure to\n    # remove the '[]' above, if you add tags to this list.\n    #\n    # NOTE: A tag is limited to a single word comprised of alphanumeric characters.\n    #       Maximum 20 tags per role.\n\ndependencies: []\n  # List your role dependencies here, one per line. Be sure to remove the '[]' above,\n  # if you add dependencies to this list.\n",
      "path": "/roles/homepage/meta/"
    },
    {
      "filename": "main.yml",
      "content": "---\n# handlers file for homepage\n",
      "path": "/roles/homepage/handlers/"
    },
    {
      "filename": "test.yml",
      "content": "---\n- hosts: localhost\n  remote_user: root\n  roles:\n    - homepage\n",
      "path": "/roles/homepage/tests/"
    },
    {
      "filename": "main.yml",
      "content": "---\n# tasks file for homepage\n\n\n- name: Create homepage folder\n  file:\n    path: \"{{ homepage_directory }}\"\n    state: directory\n    owner: \"{{ user.name }}\"\n    group: \"{{ user.group }}\"\n    mode: '2755'\n    recurse: False\n\n- name: sync folder\n  synchronize:\n    src: home/.local/share/html/homepage/\n    dest: \"{{ homepage_directory }}/\"\n    recursive: yes\n    mode: push\n    delete: no\n    checksum: yes\n    perms: no\n    rsync_opts:\n      - \"--update\"\n      - \"--omit-dir-times\"\n      - \"--progress\"\n      - \"--itemize-changes\"\n      - \"--chown={{ user.name }}:{{ user.name }}\"\n\n- name: Set index.html template\n  template:\n    src: home/.local/share/html/homepage/index.html.j2\n    dest: \"{{ homepage_directory }}/index.html\"\n    owner: \"{{ user.name }}\"\n    group: \"{{ user.group }}\"\n    mode: '0664'\n    backup: False\n",
      "path": "/roles/homepage/tasks/"
    },
    {
      "filename": "main.yml",
      "content": "---\n# vars file for homepage\n",
      "path": "/roles/homepage/vars/"
    },
    {
      "filename": "main.yml",
      "content": "---\n# defaults file for homepage\n\nhomepage_directory: \"/usr/share/nginx/html\"\n\nhomepage:\n  group:\n    intranet:\n      - name: hookerbot\n        url: \"http://hookerbot\"\n      - name: visiblemagic\n        url: \"http://192.168.41.50\"\n      - name: linkding\n        url: \"http://bender.syncopated.net:9090/bookmarks\"\n      - name: pihole\n        url: \"http://pihole/admin\"\n      - name: pkgrepo\n        url: \"http://bender.syncopated.net\"\n      - name: plex\n        url: \"http://ninjabot.syncopated.net:32400/web\"\n      - name: qbittorrent\n        url: \"http://bender.syncopated.net:8080\"\n    intranetLLM:\n      - name: Dify\n        url: \"http://ninjabot.syncopated.net/apps\"\n      - name: Flowise\n        url: \"http://ninjabot.syncopated.net:3002\"\n      - name: SillyTavern\n        url: \"http://ninjabot.syncopated.net:8000\"\n      - name: Big-AGI\n        url: \"http://localhost:3001\"\n      - name: Langfuse\n        url: \"http://ninjabot.syncopated.net:3000\"\n      - name: Agenta\n        url: \"http://soundbot/apps\"\n      - name: Redis\n        url: \"http://ninjabot.syncopated.net:8001\"\n      - name: ArchiveBox\n        url: \"http://ninjabot.syncopated.net:8000\"\n    webtools:\n      - name: gmail\n        url: \"https://gmail.google.com\"\n      - name: github\n        url: \"https://github.com\"\n      - name: gitlab\n        url: \"https://gitlab.com/b08x\"\n      - name: youtube\n        url: \"https://www.youtube.com/\"\n      - name: reddit\n        url: \"https://www.reddit.com/\"\n      - name: google search console\n        url: \"https://search.google.com/search-console?resource_id=https%3A%2F%2Fb08x.github.io%2F\"\n    webtoolsmisc:\n      - name: Huggingface\n        url: \"https://huggingface.co/\"\n      - name: LLaVA\n        url: \"https://llava.hliu.cc/\"\n      - name: llama-parse\n        url: \"https://cloud.llamaindex.ai/\"\n      - name: colors-between\n        url: \"https://hexcolor.co/colors-between\"\n      - name: d2 playground\n        url: \"https://play.d2lang.com/?script=qlDQtVOo5AIEAAD__w%3D%3D&\"\n    webtoolsLLM:\n      - name: Anthropic Console\n        url: \"https://console.anthropic.com/\"\n      - name: Google AI Studio\n        url: \"https://makersuite.google.com/app/prompts/new_freeform\"\n      - name: Cohere Dashboard\n        url: \"https://dashboard.cohere.com/welcome/login?redirect_uri=%2F\"\n      - name: Deepgram Console\n        url: \"https://playground.deepgram.com/?endpoint=listen&smart_format=true&language=en&model=nova-2\"\n      - name: LLMStack\n        url: \"https://trypromptly.com/\"\n      - name: PromptPerfect\n        url: \"https://promptperfect.jina.ai/interactive\"\n      - name: PicoVoice\n        url: \"https://console.picovoice.ai/\"\n    webtoolsLLMchat:\n      - name: Gemini\n        url: \"https://gemini.google.com/chat\"\n      - name: Claude\n        url: \"https://claude.ai/chats\"\n      - name: Perplexity\n        url: \"https://www.perplexity.ai/\"\n      - name: Elevenlabs\n        url: \"https://elevenlabs.io/app/speech-synthesis\"\n      - name: Suno\n        url: \"https://app.suno.ai/create/\"\n      - name: chatGPT\n        url: \"https://chat.openai.com/\"\n      - name: LLM Arena\n        url: \"https://chat.lmsys.org/\"\n      - name: Pi AI\n        url: \"https://pi.ai/threads\"\n",
      "path": "/roles/homepage/defaults/"
    },
    {
      "filename": "main.yml",
      "content": "galaxy_info:\n  author: your name\n  description: your role description\n  company: your company (optional)\n\n  # If the issue tracker for your role is not on github, uncomment the\n  # next line and provide a value\n  # issue_tracker_url: http://example.com/issue/tracker\n\n  # Choose a valid license ID from https://spdx.org - some suggested licenses:\n  # - BSD-3-Clause (default)\n  # - MIT\n  # - GPL-2.0-or-later\n  # - GPL-3.0-only\n  # - Apache-2.0\n  # - CC-BY-4.0\n  license: license (GPL-2.0-or-later, MIT, etc)\n\n  min_ansible_version: 2.1\n\n  # If this a Container Enabled role, provide the minimum Ansible Container version.\n  # min_ansible_container_version:\n\n  galaxy_tags: []\n    # List tags for your role here, one per line. A tag is a keyword that describes\n    # and categorizes the role. Users find roles by searching for tags. Be sure to\n    # remove the '[]' above, if you add tags to this list.\n    #\n    # NOTE: A tag is limited to a single word comprised of alphanumeric characters.\n    #       Maximum 20 tags per role.\n\ndependencies: []\n  # List your role dependencies here, one per line. Be sure to remove the '[]' above,\n  # if you add dependencies to this list.\n",
      "path": "/roles/iso/meta/"
    },
    {
      "filename": "main.yml",
      "content": "---\n# handlers file for iso\n",
      "path": "/roles/iso/handlers/"
    },
    {
      "filename": "test.yml",
      "content": "---\n- hosts: localhost\n  remote_user: root\n  roles:\n    - iso\n",
      "path": "/roles/iso/tests/"
    },
    {
      "filename": "draft_build_playbook.yml",
      "content": "---\n- name: Build Arch Linux ISO\n  hosts: localhost\n  become: yes\n  tasks:\n    - name: Set variables\n      set_fact:\n        src_dir: \"{{ ansible_env.PWD }}\"\n        archiso_packages:\n          - archiso\n          - curl\n      vars:\n        installer_path: airootfs/usr/local/bin/installer\n        cachyos_mirrorlist_url: \"https://github.com/CachyOS/CachyOS-PKGBUILDS/raw/master/cachyos-mirrorlist/cachyos-mirrorlist\"\n      register: result\n\n    - name: Ensure required packages are installed\n      pacman:\n        name: \"{{ archiso_packages }}\"\n        state: present\n      when: \"'archiso' not in result.failed\"\n\n    - name: Copy installer locally\n      copy:\n        src: \"{{ item }}\"\n        dest: \"{{ installer_path }}\"\n      with_fileglob:\n        - \"{{ installer_local_path }}\"\n      when: installer_local_path is defined and installer_local_path | length > 0\n\n    - name: Update installer remotely\n      get_url:\n        url: \"{{ cachyos_mirrorlist_url }}\"\n        dest: \"{{ installer_path }}\"\n        mode: 0755\n        force: yes\n      when: installer_remote_update is defined and installer_remote_update == true\n\n    - name: Enable LTS kernel\n      when: enable_lts_kernel is defined and enable_lts_kernel == true\n      block:\n        - name: Modify packages.x86_64\n          lineinfile:\n            path: packages.x86_64\n            regexp: '^linux$'\n            line: 'linux-lts'\n          when: \"'linux-lts' not in packages.x86_64\"\n\n        - name: Modify efiboot/loader/entries/*\n          replace:\n            path: \"{{ item }}\"\n            regexp: '-linux$'\n            replace: '-linux-lts'\n          with_fileglob:\n            - efiboot/loader/entries/*\n\n        - name: Modify syslinux/*.cfg\n          replace:\n            path: \"{{ item }}\"\n            regexp: '-linux$'\n            replace: '-linux-lts'\n          with_fileglob:\n            - syslinux/*.cfg\n\n        - name: Modify grub/grub.cfg\n          replace:\n            path: grub/grub.cfg\n            regexp: '-linux$'\n            replace: '-linux-lts'\n\n        - name: Modify airootfs/etc/mkinitcpio.d/linux.preset\n          replace:\n            path: airootfs/etc/mkinitcpio.d/linux.preset\n            regexp: '-linux'\n            replace: '-linux-lts'\n\n        - name: Modify profiledef.sh\n          replace:\n            path: profiledef.sh\n            regexp: '\"syncopated\"'\n            replace: '\"syncopated-lts\"'\n\n    - name: Enable RT kernel\n      when: enable_rt_kernel is defined and enable_rt_kernel == true\n      block:\n        - name: Modify packages.x86_64\n          lineinfile:\n            path: packages.x86_64\n            regexp: '^linux$'\n            line: 'linux-rt'\n          when: \"'linux-rt' not in packages.x86_64\"\n\n        - name: Modify efiboot/loader/entries/*\n          replace:\n            path: \"{{ item }}\"\n            regexp: '-linux$'\n            replace: '-linux-rt'\n          with_fileglob:\n            - efiboot/loader/entries/*\n\n        - name: Modify syslinux/*.cfg\n          replace:\n            path: \"{{ item }}\"\n            regexp: '-linux$'\n            replace: '-linux-rt'\n          with_fileglob:\n            - syslinux/*.cfg\n\n        - name: Modify grub/grub.cfg\n          replace:\n            path: grub/grub.cfg\n            regexp: '-linux$'\n            replace: '-linux-rt'\n\n        - name: Modify airootfs/etc/mkinitcpio.d/linux.preset\n          replace:\n            path: airootfs/etc/mkinitcpio.d/linux.preset\n            regexp: '-linux'\n            replace: '-linux-rt'\n\n        - name: Modify profiledef.sh\n          replace:\n            path: profiledef.sh\n            regexp: '\"syncopated\"'\n            replace: '\"syncopated-rt\"'\n\n    - name: Enable RT-LTS kernel\n      when: enable_rt_lts_kernel is defined and enable_rt_lts_kernel == true\n      block:\n        - name: Modify packages.x86_64\n          lineinfile:\n            path: packages.x86_64\n            regexp: '^linux$'\n            line: 'linux-rt-lts'\n          when: \"'linux-rt-lts' not in packages.x86_64\"\n\n        - name: Modify efiboot/loader/entries/*\n          replace:\n            path: \"{{ item }}\"\n            regexp: '-linux$'\n            replace: '-linux-rt-lts'\n          with_fileglob:\n            - efiboot/loader/entries/*\n\n        - name: Modify syslinux/*.cfg\n          replace:\n            path: \"{{ item }}\"\n            regexp: '-linux$'\n            replace: '-linux-rt-lts'\n          with_fileglob:\n            - syslinux/*.cfg\n\n        - name: Modify grub/grub.cfg\n          replace:\n            path: grub/grub.cfg\n            regexp: '-linux$'\n            replace: '-linux-rt-lts'\n\n        - name: Modify airootfs/etc/mkinitcpio.d/linux.preset\n          replace:\n            path: airootfs/etc/mkinitcpio.d/linux.preset\n            regexp: '-linux'\n            replace: '-linux-rt-lts'\n\n        - name: Modify profiledef.sh\n          replace:\n            path: profiledef.sh\n            regexp: '\"syncopated\"'\n            replace: '\"syncopated-rt-lts\"'\n\n    - name: Fetch CachyOS mirrorlist\n      get_url:\n        url: \"{{ cachyos_mirrorlist_url }}\"\n        dest: airootfs/etc/pacman.d/cachyos-mirrorlist\n      when: cachyos_mirrorlist_url is defined\n\n    - name: Build Arch Linux ISO\n      command: \"mkarchiso -v .\"\n      args:\n        chdir: \"{{ src_dir }}\"\n",
      "path": "/roles/iso/files/"
    },
    {
      "filename": "main.yml",
      "content": "---\n# tasks file for iso\n",
      "path": "/roles/iso/tasks/"
    },
    {
      "filename": "main.yml",
      "content": "---\n# vars file for iso\n",
      "path": "/roles/iso/vars/"
    },
    {
      "filename": "main.yml",
      "content": "---\n# defaults file for iso\n",
      "path": "/roles/iso/defaults/"
    },
    {
      "filename": "main.yml",
      "content": "galaxy_info:\n  author: your name\n  description: your role description\n  company: your company (optional)\n\n  # If the issue tracker for your role is not on github, uncomment the\n  # next line and provide a value\n  # issue_tracker_url: http://example.com/issue/tracker\n\n  # Choose a valid license ID from https://spdx.org - some suggested licenses:\n  # - BSD-3-Clause (default)\n  # - MIT\n  # - GPL-2.0-or-later\n  # - GPL-3.0-only\n  # - Apache-2.0\n  # - CC-BY-4.0\n  license: license (GPL-2.0-or-later, MIT, etc)\n\n  min_ansible_version: 2.1\n\n  # If this a Container Enabled role, provide the minimum Ansible Container version.\n  # min_ansible_container_version:\n\n  galaxy_tags: []\n    # List tags for your role here, one per line. A tag is a keyword that describes\n    # and categorizes the role. Users find roles by searching for tags. Be sure to\n    # remove the '[]' above, if you add tags to this list.\n    #\n    # NOTE: A tag is limited to a single word comprised of alphanumeric characters.\n    #       Maximum 20 tags per role.\n\ndependencies: []\n  # List your role dependencies here, one per line. Be sure to remove the '[]' above,\n  # if you add dependencies to this list.\n",
      "path": "/roles/sudoers/meta/"
    },
    {
      "filename": "main.yml",
      "content": "---\n# handlers file for sudoers\n",
      "path": "/roles/sudoers/handlers/"
    },
    {
      "filename": "test.yml",
      "content": "---\n- hosts: localhost\n  remote_user: root\n  roles:\n    - sudoers\n",
      "path": "/roles/sudoers/tests/"
    },
    {
      "filename": "main.yml",
      "content": "---\n# tasks file for sudoers\n\n- block:\n\n    - name: Ensure /etc/sudoers.d exists\n      file:\n        path: /etc/sudoers.d/\n        state: directory\n        owner: root\n        group: root\n        recurse: True\n\n    # - name: Set NOPASSWD for user in sudoers\n    #   lineinfile:\n    #     path: /etc/sudoers.d/99-user\n    #     line: '{{ user.name }} ALL=(ALL:ALL) NOPASSWD: ALL'\n    #     validate: '/usr/sbin/visudo -cf %s'\n    #     create: yes\n    #     backup: yes\n    #   when: user.name != 'root'\n\n    - name: Set NOPASSWD for user in polkit\n      copy:\n        content: |\n          /* Allow members of the wheel group to execute any actions\n          * without password authentication, similar to \"sudo NOPASSWD:\"\n          */\n          polkit.addRule(function(action, subject) {\n            if (subject.isInGroup(\"{{ admin_group }}\")) {\n              return polkit.Result.YES;\n            }\n          });\n        dest: \"/etc/polkit-1/rules.d/49-nopasswd_global.rules\"\n        mode: '0644'\n      when: ansible_os_family == 'Archlinux' or ansible_distribution == 'Fedora'\n\n    - name: Set NOPASSWD for user in polkit\n      copy:\n        content: |\n          [set admin_group privs]\n          Identity=unix-group:{{ admin_group }}\n          Action=*\n          ResultActive=yes\n        dest: \"/etc/polkit-1/localauthority/50-local.d/admin_group.pkla\"\n        mode: '0644'\n      when: ansible_distribution == 'MX' or ansible_distribution == 'Debian'\n\n  when: user.sudoers |default(false)|bool == True\n",
      "path": "/roles/sudoers/tasks/"
    },
    {
      "filename": "main.yml",
      "content": "---\n# vars file for sudoers\n",
      "path": "/roles/sudoers/vars/"
    },
    {
      "filename": "main.yml",
      "content": "---\n# defaults file for sudoers\npackages:\n  - sudo\n",
      "path": "/roles/sudoers/defaults/"
    },
    {
      "filename": "main.yml",
      "content": "galaxy_info:\n  author: your name\n  description: your role description\n  company: your company (optional)\n\n  # If the issue tracker for your role is not on github, uncomment the\n  # next line and provide a value\n  # issue_tracker_url: http://example.com/issue/tracker\n\n  # Choose a valid license ID from https://spdx.org - some suggested licenses:\n  # - BSD-3-Clause (default)\n  # - MIT\n  # - GPL-2.0-or-later\n  # - GPL-3.0-only\n  # - Apache-2.0\n  # - CC-BY-4.0\n  license: license (GPL-2.0-or-later, MIT, etc)\n\n  min_ansible_version: 2.1\n\n  # If this a Container Enabled role, provide the minimum Ansible Container version.\n  # min_ansible_container_version:\n\n  galaxy_tags: []\n    # List tags for your role here, one per line. A tag is a keyword that describes\n    # and categorizes the role. Users find roles by searching for tags. Be sure to\n    # remove the '[]' above, if you add tags to this list.\n    #\n    # NOTE: A tag is limited to a single word comprised of alphanumeric characters.\n    #       Maximum 20 tags per role.\n\ndependencies: []\n  # List your role dependencies here, one per line. Be sure to remove the '[]' above,\n  # if you add dependencies to this list.\n",
      "path": "/roles/deadbeef/meta/"
    },
    {
      "filename": "main.yml",
      "content": "---\n# handlers file for deadbeef\n",
      "path": "/roles/deadbeef/handlers/"
    },
    {
      "filename": "test.yml",
      "content": "---\n- hosts: localhost\n  remote_user: root\n  roles:\n    - deadbeef\n",
      "path": "/roles/deadbeef/tests/"
    },
    {
      "filename": "main.yml",
      "content": "---\n\n- name: Check if deadbeef is already installed\n  stat:\n    path: /usr/bin/deadbeef\n  register: result\n  ignore_errors: \"{{ ansible_check_mode }}\"\n\n# - block:\n#     - name: Install deadbeef\n#       aur:\n#         use: auto\n#         name: deadbeef-git\n#         state: present\n#       become: False\n#       when: ansible_os_family == 'Archlinux'\n#\n#     - name: Install deadbeef\n#       dnf:\n#         name: deadbeef-static\n#         state: present\n#         update_cache: yes\n#       when: ansible_distribution == 'Fedora'\n#\n#   tags: ['packages']\n\n- name: Create deadbeef config and plugin folders\n  file:\n    path: \"{{ user.home }}/{{ item }}\"\n    state: directory\n    owner: \"{{ user.name }}\"\n    group: \"{{ user.group }}\"\n  loop:\n    - \".config/deadbeef\"\n    - \".config/deadbeef/playlists\"\n    - \".local/lib/deadbeef\"\n\n- name: Sync deadbeef plugins\n  synchronize:\n    src: plugins/\n    dest: \"{{ user.home }}/.local/lib/deadbeef/\"\n    recursive: yes\n    mode: push\n    delete: no\n    checksum: yes\n    perms: no\n    rsync_opts:\n      - \"--update\"\n      - \"--omit-dir-times\"\n\n- name: Set deadbeef configs\n  copy:\n    src: \"{{ item }}\"\n    dest: \"{{ user.home }}/.config/deadbeef/{{ item }}\"\n    owner: \"{{ user.name }}\"\n    group: \"{{ user.group }}\"\n    mode: '0644'\n    backup: True\n  with_items:\n    - config\n    - dspconfig\n\n- name: Sync deadbeef playlists\n  synchronize:\n    src: playlists/\n    dest: \"{{ user.home }}/.config/deadbeef/playlists/\"\n    recursive: yes\n    mode: push\n    delete: no\n    checksum: yes\n    perms: no\n    rsync_opts:\n      - \"--update\"\n      - \"--omit-dir-times\"\n\n\n# deadbeef shellexec commands\n#\n# shellexec_config_wip [{\"command\": \"audacity %F\", \"flags\": [\"local\", \"single\"], \"title\": \"Edit/Audacity\", \"name\": \"new_cmd\"},\n# {\"command\": \"mkdir -pv %D/converted && sox %F -r 48k %D/converted/%f\", \"flags\": [\"local\", \"single\", \"multiple\"], \"title\": \"Edit/Sox/Resample\", \"name\": \"sox_resample\"}, {\"command\": \"normalize-audio -m %F\", \"flags\": [\"local\", \"single\", \"multiple\"], \"title\": \"Edit/Normalize\", \"name\": \"norm_audos\"}, {\"command\": \"puddletag %D\", \"flags\": [\"local\", \"single\"], \"title\": \"Edit/Puddletag\", \"name\": \"puddle_tag\"},\n#\n# {\"command\": \"mkdir -pv %D/converted && sox %F -r 48k %D/converted/%f channels 1\", \"flags\": [\"local\", \"single\", \"multiple\"], \"title\": \"Edit/Sox/To Mono and Resample\", \"name\": \"sox_mixres\"}]\n#\n# xterm -bg black -hold -title MakeSFZ -font 9x15 -e \"mkdir -pv %D/converted && sox %F -r 48k %d/converted/%N\"\n",
      "path": "/roles/deadbeef/tasks/"
    },
    {
      "filename": "main.yml",
      "content": "---\n# vars file for deadbeef\n",
      "path": "/roles/deadbeef/vars/"
    },
    {
      "filename": "main.yml",
      "content": "---\n# defaults file for deadbeef\npackages:\n  - deadbeef\n",
      "path": "/roles/deadbeef/defaults/"
    },
    {
      "filename": "main.yml",
      "content": "galaxy_info:\n  author: your name\n  description: your role description\n  company: your company (optional)\n\n  # If the issue tracker for your role is not on github, uncomment the\n  # next line and provide a value\n  # issue_tracker_url: http://example.com/issue/tracker\n\n  # Choose a valid license ID from https://spdx.org - some suggested licenses:\n  # - BSD-3-Clause (default)\n  # - MIT\n  # - GPL-2.0-or-later\n  # - GPL-3.0-only\n  # - Apache-2.0\n  # - CC-BY-4.0\n  license: license (GPL-2.0-or-later, MIT, etc)\n\n  min_ansible_version: 2.1\n\n  # If this a Container Enabled role, provide the minimum Ansible Container version.\n  # min_ansible_container_version:\n\n  #\n  # Provide a list of supported platforms, and for each platform a list of versions.\n  # If you don't wish to enumerate all versions for a particular platform, use 'all'.\n  # To view available platforms and versions (or releases), visit:\n  # https://galaxy.ansible.com/api/v1/platforms/\n  #\n  # platforms:\n  # - name: Fedora\n  #   versions:\n  #   - all\n  #   - 25\n  # - name: SomePlatform\n  #   versions:\n  #   - all\n  #   - 1.0\n  #   - 7\n  #   - 99.99\n\n  galaxy_tags: []\n    # List tags for your role here, one per line. A tag is a keyword that describes\n    # and categorizes the role. Users find roles by searching for tags. Be sure to\n    # remove the '[]' above, if you add tags to this list.\n    #\n    # NOTE: A tag is limited to a single word comprised of alphanumeric characters.\n    #       Maximum 20 tags per role.\n\ndependencies: []\n  # List your role dependencies here, one per line. Be sure to remove the '[]' above,\n  # if you add dependencies to this list.\n",
      "path": "/roles/sonic-pi/meta/"
    },
    {
      "filename": "main.yml",
      "content": "---\n# handlers file for sonic-pi\n",
      "path": "/roles/sonic-pi/handlers/"
    },
    {
      "filename": "test.yml",
      "content": "---\n- hosts: localhost\n  remote_user: root\n  roles:\n    - sonic-pi\n",
      "path": "/roles/sonic-pi/tests/"
    },
    {
      "filename": "main.yml",
      "content": "---\n# tasks file for sonic-pi\n\n- name: Sonic-Pi Tasks\n  debug:\n    msg: \"Starting Sonic-Pi tasks\"\n\n- name: Set configs\n  template:\n    src: \"{{ item }}.j2\"\n    dest: \"{{ user.home }}/.sonic-pi/{{ item }}\"\n    owner: \"{{ user.name }}\"\n    group: \"{{ user.group }}\"\n    mode: '0644'\n    backup: yes\n  with_items:\n    - audio-settings.toml\n    - colour-theme.properties\n    - init.rb\n\n- name: Install helpers and snippets\n  copy:\n    src: helpers/\n    dest: \"{{ user.home }}/.sonic-pi/\"\n    owner: \"{{ user.name }}\"\n    group: \"{{ user.group }}\"\n    mode: '0644'\n    backup: yes\n    # directory_mode:\n\n- name: Clone ziffers repository\n  git:\n    repo:\n    dest: \"{{ user.home }}/.sonic-pi/ziffers\"\n    recursive: yes\n    accept_hostkey: yes\n    update: no\n    force: no\n  check_mode: no\n",
      "path": "/roles/sonic-pi/tasks/"
    },
    {
      "filename": "main.yml",
      "content": "---\n# vars file for sonic-pi\n",
      "path": "/roles/sonic-pi/vars/"
    },
    {
      "filename": "main.yml",
      "content": "---\n# defaults file for sonic-pi\n\npackages:\n  - sonic-pi-git\n",
      "path": "/roles/sonic-pi/defaults/"
    },
    {
      "filename": "main.yml",
      "content": "galaxy_info:\n  author: your name\n  description: your role description\n  company: your company (optional)\n\n  # If the issue tracker for your role is not on github, uncomment the\n  # next line and provide a value\n  # issue_tracker_url: http://example.com/issue/tracker\n\n  # Choose a valid license ID from https://spdx.org - some suggested licenses:\n  # - BSD-3-Clause (default)\n  # - MIT\n  # - GPL-2.0-or-later\n  # - GPL-3.0-only\n  # - Apache-2.0\n  # - CC-BY-4.0\n  license: license (GPL-2.0-or-later, MIT, etc)\n\n  min_ansible_version: 2.1\n\n  # If this a Container Enabled role, provide the minimum Ansible Container version.\n  # min_ansible_container_version:\n\n  galaxy_tags: []\n    # List tags for your role here, one per line. A tag is a keyword that describes\n    # and categorizes the role. Users find roles by searching for tags. Be sure to\n    # remove the '[]' above, if you add tags to this list.\n    #\n    # NOTE: A tag is limited to a single word comprised of alphanumeric characters.\n    #       Maximum 20 tags per role.\n\ndependencies: []\n  # List your role dependencies here, one per line. Be sure to remove the '[]' above,\n  # if you add dependencies to this list.\n",
      "path": "/roles/applications/meta/"
    },
    {
      "filename": "main.yml",
      "content": "---\n# handlers file for utils\n",
      "path": "/roles/applications/handlers/"
    },
    {
      "filename": "test.yml",
      "content": "---\n- hosts: localhost\n  remote_user: root\n  roles:\n    - utils\n",
      "path": "/roles/applications/tests/"
    },
    {
      "filename": "thunar.yml",
      "content": "---\n\n- name: Ensure Thunar config directory exists\n  file:\n    path: \"{{ user.home }}/.config/Thunar\"\n    state: directory\n    owner: \"{{ user.name }}\"\n    group: \"{{ user.group }}\"\n    recurse: false\n\n- name: Install Thunar actions\n  copy:\n    src: \"Thunar/{{ item }}\"\n    dest: \"{{ user.home }}/.config/Thunar/{{ item }}\"\n    mode: '0644'\n    backup: yes\n  with_items:\n    - accels.scm\n    - uca.xml\n  tags: ['thunar']\n\n- name: Set Thunar as default for opening directories\n  shell: xdg-mime default thunar.desktop inode/directory\n  become_user: \"{{ user.name }}\"\n  tags: ['thunar']\n",
      "path": "/roles/applications/tasks/"
    },
    {
      "filename": "packages.yml",
      "content": "---\n\n- name: install applications packages\n  aur:\n    use: paru\n    name: \"{{ applications__packages }}\"\n    state: present\n  become: False\n  when: ansible_os_family == \"Archlinux\"\n  tags: ['packages']\n",
      "path": "/roles/applications/tasks/"
    },
    {
      "filename": "codepackager.yml",
      "content": "---\n\n- name: install jq package\n  package:\n    name: jq\n\n- name: Install code-packager\n  copy:\n    src: bin/code-packager\n    dest: /usr/local/bin/code-packager\n    mode: '0755'\n",
      "path": "/roles/applications/tasks/"
    },
    {
      "filename": "redshift.yml",
      "content": "---\n#  - dest: \".config/redshift\"\n\n- name: Set redshift config\n  copy:\n    src: redshift/redshift.conf\n    dest: \"{{ user.home }}/.config/redshift/redshift.conf\"\n    owner: \"{{ user.name }}\"\n    group: \"{{ user.group }}\"\n    mode: '0644'\n    backup: False\n  tags: ['redshift']\n",
      "path": "/roles/applications/tasks/"
    },
    {
      "filename": "teiler.yml",
      "content": "---\n\n- name: Set teiler profiles\n  copy:\n    src: teiler\n    dest: \"{{ user.home }}/.config/\"\n    owner: \"{{ user.name }}\"\n    group: \"{{ user.group }}\"\n    backup: false\n\n- name: Set teiler config\n  template:\n    src: teiler/config.j2\n    dest: \"{{ user.home }}/.config/teiler/config\"\n    owner: \"{{ user.name }}\"\n    group: \"{{ user.group }}\"\n    mode: '0644'\n    backup: false\n",
      "path": "/roles/applications/tasks/"
    },
    {
      "filename": "main.yml",
      "content": "---\n\n- name: Utillity Tasks\n  debug:\n    msg: \"Starting utilities tasks\"\n\n- import_tasks:\n    file: packages.yml\n  tags: ['packages']\n\n- name: Ensure utillity config folders exist\n  file:\n    path: \"{{ user.home }}/.config/{{ item }}\"\n    state: directory\n    owner: \"{{ user.name }}\"\n    group: \"{{ user.group }}\"\n  loop:\n    - ranger\n    - redshift\n    - teiler\n\n- import_tasks:\n    file: codepackager.yml\n  tags: ['codepackager']\n\n- import_tasks:\n    file: \"thunar.yml\"\n  tags: ['thunar']\n\n- import_tasks:\n    file: redshift.yml\n  tags: ['redshift']\n\n- import_tasks:\n    file: teiler.yml\n  tags: ['teiler']\n",
      "path": "/roles/applications/tasks/"
    },
    {
      "filename": "main.yml",
      "content": "---\n# vars file for utils\n",
      "path": "/roles/applications/vars/"
    },
    {
      "filename": "main.yml",
      "content": "---\n# defaults file for utils\n\napplications__packages:\n  # - antimicrox\n  # - calibre\n  # - flashfocus\n  # - gconf\n  # - gksu\n  # - jupyter-nbconvert\n  # - nwg-wrapper\n  # - qutebrowser\n  - arandr\n  - broot\n  - btop\n  - calcurse\n  - cbonsai\n  - dconf\n  - devdocs-desktop\n  - dunst\n  - feh\n  - gedit\n  - gedit-markdownpreview-git\n  - gedit-plugins\n  - gedit-smart-home\n  - geoclue\n  - gnu-free-fonts\n  - google-chrome\n  - gpick\n  - gtk-update-icon-cache\n  - gucharmap\n  - gummi\n  - gvfs-smb\n  - imv\n  - keepassxc\n  - maim\n  - metagedit-git\n  - mpv\n  - nitrogen\n  - nvtop\n  - obsidian\n  - openscad\n  - openslide\n  - pgmodeler\n  - qpdfview\n  - radiotray-ng\n  - seahorse\n  - shotcut\n  - sxiv\n  - thunar\n  - thunar-archive-plugin\n  - thunar-volman\n  - timeshift\n  - vlc\n  - wmfocus\n  - wordnet-tk\n  - zenity\n",
      "path": "/roles/applications/defaults/"
    },
    {
      "filename": "main.yml",
      "content": "galaxy_info:\n  author: your name\n  description: your role description\n  company: your company (optional)\n\n  license: MIT\n\n  min_ansible_version: \"2.1\"\n\n  # If this a Container Enabled role, provide the minimum Ansible Container version.\n  # min_ansible_container_version:\n\n  platforms:\n    - name: ArchLinux\n      versions:\n        - all\n    #- name: Fedora\n    #  versions:\n    #    - \"9.3\"\n    #- name: Fedora\n    #  versions:\n    #    - \"37\"\n    #- name: Debian\n    #  versions:\n    #    - \"bookworm\"\n\n  galaxy_tags:\n    - linux-audio\n\ndependencies:  []\n  # - common\n  # - ruby\n  # - terminal\n  # - audio\n  # - network\n",
      "path": "/roles/theme/meta/"
    },
    {
      "filename": "main.yml",
      "content": "---\n# handlers file for desktop\n",
      "path": "/roles/theme/handlers/"
    },
    {
      "filename": "test.yml",
      "content": "---\n- hosts: localhost\n  remote_user: root\n  roles:\n    - desktop\n",
      "path": "/roles/theme/tests/"
    },
    {
      "filename": "packages.yml",
      "content": "---\n\n- name: Install Theme packages\n  aur:\n    use: paru\n    name: \"{{ theme__packages }}\"\n    state: present\n    extra_args: \"--overwrite '*'\"\n  become: False\n  when: ansible_os_family == \"Archlinux\"\n",
      "path": "/roles/theme/tasks/"
    },
    {
      "filename": "fonts.yml",
      "content": "---\n\n- name: Ensure /usr/local/share fonts exists\n  file:\n    path: /usr/local/share/fonts\n    state: directory\n    owner: root\n    group: root\n    recurse: True\n  register: fontsdir\n\n- name: Extract fonts to /usr/local/share/fonts\n  unarchive:\n    src: usr/local/share/fonts.tar.gz\n    dest: \"/usr/local/share/fonts\"\n  when: fontsdir.changed\n  ignore_errors: \"{{ ansible_check_mode }}\"\n\n# - name: Install fonts.conf\n#   copy:\n#     src: home/.config/fontconfig/fonts.conf\n#     dest: \"{{ user.home }}/.config/fontconfig/fonts.conf\"\n#     owner: \"{{ user.name }}\"\n#     group: \"{{ user.group }}\"\n#     mode: '0644'\n#     backup: yes\n#   tags: ['fonts']\n#\n- name: Update font-cache\n  command: fc-cache -fv\n  register: font_cache\n  changed_when: font_cache.rc != 0\n",
      "path": "/roles/theme/tasks/"
    },
    {
      "filename": "icons.yml",
      "content": "---\n\n- name: Install pixmaps\n  copy:\n    src: \"usr/local/share/pixmaps/\"\n    dest: \"/usr/local/share/pixmaps/\"\n    directory_mode: yes\n    mode: '0644'\n\n- name: Ensure /usr/local/share icons exists\n  file:\n    path: /usr/local/share/icons\n    state: directory\n    owner: root\n    group: root\n    recurse: True\n  register: iconsdir\n\n- name: Extract soundbot theme icons into /usr/local/share/icons\n  unarchive:\n    src: \"usr/local/share/icons/{{ item }}\"\n    dest: \"/usr/local/share/icons\"\n  with_items:\n    - oomox-soundbot_icons.tar.xz\n    - ArchLabs-Dark.tar.gz\n    - ArchLabs-Light.tar.gz\n  ignore_errors: \"{{ ansible_check_mode }}\"\n  when: iconsdir.changed\n\n- name: Update the icon cache\n  command: bash -lc \"gtk-update-icon-cache\"\n  register: icon_cache\n  changed_when: icon_cache.rc !=0\n  when: iconsdir.changed\n  tags: ['icons']\n",
      "path": "/roles/theme/tasks/"
    },
    {
      "filename": "main.yml",
      "content": "---\n# tasks file for desktop\n- name: Collect only selected facts\n  setup:\n    filter:\n      - 'ansible_processor'\n\n- name: Theme Tasks\n  debug:\n    msg: \"Starting theme tasks!\"\n\n- import_tasks:\n    file: packages.yml\n  tags: ['packages']\n\n- name: Ensure theme directories exist\n  file:\n    dest: \"{{ theme_directory_default_location }}/{{ item.dest }}\"\n    state: directory\n    owner: \"{{ item.owner | default(theme_directory_default_owner) }}\"\n    group: \"{{ item.group | default(theme_directory_default_group) }}\"\n    mode: \"{{ item.mode | default(theme_directory_default_mode) }}\"\n    recurse: \"{{ item.recurse | default(theme_directory_default_recurse) }}\"\n  with_items: \"{{ theme_directory_definitions }}\"\n  check_mode: no\n  tags: ['profile']\n\n- name: Copy theme package to temp\n  copy:\n    src: usr/local/share/themes/syncopated-theme-1.0-6-x86_64.pkg.tar.zst\n    dest: /tmp/syncopated-theme-1.0-6-x86_64.pkg.tar.zst\n  ignore_errors: \"{{ ansible_check_mode }}\"\n  tags: ['packages']\n\n- name: Install syncopated theme\n  pacman:\n    name: /tmp/syncopated-theme-1.0-6-x86_64.pkg.tar.zst\n    state: present\n    extra_args: --overwrite '*'\n  ignore_errors: \"{{ ansible_check_mode }}\"\n  tags: ['packages']\n\n# - import_tasks:\n#     file: fonts.yml\n#   tags: ['fonts']\n#\n# - import_tasks:\n#     file: icons.yml\n#   tags: ['icons']\n#\n# - name: Ensure /usr/local/share themes exists\n#   file:\n#     path: /usr/local/share/themes\n#     state: directory\n#     owner: root\n#     group: root\n#     recurse: True\n#   register: themesdir\n#\n# - name: Extract themes into /usr/local/share/themes\n#   unarchive:\n#     src: \"usr/local/share/themes/{{ item }}\"\n#     dest: \"/usr/local/share/themes\"\n#   with_items:\n#    - oomox-soundbot.tar.xz\n#    - ArchLabs-Dark.tar.gz\n#    - ArchLabs-Light.tar.gz\n#   ignore_errors: \"{{ ansible_check_mode }}\"\n#   when: themesdir.changed\n\n\n- name: Install sxhkd reload function\n  copy:\n    content: |\n      # DO NOT EDIT! This file will be overwritten by LXAppearance.\n      # Any customization should be done in ~/.gtkrc-2.0.mine instead.\n      gtk-theme-name=\"{{ gtk.theme.name }}\"\n      gtk-icon-theme-name=\"{{ gtk.theme.icons }}\"\n      gtk-font-name=\"{{ font.primary.name }} {{ font.primary.size }}\"\n      gtk-cursor-theme-name=\"{{ gtk.theme.cursor }}\"\n      gtk-cursor-theme-size=0\n      gtk-toolbar-style=GTK_TOOLBAR_BOTH\n      gtk-toolbar-icon-size=GTK_ICON_SIZE_MENU\n      gtk-button-images=1\n      gtk-menu-images=1\n      gtk-enable-event-sounds=1\n      gtk-enable-input-feedback-sounds=1\n      gtk-xft-antialias=1\n      gtk-xft-hinting=1\n      gtk-xft-hintstyle=\"hintfull\"\n      gtk-xft-rgba=\"rgb\"\n    dest: \"{{ user.home }}/.gtkrc-2.0\"\n    owner: \"{{ user.name }}\"\n    mode: '0644'\n\n- name: Install gtk configurations\n  template:\n    src: \"{{ item }}.j2\"\n    dest: \"{{ user.home }}/.config/{{ item }}\"\n    owner: \"{{ user.name }}\"\n    group: \"{{ user.group }}\"\n    mode: '0644'\n    backup: yes\n  with_items:\n    - 'gtk-3.0/bookmarks'\n    - 'gtk-3.0/gtk.css'\n    - 'gtk-3.0/settings.ini'\n    - 'gtk-4.0/settings.ini'\n  tags: ['profile', 'gtk']\n\n- name: Install qt configurations\n  template:\n    src: \"{{ item }}.j2\"\n    dest: \"{{ user.home }}/.config/{{ item }}\"\n    owner: \"{{ user.name }}\"\n    group: \"{{ user.group }}\"\n    mode: '0644'\n    backup: yes\n  with_items:\n    - 'Kvantum/kvantum.kvconfig'\n    - 'qt5ct/colors/syncopated.conf'\n    - 'qt5ct/qt5ct.conf'\n    - 'qt6ct/colors/syncopated.conf'\n    - 'qt6ct/qt6ct.conf'\n  tags: ['profile', 'qt']\n\n- name: Create syncopated backgrounds folder\n  file:\n    path: /usr/share/backgrounds/syncopated\n    state: directory\n    mode: '0755'\n    group: \"{{ user.group }}\"\n\n- name: Install backgrounds\n  synchronize:\n    src: \"usr/share/backgrounds/syncopated/\"\n    dest: \"/usr/share/backgrounds/syncopated/\"\n    recursive: yes\n    mode: push\n    delete: no\n    rsync_opts:\n      - \"--update\"\n      - \"--backup\"\n      - \"--suffix={{ suffix }}\"\n  ignore_errors: \"{{ ansible_check_mode }}\"\n  tags: ['backgrounds']\n",
      "path": "/roles/theme/tasks/"
    },
    {
      "filename": "main.yml",
      "content": "---\n# vars file for desktop\n\nexpected_value: \"role_desktop_varsMain.yml\"\n",
      "path": "/roles/theme/vars/"
    },
    {
      "filename": "main.yml",
      "content": "---\n# defaults file for desktop\n\n# The default directory permission mode when creating directories using `theme_directory_definitions`\ntheme_directory_default_mode: '0750'\n\n# The default directory owner when creating directories using `theme_directory_definitions`\ntheme_directory_default_owner: \"{{ user.name }}\"\n\n# The default directory group when creating directories using `theme_directory_definitions`\ntheme_directory_default_group: \"{{ user.group }}\"\n\ntheme_directory_default_location: \"{{ user.home }}\"\n\ntheme_directory_default_recurse: False\n\ntheme_directory_definitions:\n  # - dest: \".config/fontconfig\"\n  - dest: \".config/gtk-3.0\"\n  - dest: \".config/gtk-4.0\"\n  - dest: \".config/qt5ct\"\n  - dest: \".config/qt6ct\"\n  - dest: \".config/qt5ct/colors\"\n  - dest: \".config/qt6ct/colors\"\n  - dest: \".config/Kvantum\"\n\ntheme__packages:\n  # - kvantum-theme-nordic-git\n  # - syncopated-theme\n  # - ttf-tw\n  - arc-icon-theme\n  - awesome-terminal-fonts\n  - breeze-gtk\n  - cantarell-fonts\n  - gedit-dark-variant\n  - kvantum\n  - kvantum-qt5\n  - kvantum-theme-matcha\n  - matcha-gtk-theme\n  - mojave-gtk-theme\n  - noto-color-emoji-fontconfig\n  - noto-fonts\n  - noto-fonts-cjk\n  - noto-fonts-emoji\n  - numix-circle-icon-theme-git\n  - numix-icon-theme-git\n  - open-chinese-fonts\n  - opendesktop-fonts\n  - qscintilla-qt5\n  - qt5-base\n  - qt5-declarative\n  - qt5-graphicaleffects\n  - qt5-location\n  - qt5-quickcontrols2\n  - qt5-tools\n  - qt5-x11extras\n  - qt5ct\n  - qt6-base\n  - qt6-declarative\n  - qt6-multimedia\n  - qt6-tools\n  - qt6ct\n  - ttf-bitstream-vera\n  - ttf-dejavu\n  - ttf-devicons\n  - ttf-firacode-nerd\n  - ttf-font-awesome\n  - ttf-input\n  - ttf-jetbrains-mono\n  - ttf-liberation\n  - ttf-meslo-nerd\n  - ttf-opensans\n  - ttf-ubuntu-font-family\n",
      "path": "/roles/theme/defaults/"
    },
    {
      "filename": "main.yml",
      "content": "galaxy_info:\n  author: your name\n  description: your role description\n  company: your company (optional)\n\n  # If the issue tracker for your role is not on github, uncomment the\n  # next line and provide a value\n  # issue_tracker_url: http://example.com/issue/tracker\n\n  # Choose a valid license ID from https://spdx.org - some suggested licenses:\n  # - BSD-3-Clause (default)\n  # - MIT\n  # - GPL-2.0-or-later\n  # - GPL-3.0-only\n  # - Apache-2.0\n  # - CC-BY-4.0\n  license: license (GPL-2.0-or-later, MIT, etc)\n\n  min_ansible_version: 2.1\n\n  # If this a Container Enabled role, provide the minimum Ansible Container version.\n  # min_ansible_container_version:\n\n  galaxy_tags: []\n    # List tags for your role here, one per line. A tag is a keyword that describes\n    # and categorizes the role. Users find roles by searching for tags. Be sure to\n    # remove the '[]' above, if you add tags to this list.\n    #\n    # NOTE: A tag is limited to a single word comprised of alphanumeric characters.\n    #       Maximum 20 tags per role.\n\ndependencies: []\n  # List your role dependencies here, one per line. Be sure to remove the '[]' above,\n  # if you add dependencies to this list.\n",
      "path": "/roles/pulseaudio/meta/"
    },
    {
      "filename": "main.yml",
      "content": "---\n# handlers file for pulseaudio\n\n- name: restart pulseaudio\n  systemd:\n    name: \"{{ item }}\"\n    state: restarted\n    scope: user\n  with_items:\n    - pulseaudio.service\n    - pulseaudio.socket\n  environment:\n    XDG_RUNTIME_DIR: \"/run/user/{{ user.uid }}\"\n  become_user: \"{{ user.name }}\"\n  ignore_errors: \"{{ ansible_check_mode }}\"\n",
      "path": "/roles/pulseaudio/handlers/"
    },
    {
      "filename": "test.yml",
      "content": "---\n- hosts: localhost\n  remote_user: root\n  roles:\n    - pulseaudio\n",
      "path": "/roles/pulseaudio/tests/"
    },
    {
      "filename": "main.yml",
      "content": "---\n# tasks file for pulseaudio\n\n- name: Pulseaudio Tasks\n  debug:\n    msg: \"Starting pulseaudio tasks\"\n\n- name: Create pulseaudio user config folder\n  file:\n    path: \"{{ user.home }}/.config/pulse\"\n    state: directory\n    owner: \"{{ user.name }}\"\n    group: \"{{ user.group }}\"\n\n- name: Update pulseaudio configs\n  copy:\n    src: \"etc/pulse/{{ item }}\"\n    dest: \"{{ user.home }}/.config/pulse/{{ item }}\"\n    owner: \"{{ user.name }}\"\n    group: \"{{ user.group }}\"\n    mode: \"0644\"\n    backup: yes\n  with_items:\n    - client.conf\n    - daemon.conf\n    - default.pa\n    - system.pa\n\n- block:\n    - block:\n        - name: Install bluetooth packages\n          aur:\n            use: auto\n            name: \"{{ item }}\"\n            state: present\n          with_items:\n            - bluetooth-autoconnect\n            - bluez\n            - bluez-utils\n            - pulseaudio-bluetooth\n          become: False\n          when: ansible_os_family == 'Archlinux'\n\n      tags: [\"packages\"]\n\n    - name: Ensure default.pa.d exists\n      file:\n        path: /etc/pulse/default.pa.d\n        state: directory\n\n    - name: Install pulseaudio bluetooth config\n      copy:\n        src: etc/pulse/default.pa.d/bluetooth.pa\n        dest: /etc/pulse/default.pa.d/bluetooth.pa\n        mode: \"0644\"\n\n  when: use_bluetooth|bool\n  notify: restart pulseaudio\n  tags: [\"bluetooth\"]\n# - name: Adjust pulseaudio.service file\n#   lineinfile:\n#     path: /usr/lib/systemd/user/pulseaudio.service\n#     insertafter: '^Description'\n#     line: 'After=jack_control.service'\n#     backup: yes\n\n# - name: enable pulseaudio service\n#   systemd:\n#     name: \"{{ item }}\"\n#     enabled: yes\n#     scope: user\n#   with_items:\n#     - pulseaudio.service\n#     - pulseaudio.socket\n#   environment:\n#     XDG_RUNTIME_DIR: \"/run/user/{{ user.uid }}\"\n#   become_user: \"{{ user.name }}\"\n\n\n# - block:\n#     - name: Stop pulseaudio service\n#       systemd:\n#         name: \"{{ item }}\"\n#         state: stopped\n#         scope: user\n#       with_items:\n#         - pulseaudio.service\n#         - pulseaudio.socket\n#       environment:\n#         XDG_RUNTIME_DIR: \"/run/user/1000\"\n#       register: servicestat\n#       failed_when: \"not 'Could not find the requested service' in servicestat.msg and servicestat.rc != 0\"\n#       ignore_errors: \"{{ ansible_check_mode }}\"\n#\n#     # - name: Uninstall pulseaudio packages\n#     #   aur:\n#     #     use: paru\n#     #     name: \"{{ packages.pulseaudio }}\"\n#     #     state: absent\n#\n#   become: False\n",
      "path": "/roles/pulseaudio/tasks/"
    },
    {
      "filename": "main.yml",
      "content": "---\n# vars file for pulseaudio\n",
      "path": "/roles/pulseaudio/vars/"
    },
    {
      "filename": "main.yml",
      "content": "---\n# defaults file for pulseaudio\n\n# The default directory permission mode when creating directories using `pulse_directory_definitions`\npulse_directory_default_mode: '0755'\n\n# The default directory owner when creating directories using `pulse_directory_definitions`\npulse_directory_default_owner: \"{{ user.name }}\"\n\n# The default directory group when creating directories using `pulse_directory_definitions`\npulse_directory_default_group: \"{{ user.group }}\"\n\npulse_directory_default_location: \"{{ user.home }}\"\n\npulse_directory_default_recurse: False\n\npulse_directory_definitions:\n  - dest: \".config/pulse\"\n    mode: \"0700\"\n\nuse_bluetooth: False\n\npackages:\n  - pulseaudio-alsa\n  - pulseaudio-jack\n  - pulsemixer\n",
      "path": "/roles/pulseaudio/defaults/"
    },
    {
      "filename": "runtime.yml",
      "content": "---\n# Collections must specify a minimum required ansible version to upload\n# to galaxy\nrequires_ansible: '>=2.9.10'\n\n# Content that Ansible needs to load from another location or that has\n# been deprecated/removed\n# plugin_routing:\n#   action:\n#     redirected_plugin_name:\n#       redirect: ns.col.new_location\n#     deprecated_plugin_name:\n#       deprecation:\n#         removal_version: \"4.0.0\"\n#         warning_text: |\n#           See the porting guide on how to update your playbook to\n#           use ns.col.another_plugin instead.\n#     removed_plugin_name:\n#       tombstone:\n#         removal_version: \"2.0.0\"\n#         warning_text: |\n#           See the porting guide on how to update your playbook to\n#           use ns.col.another_plugin instead.\n#   become:\n#   cache:\n#   callback:\n#   cliconf:\n#   connection:\n#   doc_fragments:\n#   filter:\n#   httpapi:\n#   inventory:\n#   lookup:\n#   module_utils:\n#   modules:\n#   netconf:\n#   shell:\n#   strategy:\n#   terminal:\n#   test:\n#   vars:\n\n# Python import statements that Ansible needs to load from another location\n# import_redirection:\n#   ansible_collections.ns.col.plugins.module_utils.old_location:\n#     redirect: ansible_collections.ns.col.plugins.module_utils.new_location\n\n# Groups of actions/modules that take a common set of options\n# action_groups:\n#   group_name:\n#     - module1\n#     - module2\n",
      "path": "/meta/"
    },
    {
      "filename": "homepage.yml",
      "content": "---\n\n- hosts: all\n  become: True\n  gather_subset:\n    - hardware\n    - network\n  vars:\n    path:\n      - \"{{ lookup('env','HOME') }}/.local/bin\"\n  environment:\n    PATH: \"{{ ansible_env.PATH }}:/sbin:/bin:{{ path|join(':') }}\"\n    PKG_CONFIG_PATH: \"/usr/share/pkgconfig:/usr/lib/pkgconfig:/usr/local/lib/pkgconfig\"\n\n  pre_tasks:\n    - name: Set datetime\n      set_fact:\n        datetime: ansible_date_time.epoch\n      tags: [\"always\"]\n\n    - name: Set suffix\n      set_fact:\n        suffix: \".{{ ansible_date_time.epoch }}.{{ ansible_date_time.date }}@{{ ansible_date_time.time }}~\"\n      tags: [\"always\"]\n\n  roles:\n\n    - role: homepage\n      tags: [\"homepage\"]\n\n  post_tasks:\n    - name: Cleanup old backup files\n      script: \"cleanup.sh\"\n      when: cleanup is defined\n      tags: [\"cleanup\"]\n",
      "path": "/playbooks/"
    },
    {
      "filename": "virt.yml",
      "content": "---\n- hosts: llmops\n  become: True\n  gather_facts: yes\n  vars:\n    path:\n      - \"{{ lookup('env','HOME') }}/.asdf/bin\"\n      - \"{{ lookup('env','HOME') }}/.local/bin\"\n      - \"{{ lookup('env','HOME') }}/Utils/bin\"\n  environment:\n    PATH: \"{{ ansible_env.PATH }}:/sbin:/bin:{{ path|join(':') }}\"\n\n  roles:\n\n    - role: docker\n      when: use_docker == True\n      tags: [\"docker\"]\n\n    - role: libvirt\n      when: use_libvirt == True\n      tags: [\"libvirt\"]\n",
      "path": "/playbooks/"
    },
    {
      "filename": "utils.yml",
      "content": "---\n- hosts: all\n  become: False\n  gather_subset:\n    - hardware\n    - network\n  vars:\n    branch: \"main\"\n    path:\n      - \"{{ lookup('env','HOME') }}/.local/bin\"\n  environment:\n    PATH: \"{{ ansible_env.PATH }}:/sbin:/bin:{{ path|join(':') }}\"\n    PKG_CONFIG_PATH: \"/usr/share/pkgconfig:/usr/lib/pkgconfig:/usr/local/lib/pkgconfig\"\n\n  pre_tasks:\n    - name: Set datetime\n      set_fact:\n        datetime: ansible_date_time.epoch\n      tags: [\"always\"]\n\n    - name: Set suffix\n      set_fact:\n        suffix: \".{{ ansible_date_time.epoch }}.{{ ansible_date_time.date }}@{{ ansible_date_time.time }}~\"\n      tags: [\"always\"]\n\n  tasks:\n    - name: Clone Utils Repository\n      git:\n        repo: git@github.com:b08x/Utils.git\n        dest: \"{{ user.home }}/Utils\"\n        recursive: yes\n        accept_hostkey: yes\n        force: no\n        version: main\n    #   register: utilsClone\n    #   changed_when: utilsClone.before != \"null\"\n    #\n    # - setup:\n    # - debug:\n    #     msg: \"{{ utilsClone.before }}\"\n    #   tags: ['always']\n\n    - name: Checkout development Branch\n      git:\n        repo: git@github.com:b08x/Utils.git\n        dest: \"{{ user.home }}/Utils\"\n        version: development\n      when: branch == 'development'\n",
      "path": "/playbooks/"
    },
    {
      "filename": "nas.yml",
      "content": "---\n- hosts: all\n  become: True\n  gather_subset:\n    - hardware\n    - network\n  vars:\n    path:\n      - \"{{ lookup('env','HOME') }}/.local/bin\"\n  environment:\n    PATH: \"{{ ansible_env.PATH }}:/sbin:/bin:{{ path|join(':') }}\"\n    PKG_CONFIG_PATH: \"/usr/share/pkgconfig:/usr/lib/pkgconfig:/usr/local/lib/pkgconfig\"\n    ZSH: \"/usr/share/oh-my-zsh\"\n    DISPLAY: \":0\"\n\n  roles:\n    - role: nas\n      tags: [\"nas\"]\n",
      "path": "/playbooks/"
    },
    {
      "filename": "daw.yml",
      "content": "- hosts: daw\n  become: True\n  gather_facts: yes\n  vars:\n    path:\n      - \"{{ lookup('env','HOME') }}/.asdf/bin\"\n      - \"{{ lookup('env','HOME') }}/.local/bin\"\n      - \"{{ lookup('env','HOME') }}/Utils/bin\"\n  environment:\n    PATH: \"{{ ansible_env.PATH }}:/sbin:/bin:{{ path|join(':') }}\"\n\n  roles:\n\n    - role: tuning\n      tags: [\"tunig\"]\n\n    - role: alsa\n      tags: [\"alsa\"]\n\n    - role: jackd\n      tags: [\"jackd\"]\n\n    - role: pulseaudio\n      tags: [\"pulseaudio\"]\n\n    - role: pipewire\n      tags: [\"pipewire\"]\n\n    - role: daw\n      tags: [\"daw\"]\n",
      "path": "/playbooks/"
    },
    {
      "filename": "webhost.yml",
      "content": "---\n\n- name: setup ngninx host\n  hosts: webhost\n  strategy: free\n  gather_subset:\n    - hardware\n    - network\n  vars:\n    path:\n      - \"{{ lookup('env','HOME') }}/.local/bin\"\n      - \"{{ lookup('env','HOME') }}/.cargo/bin\"\n      - \"{{ lookup('env','HOME') }}/.local/share/gem/ruby/3.0.0/bin\"\n\n  environment:\n    PATH: \"{{ ansible_env.PATH }}:/sbin:/bin:{{ path|join(':') }}\"\n    PKG_CONFIG_PATH: \"/usr/share/pkgconfig:/usr/lib/pkgconfig:/usr/local/lib/pkgconfig\"\n    ZSH: \"/usr/local/share/oh-my-zsh\"\n\n  roles:\n    - role: nginx\n      become: True\n      tags: ['nginx']\n",
      "path": "/playbooks/systems/"
    },
    {
      "filename": "packager.yml",
      "content": "---\n\n- name: setup build host\n  hosts: localhost\n  become: True\n  gather_subset:\n    - hardware\n    - network\n  vars_files:\n    - ../vars/packager/user.yml\n  vars:\n\n    repository_urls:\n      - http://syncopated.hopto.org/repo/\n      - http://bender.syncopated.net/repo/\n\n    path:\n      - \"{{ lookup('env','HOME') }}/.local/share/gem/ruby/3.0.0/bin\"\n      - \"{{ lookup('env','HOME') }}/.local/bin\"\n      - \"{{ lookup('env','HOME') }}/.cargo/bin\"\n\n  pre_tasks:\n\n    - name: Set admin group name\n      set_fact:\n        admin_group: wheel\n      tags: ['always']\n\n    - name: set packager_workspace fact\n      set_fact:\n        packager_workspace: \"{{ packager.workspace }}\"\n\n\n    - block:\n        - name: check -march support\n          shell: /lib/ld-linux-x86-64.so.2 --help | grep supported|xargs|awk '{print $1}'\n          register: supported_march\n\n        - name: check output from grep command\n          debug:\n            msg: \"{{ supported_march }}\"\n\n        - name: set architecture\n          set_fact:\n            architecture: \"x86-64-v3\"\n          when: supported_march.stdout_lines[0] == 'x86-64-v3'\n\n        - name: set architecture\n          set_fact:\n            architecture: \"x86-64\"\n          when: supported_march.stdout_lines[0] == 'x86-64-v2'\n\n      ignore_errors: \"{{ ansible_check_mode }}\"\n      tags: ['flags']\n\n  roles:\n\n    - role: pkgbuild\n    # - role: rpm\n",
      "path": "/playbooks/systems/"
    },
    {
      "filename": "database.yml",
      "content": "---\n- hosts:\n  become: True\n  gather_subset:\n    - hardware\n    - network\n  vars:\n    data: \"{{ user.home }}/LLMOS\"\n    path:\n      - \"{{ lookup('env','HOME') }}/.local/bin\"\n    redis: False\n    pgvector: False\n    chromadb: False\n  environment:\n    PATH: \"{{ ansible_env.PATH }}:/sbin:/bin:{{ path|join(':') }}\"\n    PKG_CONFIG_PATH: \"/usr/share/pkgconfig:/usr/lib/pkgconfig:/usr/local/lib/pkgconfig\"\n\n  pre_tasks:\n    - name: warn about setting ANSIBLE_HOME\n      debug:\n        msg: \"besure ANSIBLE_HOME is set to this directory\"\n      tags: [\"always\"]\n\n    - name: Set datetime\n      set_fact:\n        datetime: ansible_date_time.epoch\n      tags: [\"always\"]\n\n    - name: Set suffix\n      set_fact:\n        suffix: \".{{ ansible_date_time.epoch }}.{{ ansible_date_time.date }}@{{ ansible_date_time.time }}~\"\n      tags: [\"always\"]\n",
      "path": "/playbooks/systems/"
    },
    {
      "filename": "pihole.yml",
      "content": "---\n- hosts: pihole\n  tags: ['pihole']\n  become: True\n  gather_subset:\n    - hardware\n    - network\n  # vars_files:\n  #   - ../vars/Archlinux/packages.yml\n  #   - ../vars/theme.yml\n  vars:\n    path:\n      - \"{{ lookup('env','HOME') }}/.local/bin\"\n      - \"{{ lookup('env','HOME') }}/.asdf/bin\"\n  environment:\n    PATH: \"{{ ansible_env.PATH }}:/sbin:/bin:{{ path|join(':') }}\"\n    PKG_CONFIG_PATH: \"/usr/share/pkgconfig:/usr/lib/pkgconfig:/usr/local/lib/pkgconfig\"\n    ZSH: \"/usr/share/oh-my-zsh\"\n    DISPLAY: \":0\"\n\n  pre_tasks:\n    - name: show expected_value\n      debug:\n        var: ansible_facts[\"date_time\"][\"epoch\"]\n      tags: ['always']\n      # the task will run if `check_mode` to 'no'\n    - name: Register timestamp\n      shell: 'date +\"%Y%m%d_%H%M%S\"'\n      register: timestamp\n      check_mode: no\n      tags: ['always']\n\n    - name: Set suffix\n      set_fact:\n        suffix: \"{{ timestamp.stdout_lines[0] }}\"\n      tags: ['always']\n\n  roles:\n    - role: docker\n      tags: [\"docker\"]\n\n\n#docker network create -d macvlan -o parent=eno1 \\\\n--subnet 192.168.41.0/24 --gateway 192.168.41.1 \\\\n--ip-range 192.168.41.40/28 \\\\n--aux-address 'host=192.168.41.40' \\\\nmacvlan0\n",
      "path": "/playbooks/systems/"
    },
    {
      "filename": "workstation.yml",
      "content": "---\n- hosts: workstation\n  become: True\n  gather_facts: yes\n  vars:\n    path:\n      - \"{{ lookup('env','HOME') }}/.asdf/bin\"\n      - \"{{ lookup('env','HOME') }}/.local/bin\"\n      - \"{{ lookup('env','HOME') }}/Utils/bin\"\n  environment:\n    PATH: \"{{ ansible_env.PATH }}:/sbin:/bin:{{ path|join(':') }}\"\n\n  roles:\n\n    - role: input-remapper\n      tags: [\"input-remapper\"]\n\n    - role: x11\n      tags: [\"x11\"]\n\n    - role: terminal\n      tags: [\"terminal\"]\n\n    - role: xdg\n      tags: [\"xdg\"]\n\n    - role: rofi\n      tags: [\"rofi\"]\n\n    - role: i3\n      tags: [\"i3\"]\n\n    - role: applications\n      tags: [\"applications\"]\n\n    - role: barrier\n      tags: [\"barrier\"]\n\n    - role: pulsar\n      tags: [\"pulsar\"]\n\n    - role: vscode\n      tags: [\"vscode\"]\n\n    - role: deadbeef\n      tags: [\"deadbeef\"]\n\n    - role: obs-studio\n      tags: [\"obs-studio\"]\n\n    - role: theme\n      tags: [\"theme\"]\n",
      "path": "/playbooks/"
    },
    {
      "filename": "base.yml",
      "content": "---\n- hosts: all\n  become: True\n  gather_facts: yes\n  vars:\n    path:\n      - \"{{ lookup('env','HOME') }}/.asdf/bin\"\n      - \"{{ lookup('env','HOME') }}/.local/bin\"\n      - \"{{ lookup('env','HOME') }}/Utils/bin\"\n  environment:\n    PATH: \"{{ ansible_env.PATH }}:/sbin:/bin:{{ path|join(':') }}\"\n    PKG_CONFIG_PATH: \"/usr/share/pkgconfig:/usr/lib/pkgconfig:/usr/local/lib/pkgconfig\"\n    ZSH: \"/usr/share/oh-my-zsh\"\n    DISPLAY: \":0\"\n  # variables from vars_files are available starting here...\n  pre_tasks:\n    # the task will run if `check_mode` to 'no'\n    - name: Register timestamp\n      shell: \"date +'%s.%Y-%m-%d@%H:%M:%S~'\"\n      register: timestamp\n      check_mode: no\n      tags: [\"always\"]\n\n    - name: Set suffix\n      set_fact:\n        suffix: \"{{ timestamp.stdout_lines[0] }}\"\n      tags: [\"always\"]\n\n    - name: Set distro name\n      set_fact:\n        ansible_distribution: \"{{ distro }}\"\n      when: distro is defined\n      tags: [\"always\", \"testing\"]\n\n    - name: Display distro name\n      debug:\n        msg: System {{ inventory_hostname }} has distro {{ ansible_distribution }}\n      tags: ['always']\n\n    - name: Symlink /etc/os-release to /etc/system-release\n      file:\n        src: /etc/os-release\n        dest: /etc/system-release\n        state: link\n\n    - name: Set admin group name\n      set_fact:\n        admin_group: wheel\n      tags: [\"always\"]\n\n    # to allow for ansible pipelining functionality\n    # https://docs.ansible.com/ansible/2.4/intro_configuration.html#pipelining\n    # while this requirement was removed in RHEL, many other distros leave this option enabled\n    - name: Disable requiretty for user so automation can run without interruption\n      lineinfile:\n        dest: /etc/sudoers\n        regexp: \"^Defaults    requiretty\"\n        line: \"Defaults:{{ user.name }}    !requiretty\"\n        backrefs: yes\n        backup: yes\n        validate: 'visudo -cf %s'\n      when: user.name != 'root'\n      tags: ['sudoers']\n\n  roles:\n\n    - role: base\n      tags: [\"base\"]\n\n    - role: user\n      tags: [\"user\"]\n\n    - role: shell\n      tags: [\"shell\"]\n\n    - role: sudoers\n      tags: [\"sudoers\"]\n\n    - role: ruby\n      tags: [\"ruby\"]\n\n    - role: networking\n      tags: [\"networking\"]\n",
      "path": "/playbooks/"
    },
    {
      "filename": "full.yml",
      "content": "---\n- hosts: all\n  become: True\n  gather_facts: yes\n  vars:\n    path:\n      - \"{{ lookup('env','HOME') }}/.asdf/bin\"\n      - \"{{ lookup('env','HOME') }}/.local/bin\"\n      - \"{{ lookup('env','HOME') }}/Utils/bin\"\n  environment:\n    PATH: \"{{ ansible_env.PATH }}:/sbin:/bin:{{ path|join(':') }}\"\n    PKG_CONFIG_PATH: \"/usr/share/pkgconfig:/usr/lib/pkgconfig:/usr/local/lib/pkgconfig\"\n    ZSH: \"/usr/share/oh-my-zsh\"\n    DISPLAY: \":0\"\n  # variables from vars_files are available starting here...\n  pre_tasks:\n    # the task will run if `check_mode` to 'no'\n    - name: Register timestamp\n      shell: \"date +'%s.%Y-%m-%d@%H:%M:%S~'\"\n      register: timestamp\n      check_mode: no\n      tags: [\"always\"]\n\n    - name: Set suffix\n      set_fact:\n        suffix: \"{{ timestamp.stdout_lines[0] }}\"\n      tags: [\"always\"]\n\n    - name: Set distro name\n      set_fact:\n        ansible_distribution: \"{{ distro }}\"\n      when: distro is defined\n      tags: [\"always\", \"testing\"]\n\n    - name: Display ansible_distribution\n      debug:\n        msg: |\n          The host {{ inventory_hostname }} has {{ ansible_distribution }} installed,\n          which belongs to the {{ ansible_os_family }} OS family\n      tags: ['always']\n\n    - name: Symlink /etc/os-release to /etc/system-release\n      file:\n        src: /etc/os-release\n        dest: /etc/system-release\n        state: link\n\n    - name: Set admin group name\n      set_fact:\n        admin_group: wheel\n      tags: [\"always\"]\n\n    # to allow for ansible pipelining functionality\n    # https://docs.ansible.com/ansible/2.4/intro_configuration.html#pipelining\n    # while this requirement was removed in RHEL, many other distros leave this option enabled\n    - name: Disable requiretty for user so automation can run without interruption\n      lineinfile:\n        dest: /etc/sudoers\n        regexp: \"^Defaults    requiretty\"\n        line: \"Defaults:{{ user.name }}    !requiretty\"\n        backrefs: yes\n        backup: yes\n        validate: 'visudo -cf %s'\n      when: user.name != 'root'\n      tags: ['sudoers']\n\n  roles:\n\n    - role: distro\n      tags: [\"distro\"]\n\n    - role: base\n      tags: [\"base\"]\n\n    - role: user\n      tags: [\"user\"]\n\n    - role: shell\n      tags: [\"shell\"]\n\n    - role: sudoers\n      tags: [\"sudoers\"]\n\n    - role: ruby\n      tags: [\"ruby\"]\n\n    - role: networking\n      tags: [\"networking\"]\n\n- hosts: virt\n  become: True\n  gather_facts: yes\n  vars:\n    path:\n      - \"{{ lookup('env','HOME') }}/.asdf/bin\"\n      - \"{{ lookup('env','HOME') }}/.local/bin\"\n      - \"{{ lookup('env','HOME') }}/Utils/bin\"\n  # environment:\n  #   PATH: \"{{ ansible_env.PATH }}:/sbin:/bin:{{ path|join(':') }}\"\n\n  roles:\n\n    - role: docker\n      when: use_docker == True\n      tags: [\"docker\"]\n\n    - role: libvirt\n      when: use_libvirt == True\n      tags: [\"libvirt\"]\n\n- hosts: workstation\n  become: True\n  gather_facts: yes\n  vars:\n    path:\n      - \"{{ lookup('env','HOME') }}/.asdf/bin\"\n      - \"{{ lookup('env','HOME') }}/.local/bin\"\n      - \"{{ lookup('env','HOME') }}/Utils/bin\"\n  # environment:\n  #   PATH: \"{{ ansible_env.PATH }}:/sbin:/bin:{{ path|join(':') }}\"\n\n  roles:\n\n    - role: input-remapper\n      tags: [\"input-remapper\", \"keybindings\"]\n\n    - role: x11\n      tags: [\"x11\"]\n\n    - role: sxhkd\n      tags: [\"sxhkd\", \"keybindings\"]\n\n    - role: terminal\n      tags: [\"terminal\"]\n\n    - role: xdg\n      tags: [\"xdg\"]\n\n    - role: rofi\n      tags: [\"rofi\"]\n\n    - role: i3\n      when: de is defined and window_manager == 'i3'\n      tags: [\"i3\", \"keybindings\"]\n\n    - role: applications\n      tags: [\"applications\"]\n\n    - role: barrier\n      tags: [\"barrier\"]\n\n    - role: pulsar\n      tags: [\"pulsar\"]\n\n    - role: vscode\n      tags: [\"vscode\"]\n\n    - role: deadbeef\n      tags: [\"deadbeef\"]\n\n    - role: obs-studio\n      tags: [\"obs-studio\"]\n\n    - role: theme\n      tags: [\"theme\"]\n\n- hosts: daw\n  become: True\n  gather_facts: yes\n  vars:\n    path:\n      - \"{{ lookup('env','HOME') }}/.asdf/bin\"\n      - \"{{ lookup('env','HOME') }}/.local/bin\"\n      - \"{{ lookup('env','HOME') }}/Utils/bin\"\n  # environment:\n  #   PATH: \"{{ ansible_env.PATH }}:/sbin:/bin:{{ path|join(':') }}\"\n\n  roles:\n\n    - role: tuning\n      tags: [\"tunig\"]\n\n    - role: alsa\n      tags: [\"alsa\"]\n\n    - role: jackd\n      tags: [\"jackd\"]\n\n    - role: pulseaudio\n      tags: [\"pulseaudio\"]\n\n    - role: pipewire\n      tags: [\"pipewire\"]\n\n    - role: daw\n      tags: [\"daw\"]\n\n\n  post_tasks:\n    - name: Cleanup old backup files\n      script: \"{{ lookup('env','HOME') }}/Utils/bin/cleanup.sh\"\n      when: cleanup is defined\n      tags: [\"cleanup\"]\n\n    - block:\n        - name: Reboot the host\n          reboot:\n            msg: \"Reboot initiated by Ansible\"\n            connect_timeout: 5\n            reboot_timeout: 300\n            pre_reboot_delay: 0\n            post_reboot_delay: 30\n            test_command: uptime\n\n      rescue:\n        # Do not assume the inventory_hostname is resolvable and delay 10 seconds at start\n        - name: Wait 600 seconds for port 22 to become open\"\n          ansible.builtin.wait_for:\n            port: 22\n            host: '{{ (ansible_ssh_host|default(ansible_host))|default(inventory_hostname) }}'\n            delay: 10\n            timeout: 600\n          connection: local\n\n      when: reboot is defined\n      tags: ['reboot']\n\n\n    - name: Reboot successful\n      debug:\n        msg: \"Reboot successful\"\n      tags: ['reboot']\n",
      "path": "/playbooks/"
    },
    {
      "filename": "audapolis.yml",
      "content": "---\n\n- name: Setup and Deploy Audapolis App\n  hosts: lapbot\n  become: False\n\n  vars:\n    repo_url: \"https://github.com/bugbakery/audapolis.git\"\n    project_dir: \"{{ lookup('env','HOME') }}/Workspace/audapolis\"\n    virtualenv_name: \"audapolisenv\"\n    # path:\n    #   - \"{{ lookup('env','HOME') }}/.pyenv/bin\"\n    #   - \"{{ lookup('env','HOME') }}/.pyenv/shims\"\n    pyrequirements:\n      - \"anyio==3.6.1\"\n      - \"appdirs==1.4.4\"\n      - \"certifi==2022.9.24\"\n      - \"cffi==1.15.1\"\n      - \"charset-normalizer==2.1.1\"\n      - \"click==8.1.3\"\n      - \"colorama==0.4.5\"\n      - \"fastapi==0.85.0\"\n      - \"h11==0.14.0\"\n      - \"httptools==0.5.0\"\n      - \"idna==3.4\"\n      - \"joblib==1.2.0\"\n      - \"numpy==1.23.3\"\n      # - \"opentimelineio==0.14.1\"\n      - \"pyaaf2==1.4.0\"\n      - \"pycparser==2.21\"\n      - \"pydantic==1.10.2\"\n      - \"pydiar==0.0.6\"\n      - \"pydub==0.25.1\"\n      - \"python-dotenv==0.21.0\"\n      - \"python-multipart==0.0.5\"\n      - \"python-speech-features==0.6\"\n      - \"pyyaml==6.0\"\n      - \"requests==2.28.1\"\n      - \"scikit-learn==1.1.2\"\n      - \"scipy==1.9.1\"\n      - \"setuptools==59.8.0\"\n      - \"six==1.16.0\"\n      - \"sniffio==1.3.0\"\n      - \"srt==3.5.2\"\n      - \"starlette==0.20.4\"\n      - \"threadpoolctl==3.1.0\"\n      - \"tqdm==4.64.1\"\n      - \"typing-extensions==4.3.0\"\n      - \"urllib3==1.26.12\"\n      - \"uvicorn[standard]==0.18.3\"\n      - \"uvloop==0.17.0\"\n      - \"vosk==0.3.44\"\n      - \"watchfiles==0.17.0\"\n      - \"webrtcvad==2.0.10\"\n      - \"websockets==10.3\"\n      - \"setuptools<60.0.0\"\n      - \"distutils\"\n  environment:\n    # PATH: \"{{ ansible_env.PATH }}:/sbin:/bin:{{ path|join(':') }}\"\n    ZSH: \"/usr/share/oh-my-zsh\"\n\n  pre_tasks:\n    - name: Gather system facts\n      setup:\n        gather_subset: network\n\n    - block:\n        - name: Install 'pyenv' (if not already installed)\n          shell: curl https://pyenv.run | bash\n\n        - name: Install 'pyenv-virtualenv' plugin\n          git:\n            repo: https://github.com/pyenv/pyenv-virtualenv.git\n            dest: \"{{ ansible_env.HOME }}/.pyenv/plugins/pyenv-virtualenv\"\n\n      when: ansible_facts['distribution'] != 'Archlinux'\n\n#    - name: Install 'pyenv' (Arch Linux)\n#      when: ansible_facts['distribution'] == 'Archlinux'\n#      aur:\n#        use: auto\n#        name: \"{{ item }}\"\n#        state: present\n#      with_items:\n#        - pyenv\n#        - pyenv-virtualenv\n#        - python-wheel\n#        - opentimelineio\n#        - python-distutils-extra\n\n    - name: Add pyenv configurations to shell (optional, recommended)\n      block:\n       - lineinfile:\n           path: \"{{ ansible_env.HOME }}/.zshrc\"  # Or .zshrc if Zsh is used\n           line: 'export PYENV_ROOT=\"$HOME/.pyenv\"'\n       - lineinfile:\n           path: \"{{ ansible_env.HOME }}/.zshrc\"  # Or .zshrc if Zsh is used\n           line: '[[ -d $PYENV_ROOT/bin ]] && export PATH=\"$PYENV_ROOT/bin:$PATH\"'\n       - lineinfile:\n           path: \"{{ ansible_env.HOME }}/.zshrc\"  # Or .zshrc if Zsh is used\n           line: 'eval \"$(pyenv init -)\"'\n\n  tasks:\n    - name: Clone Audapolis Repository\n      git:\n        repo: \"{{ repo_url }}\"\n        dest: \"{{ project_dir }}\"\n\n    - setup:\n    - debug:\n        msg: Installing Python 3.10.0\n\n    - name: check if 3.10.0 is already installed\n      stat:\n        path: \"{{ ansible_env.HOME }}/.pyenv/versions/3.10.0\"\n      register: python_check\n      ignore_errors: \"{{ ansible_check_mode }}\"\n\n    - name: Install Python 3.10\n      when: not python_check.stat.exists\n      shell: pyenv install 3.10.0\n      args:\n        chdir: \"{{ project_dir }}\"\n\n    - name: List existing Python virtualenvs\n      command: pyenv versions --bare\n      register: existing_venvs\n\n    - name: Check if Python Virtual Environment Already Exists\n      stat:\n        path: \"{{ ansible_env.HOME }}/.pyenv/versions/3.10.0/envs/audapolisenv\"\n      register: venv_check\n      ignore_errors: \"{{ ansible_check_mode }}\"\n\n    - name: Create Python Virtual Environment\n      when: not venv_check.stat.exists\n      shell: |\n        eval \"$(pyenv init -)\" && pyenv virtualenv 3.10.0 {{ virtualenv_name }}\n      args:\n        chdir: \"{{ project_dir }}\"\n\n    - name: Install Server Dependencies (poetry)\n      when: python_check.stat.exists\n      shell: |\n        eval \"$(pyenv init -)\" && pyenv activate {{ virtualenv_name }} && \\\n        pip install poetry opentimelineio\n      args:\n        chdir: \"{{ project_dir }}/server\"\n\n    - name: Install Server Dependencies (poetry)\n      shell: |\n        eval \"$(pyenv init -)\" && pyenv activate {{ virtualenv_name }} && \\\n        poetry install\n      args:\n        chdir: \"{{ project_dir }}/server\"\n\n    - name: Install requirements\n      when: python_check.stat.exists\n      shell: |\n        eval \"$(pyenv init -)\" && pyenv activate {{ virtualenv_name }} && \\\n        pip install --no-cache-dir \"{{ item }}\"\n      with_items: \"{{ pyrequirements }}\"\n      args:\n        chdir: \"{{ project_dir }}\"\n\n    - setup:\n    - debug:\n        msg: \"Installing App Dependencies...\"\n\n    - name: Install App Dependencies\n      npm:\n        path: \"{{ project_dir }}/app\"\n        state: present\n\n    # - name: Start Audapolis Server (in background)\n    #   shell: nohup poetry run uvicorn app.main:app --reload &\n    #   args:\n    #     chdir: \"{{ project_dir }}/server\"\n    #\n    # - name: Start Audapolis Electron App\n    #   shell: npm start\n    #   args:\n    #     chdir: \"{{ project_dir }}/app\"\n",
      "path": "/playbooks/applications/"
    },
    {
      "filename": "testplaybook.yml",
      "content": "---\n- hosts: test\n  become: True\n  gather_subset:\n    - hardware\n    - network\n  vars:\n    # expected_value will be overwritten in roles/base/vars/main.yml\n    expected_value: \"playbook_vars\"\n    \n  roles:\n    - role: test\n      tags: [\"test\"]\n\n    - role: base\n      tags: [\"base\"]\n\n    - role: terminal\n      tags: [\"terminal\"]\n\n    - role: network\n      tags: [\"network\"]\n\n    - role: ruby\n      tags: [\"ruby\"]\n\n    - role: alsa\n      tags: [\"audio\"]\n\n    - role: pipewire\n      tags: [\"pipewire\"]\n\n    - role: jack\n      tags: [\"audio\"]\n\n    - role: pulseaudio\n      tags: [\"audio\"]\n\n    - role: audio\n      tags: [\"audio\"]\n\n    - role: docker\n      tags: ['docker']\n\n    - role: libvirt\n      tags: ['libvirt']\n\n    - role: theme\n      tags: [\"theme\"]\n\n    - role: desktop\n      tags: ['desktop']\n\n    - role: user\n      tags: [\"user\"]\n\n    - role: applications\n      tags: ['applications']\n",
      "path": "/tests/"
    },
    {
      "filename": "packages.yml",
      "content": "---\n\npackages:\n  ruby:\n    - cmake\n    - libgit2-dev\n    - libopenslide-dev\n    - libssl-dev\n    - libvips-dev\n    - libyaml-dev\n    - openssl\n    - postgresql-server-dev-13\n    - ruby-dev\n  desktop:\n    - dmenu\n    - dunst\n    - feh\n    - fonts-dejavu\n    - fonts-liberation\n    - grsync\n    - i3\n    - lightdm\n    - nitrogen\n    - numix-icon-theme-circle\n    - picom\n    - polybar\n    - python3-i3ipc\n    - qt5ct\n    - rofi\n    - thunar\n    - ttf-bitstream-vera\n    - wmctrl\n    - x11-utils\n    - x11-xserver-utils\n    - x11vnc\n    - xbindkeys\n    - xbindkeys-config\n    - xfonts-75dpi\n    - xfonts-100dpi\n    - xfonts-utils\n  alsa:\n    - a2jmidid\n    - alsa-tools\n    - alsa-utils\n  jack:\n    - jack-capture\n    - jack-tools\n    - jackd\n    - jackd2\n    - libjack-jackd2-0\n    - libjack-jackd2-dev\n  pulseaudio:\n    - pavucontrol\n    - pulseaudio-module-jack\n  applications:\n    - aj-snapshot\n    - fmit\n    - helm\n    - hydrogen\n    - jaaa\n    - jack-keyboard\n    - jalv\n    - japa\n    - jconvolver\n    - ladspa-sdk\n    - libasound2-dev\n    - libaubio5\n    - libaubio-dev\n    - mpg123\n    - polyphone\n    - qmidiarp\n    - qmidinet\n    - sc3-plugins\n    - sc3-plugins-server\n    - sndio-tools\n    - sonic-visualiser\n    - sooperlooper\n    - sox\n    - supercollider\n    - vmpk\n    - wavpack\n    - zita-ajbridge\n    - zita-alsa-pcmi-utils\n    - zita-lrx\n    - zita-mu1\n    - zita-rev1\n  plugins:\n    - ams-lv2\n    - calf-plugins\n    - caps-lv2\n    - carla\n    - distrho-plugin-ports-vst\n    - guitarix\n    - ir.lv2\n    - lilv-utils\n    - lsp-plugins\n    - luftikus\n    - noise-repellent\n    - sherlock.lv2\n    - swh-lv2\n    - x42-plugins\n  terminal:\n    # - alacritty\n    - aria2\n    # - asciiquarium-transparent-git\n    - atool\n    - bash-completion\n    - bat\n    # - bottom\n    # - btop\n    - calibre\n    # - djvulibre\n    - elinks\n    # - eza\n    - fd\n    - figlet\n    - fontforge\n    - git-lfs\n    # - github-cli\n    # - gitui\n    - gource\n    - guake\n    # - gum\n    - highlight\n    - htop\n    - imagemagick\n    - jq\n    - jupyter-nbconvert\n    - kitty\n    # - kitty-shell-integration\n    - kitty-terminfo\n    - links\n    - lnav\n    - lynx\n    - mediainfo\n    - most\n    - mpv\n    - mupdf-tools\n    - ncdu\n    - neofetch\n    # - neovim-symlinks\n    - nvtop\n    - odt2txt\n    - openscad\n    # - perl-image-exiftool\n    - python3-pygments\n    - python3-ueberzug\n    # - python-pillow\n    - ranger\n    - ripgrep\n    # - ripgrep-all\n    - rsync\n    - rxvt-unicode\n    - smartmontools\n    # - termdown\n    - terminator\n    - terminology\n    - tilda\n    - transmission-cli\n    - tree\n    - v4l-utils\n    - w3m\n    - wget\n    - xterm\n    - yadm\n    - zsh\n  software_props:\n    - software-properties-common\n    - apt-transport-https\n    - gpgv\n  kernel:\n    - dkms\n    - linux-image-rt-amd64\n  base:\n    - autofs\n    - avahi-daemon\n    - bash-completion\n    - build-essential\n    - cargo\n    - cmake\n    - cmake-curses-gui\n    - curl\n    - debian-keyring\n    - erlang\n    - erlang-base\n    - erlang-dev\n    - erlang-tools\n    - exa\n    - fakeroot\n    - fonts-liberation\n    - fzf\n    - g++-10-multilib\n    - git\n    - git-flow\n    - git-lfs\n    - highlight\n    - htop\n    - hunspell\n    - iftop\n    - intltool\n    - iotop\n    - itstool\n    - laptop-mode-tools\n    - libblocksruntime0\n    - libbluray2\n    - libcurl4-openssl-dev\n    - libfaad2\n    - libfftw3-dev\n    - libgio3.0-cil-dev\n    - libgme0\n    - libgtkmm-2.4-dev\n    - libgtksourceview-3.0-common\n    - liblo-tools\n    - libncurses6\n    - libopus0\n    - libqt5concurrent5\n    - libqt5core5a\n    - libqt5gui5\n    - libqt5network5\n    - libqt5opengl5\n    - libqt5printsupport5\n    - libqt5svg5\n    - libqt5svg5-dev\n    - libqt5widgets5\n    - librtaudio6\n    - librtmidi5\n    - librtmidi-dev\n    - libsamplerate0\n    - libsamplerate0-dev\n    - libssl-dev\n    - libxcb-cursor-dev\n    - libxcb-keysyms1-dev\n    - libxcb-util-dev\n    - libxcb-xkb-dev\n    - libxkbcommon-dev\n    - libxkbcommon-x11-dev\n    - libzip4\n    - lnav\n    - lsof\n    - mlocate\n    - most\n    - net-tools\n    - nfs-common\n    - numlockx\n    - portaudio19-dev\n    - printer-driver-escpr\n    - python3-matplotlib\n    - python3-numpy\n    - python3-pyqt5.qtopengl\n    - python3-rdflib\n    - python3-scipy\n    - qt5-style-kvantum\n    - qtbase5-dev\n    - qttools5-dev-tools\n    - ranger\n    - rsync\n    - ruby-dev\n    - sudo\n    - terminator\n    - tmux\n    - tuned-gtk\n    - unrar-free\n    - unzip\n    - wakeonlan\n    - wkhtmltopdf\n    - wordnet\n    - xterm\n    - zsh\n",
      "path": "/vars/Debian/"
    },
    {
      "filename": "packages.yml",
      "content": "---\n\npackages:\n  utility:\n    - aria2\n    - gnome-keyring\n    - gnome-keyring-pam\n    - htop\n    - inxi\n    - neovim\n    - ranger\n    - systemd-timesyncd\n  ruby:\n    - cmake\n    - g++\n    - git\n    - libgit2-devel\n    - openssl-devel\n    - postgresql-devel\n    - ruby-devel\n    - rubygem-psych\n    - rubygems\n",
      "path": "/vars/AlmaLinux/"
    },
    {
      "filename": "main.yml",
      "content": "galaxy_info:\n  author: kewlfft\n  role_name: aur\n  description: Ansible module to use some Arch User Repository (AUR) helpers as well as makepkg.\n  license: GPL-3.0-or-later\n  min_ansible_version: 2.0\n\n  # https://galaxy.ansible.com/api/v1/platforms/\n  platforms:\n  - name: ArchLinux\n    versions:\n    - any\n\n  galaxy_tags:\n  - aur\n\ndependencies: []\n",
      "path": "/plugins/modules/aur/meta/"
    },
    {
      "filename": "main.yml",
      "content": "galaxy_info:\n  author: Shishqa\n  role_name: pkg_manager\n  description: Ansible module to use distro specific package managers\n  license: GPL-3.0-or-later\n  min_ansible_version: 2.0\n\n  # https://galaxy.ansible.com/api/v1/platforms/\n  platforms:\n  - name: ArchLinux\n    versions:\n    - any\n  - name: RedHat\n    versions:\n    - any\n  - name: Debian\n    versions:\n    - any\n\n  galaxy_tags:\n  - pkg_manager\n\ndependencies: []\n",
      "path": "/plugins/modules/pkg_manager/meta/"
    },
    {
      "filename": "main.yml",
      "content": "galaxy_info:\n  author: b08x\n  role_name: openai_chat\n  description: Ansible module for openai API\n  license: GPL-3.0-or-later\n  min_ansible_version: 2.0\n\n  # https://galaxy.ansible.com/api/v1/platforms/\n  platforms:\n  - name: ArchLinux\n    versions:\n    - any\n\n  galaxy_tags:\n  - openai_chat\n\ndependencies: []\n",
      "path": "/plugins/modules/openai_chat/meta/"
    },
    {
      "filename": "galaxy.yml",
      "content": "### REQUIRED\n# The namespace of the collection. This can be a company/brand/organization or product namespace under which all\n# content lives. May only contain alphanumeric lowercase characters and underscores. Namespaces cannot start with\n# underscores or numbers and cannot contain consecutive underscores\nnamespace: b08x\n\n# The name of the collection. Has the same character restrictions as 'namespace'\nname: syncopated\n\n# The version of the collection. Must be compatible with semantic versioning\nversion: 0.4.0\n\n# The path to the Markdown (.md) readme file. This path is relative to the root of the collection\nreadme: README.md\n\n# A list of the collection's content authors. Can be just the name or in the format 'Full Name <email> (url)\n# @nicks:irc/im.site#channel'\nauthors:\n  - Robert Pannick <rwpannick@gmail.com> (https://b08x.github.io)\n\n### OPTIONAL but strongly recommended\n# A short summary description of the collection\ndescription: A collection of roles to manage an Audio Production environment\n\n# Either a single license or a list of licenses for content inside of a collection. Ansible Galaxy currently only\n# accepts L(SPDX,https://spdx.org/licenses/) licenses. This key is mutually exclusive with 'license_file'\nlicense:\n  - GPL-2.0-or-later\n\n# The path to the license file for the collection. This path is relative to the root of the collection. This key is\n# mutually exclusive with 'license'\nlicense_file: \"\"\n\n# A list of tags you want to associate with the collection for indexing/searching. A tag name has the same character\n# requirements as 'namespace' and 'name'\ntags:\n  - linux-audio\n\n# Collections that this collection requires to be installed for it to be usable. The key of the dict is the\n# collection label 'namespace.name'. The value is a version range\n# L(specifiers,https://python-semanticversion.readthedocs.io/en/latest/#requirement-specification). Multiple version\n# range specifiers can be set and are separated by ','\ndependencies: {}\n\n# The URL of the originating SCM repository\nrepository: https://github.com/b08x/syncopated.git\n\n# The URL to any online docs\ndocumentation: https://b08x.github.io/syncopated/docs\n\n# The URL to the homepage of the collection/project\nhomepage: https://b08x.github.io/syncopated\n\n# The URL to the collection issue tracker\nissues: https://github.com/b08x/syncopated/issues\n\n# A list of file glob-like patterns used to filter any files or directories that should not be included in the build\n# artifact. A pattern is matched from the relative path of the file or directory of the collection directory. This\n# uses 'fnmatch' to match the files or directories. Some directories and files like 'galaxy.yml', '*.pyc', '*.retry',\n# and '.git' are always filtered. Mutually exclusive with 'manifest'\nbuild_ignore:\n  - \"*.mp4\"\n  - \"tmp/\"\n# A dict controlling use of manifest directives used in building the collection artifact. The key 'directives' is a\n# list of MANIFEST.in style\n# L(directives,https://packaging.python.org/en/latest/guides/using-manifest-in/#manifest-in-commands). The key\n# 'omit_default_directives' is a boolean that controls whether the default directives are used. Mutually exclusive\n# with 'build_ignore'\n# manifest: null\n",
      "path": "/"
    }
  ]
}
