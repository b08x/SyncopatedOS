---

- name: PipeWire Tasks
  debug:
    msg: "Starting Pipewire tasks"

# - name: Create folders for user config
#   shell: |
#     mkdir -pv pipewire
#
#     mkdir -pv wireplumber/{scripts,wireplumber.conf.d}
#   args:
#     chdir: "{{ user.home }}/.config"
#   become: False
#
# - name: Copy default PipeWire configuration files
#   copy:
#     src: "/usr/share/pipewire/"
#     dest: "{{ user.home }}/.config/pipewire/"
#     owner: "{{ user.name }}"
#     group: "{{ user.group }}"
#     remote_src: yes
#   notify: Restart PipeWire
#
# - name: Create custom JSON configuration for sound card
#   copy:
#     dest: "/home/{{ pipewire_user }}/.config/wireplumber/wireplumber.conf.d/51-disable-suspension.conf"
#     content: |
#       {
#         "monitor.alsa.rules": [
#           {
#             "matches": [
#               { "node.name": "~alsa_input.*" },
#               { "node.name": "~alsa_output.*" }
#             ],
#             "actions": {
#               "update-props": {
#                 "session.suspend-timeout-seconds": 0
#               }
#             }
#           }
#         ]
#       }
#     owner: "{{ pipewire_user }}"
#     group: "{{ pipewire_user }}"
#   notify: Restart WirePlumber
#
# # https://www.perplexity.ai/search/let-s-work-on-migrating-from-j-_TZudN6TQbS1inb0KNHW4g
# #
# # https://docs.pipewire.org/page_module_filter_chain.html
#
# - name: Enable and start PipeWire services
#   systemd:
#     name: "{{ item }}"
#     state: started
#     enabled: yes
#     scope: user
#   loop:
#     - pipewire
#     - pipewire-pulse
#     - wireplumber

#
#
# - block:
#     - name: Stop pipewire service
#       systemd:
#         name: "{{ item }}"
#         state: stopped
#         enabled: no
#         scope: user
#       with_items:
#         - wireplumber.service
#         - pipewire-pulse.service
#         - pipewire-pulse.socket
#         - pipewire.service
#         - pipewire-session-manager.service
#         - pipewire.socket
#       environment:
#         XDG_RUNTIME_DIR: "/run/user/1000"
#       become: False
#       register: servicestat
#       failed_when: (servicestat.state is defined and servicestat.state != 'stopped') or (servicestat.msg is defined and not 'Could not find the requested service' in servicestat.msg and servicestat.rc != 0)
#       ignore_errors: "{{ ansible_check_mode }}"
#
#     # - name: debug
#     #   debug:
#     #     msg: "{{ servicestat.results[0] }}"
#
#     - name: Remove pipewire packages
#       pacman:
#         name: "{{ packages.pipewire }}"
#         state: absent
#         force: yes
#         extra_args: --noconfirm
#       register: uninstall
#       failed_when: uninstall.packages | length > 0
#       tags: ['packages']
#
#     - name: Install pipewire and wireplumber libs
#       aur:
#         use: paru
#         name: "{{ item }}"
#         state: present
#       loop:
#         - libpipewire
#         - libwireplumber
#       become: False
#       ignore_errors: "{{ ansible_check_mode }}"
#       tags: ['packages']
#
#   when:
#     - initialInstall|default(false)|bool == True
#     - audio == 'jack'
#
#
#
# - name: Stop pipewire service
#   systemd:
#     name: "{{ item }}"
#     state: stopped
#     enabled: no
#     scope: user
#   with_items:
#     - wireplumber.service
#     - pipewire-pulse.service
#     - pipewire-pulse.socket
#     - pipewire.service
#     - pipewire-session-manager.service
#     - pipewire.socket
#   environment:
#     XDG_RUNTIME_DIR: "/run/user/1000"
#   become: False
#   register: servicestat
#   failed_when: (servicestat.state is defined and servicestat.state != 'stopped') or (servicestat.msg is defined and not 'Could not find the requested service' in servicestat.msg and servicestat.rc != 0)
#   ignore_errors: "{{ ansible_check_mode }}"
