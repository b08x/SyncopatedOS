---
# tasks file for desktop
- name: Collect only selected facts
  setup:
    filter:
      - 'ansible_processor'

- name: Starting desktop tasks
  debug:
    msg: "Starting desktop tasks"
  register: expected_value

# - name: test expected_value
#   debug:
#     msg: "{{ expected_value }}"
#   tags: ['testing']

- block:
    - name: Install desktop packages
      shell: "{{ package_install_command }} {{ item }}"
      with_items:
        - "{{ packages.desktop|join(' ') }}"

    - name: Install browser packages
      shell: "{{ package_install_command }} {{ item }}"
      with_items:
        - "{{ packages.browser|join(' ') }}"

    - name: Install development packages
      shell: "{{ package_install_command }} {{ item }}"
      with_items:
        - "{{ packages.development|join(' ') }}"

    - name: Install doc packages
      shell: "{{ package_install_command }} {{ item }}"
      with_items:
        - "{{ packages.docs|join(' ') }}"

    - name: Install python packages
      shell: "{{ package_install_command }} {{ item }}"
      with_items:
        - "{{ packages.python|join(' ') }}"

    - name: Install utility packages
      shell: "{{ package_install_command }} {{ item }}"
      with_items:
        - "{{ packages.utils|join(' ') }}"

  become: False
  tags: ['packages']

- name: Ensure desktop directories exist
  file:
    dest: "{{ desktop_directory_default_location }}/{{ item.dest }}"
    state: directory
    owner: "{{ item.owner | default(desktop_directory_default_owner) }}"
    group: "{{ item.group | default(desktop_directory_default_group) }}"
    mode: "{{ item.mode | default(desktop_directory_default_mode) }}"
    recurse: "{{ item.recurse | default(desktop_directory_default_recurse) }}"
  with_items: "{{ desktop_directory_definitions }}"
  check_mode: no

- import_tasks:
    file: autologin.yml
  tags: ['autologin']
  when: autologin|default(false)|bool == True

- name: Import xorg role
  import_role:
    name: xorg
  tags: ['xorg']
  when: desktop.wm == 'i3'

- name: Import i3 role
  import_role:
    name: i3
  tags: ['i3']
  when: desktop.wm == 'i3'

- name: Import sway role
  import_role:
    name: sway
  tags: ['sway']
  when: desktop.wm == 'sway'

- name: Import gnome role
  import_role:
    name: gnome
  tags: ['gnome']
  when: desktop.wm == 'gnome'

# if this file does not exist, lightdm will fail to start
- name: Set dmrc to selected window manager
  copy:
    content: |
      [Desktop]
      Session={{ desktop.wm }}
    dest: "{{ user.home }}/.dmrc"
    owner: "{{ user.name }}"
    mode: '0644'

- import_tasks:
    file: sxhkd.yml
  tags: ['sxhkd', 'keybindings']

- import_tasks:
    file: inputRemapper.yml
  tags: ['inputRemapper', 'keybindings']

- import_tasks:
    file: menu.yml
  tags: ['menu']

#TODO: Add dunst and picom xdg autostart desktop entries
- name: Set dunst config
  template:
    src: "etc/skel/.config/dunst/dunstrc.j2"
    dest: "{{ user.home }}/.config/dunst/dunstrc"
    owner: root
    group: root
    mode: "0644"
    backup: yes
  tags: ["profile", "dunst"]

- name: Set picom config
  template:
    src: "etc/skel/.config/picom/picom.conf.j2"
    dest: "{{ user.home }}/.config/picom/picom.conf"
    owner: root
    group: root
    mode: "0644"
    backup: yes
  tags: ["profile", "picom"]

- name: Ensure folders for barrier configs exist
  file:
    path: "{{ item }}"
    state: directory
    owner: "{{ user.name }}"
    group: "{{ user.group }}"
  with_items:
    - "{{ user.home }}/.config/Debauchee"
    - "{{ user.home }}/.config/autostart"
  tags: ['barrier']

- name: Set barrier server config
  copy:
    src: home/.config/Debauchee/soundbot.conf
    dest: "{{ user.home }}/.config/Debauchee/soundbot.conf"
    owner: "{{ user.name }}"
    group: "{{ user.group }}"
    mode: '0644'
    backup: yes
  when: desktop.barrier.server is defined
  tags: ['barrier']

- name: Set barrier server autostart
  template:
    src: "home/.config/autostart/barrier-server.desktop.j2"
    dest: "{{ user.home }}/.config/autostart/barrier-server.desktop"
    owner: "{{ user.name }}"
    group: "{{ user.group }}"
    mode: '0644'
    backup: True
  when: desktop.barrier.server is defined
  tags: ['barrier']

- name: Set barrier client autostart
  template:
    src: "home/.config/autostart/barrier-client.desktop.j2"
    dest: "{{ user.home }}/.config/autostart/barrier-client.desktop"
    owner: "{{ user.name }}"
    group: "{{ user.group }}"
    mode: '0644'
    backup: True
  when: desktop.barrier.client is defined
  tags: ['barrier']

- name: Install Thunar actions
  copy:
    src: "files/etc/xdg/Thunar/{{ item }}"
    dest: "/etc/xdg/Thunar/{{ item }}"
    mode: '0644'
  with_items:
    - accels.scm
    - uca.xml
  tags: ['thunar']

- name: Set Thunar as default for opening directories
  shell: xdg-mime default thunar.desktop inode/directory
  become_user: "{{ user.name }}"
  tags: ['thunar']

- name: Set xdg autostart applications
  synchronize:
    src: etc/xdg/autostart/
    dest: /etc/xdg/autostart/
    recursive: yes
    mode: push
    delete: yes
    checksum: yes
    perms: no
    rsync_opts:
      - "--update"
      - "--progress"
      - "--itemize-changes"
      - "--exclude='*.*~'"
      - "--omit-dir-times"
      - "--chown=root:root"
      - "--backup"
      - "--suffix={{ suffix }}"

- name: Update desktop database
  command: bash -lc "update-desktop-database"
