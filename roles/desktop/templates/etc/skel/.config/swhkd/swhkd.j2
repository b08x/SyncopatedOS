# Import another configuration file.
# NOTE: the path provided must be absolute and not relative such as `~`.
# include /home/YourUserName/.config/swhkd/swhkdrc

# ignore alt + print # globally ignore a key binding
Menu
  ~/.config/rofi/scripts/launcher_t1.sh

super + d
  ~/.config/rofi/scripts/launcher_t4.sh

super + F5
  {{ desktop.terminal }} --class "htop" -e htop

F12
  search_web.sh

shift + F12
  search_devdocs.sh

XF86Search ; {d,w}
  {search_devdocs.sh,search_web.sh}

alt + Tab
  rofi -no-lazy-grab -show window -modi run,drun,window

super + Home
  {{ desktop.browser }}

super + shift + Home
{% if desktop.browser == 'google-chrome-stable' %}
  {{ desktop.browser }} --new-window %U
{% elseif desktop.browser == 'firefox' %}
  {{ desktop.browser }} --private-window
{% endif %}

super + KP_Enter
  {{ desktop.terminal }} -e ranger

super + shift + KP_Enter
  thunar

XF86MonBrightnessDown
  brightnessctl -d intel_backlight s 10%-

XF86MonBrightnessUp
  brightnessctl -d intel_backlight s +10%

XF86AudioRecord
  {{ wm.terminal }} --class "notepad" -e /usr/local/bin/scriber.rb

super + XF86AudioRecord
  {{ desktop.terminal }} --class "notepad" -e /usr/local/bin/scriber.rb --new-file

super + o ; {g,a,k,v}
	{terminator,alacritty,jack-keyboard,vmpk}

# terminal
super + ReTuRn # case insensitive
	alacritty

super + shift + enter # enter = return
	kitty

# file manager
super + shift + f
	pcmanfm

# web-browser
super + w
	firefox

// # bspwm
// super + {_,shift + }{h,j,k,l}
// 	bspc node -{f,s} {west,south,north,east}
//
// super + ctrl + alt + {Left\
// ,Down\
// ,Up\
// ,Right}
//   n=10; \
//   { d1=left;   d2=right;  dx=-$n; dy=0;   \
//   , d1=bottom; d2=top;    dx=0;   dy=$n;  \
//   , d1=top;    d2=bottom; dx=0;   dy=-$n; \
//   , d1=right;  d2=left;   dx=$n;  dy=0;   \
//   } \
//   bspc node --resize $d1 $dx $dy || bspc node --resize $d2 $dx $dy
//
// super + {\,, .}
//   bspc node -f {next.local,prev.local}

# screenshot
print
	scrot

any + print # any represent at least one of the valid modifiers
	scrot -s

# Append with @ to run on key-release.
@super + shift + f
	pcmanfm

# Append with ~ to emit the hotkey after the command is triggered. Aka, don't swallow the hotkey.
~super + shift + f
	pcmanfm

#TDOD: create 'midi mode'
# Print
#   sendmidi dev 'Midi Through Port-0' panic
# super + m
# 	# commands starting with @ are internal commands.
# 	# internal commands can be combined with normal commands with '&&'.
# 	# '@enter' pushes a mode into the mode stack and starts listening only the
# 	# key bindings defined in that mode
# 	@enter music && echo "music" > ~/.config/waybar/swhkd-mode
#
# mode music # use the mode statement to define a mode
# q
# 	# '@escape' pops the current mode out of the mode stack
# 	# the default mode is 'normal mode', which is always on the bottom of the mode
# 	# stack and can never be escaped
# 	@escape && echo "normal" > ~/.config/waybar/swhkd-mode
# {n, p, space, r, z, y}
# 	mpc {next, prev, toggle, repeat, random, single}
# endmode # use endmode if you want to set more key bindings for normal mode
#
# # mode options are declared after the mode name
# # swallow: don't emit any event through uinput
# # oneoff: automatically escape a mode when a keybinding defined in it is evoked
# mode option_demo swallow oneoff
# a
# 	echo 0
# b
# 	@escape # escaping in a 'oneoff' mode pops two modes out of the mode stack.
# endmode
