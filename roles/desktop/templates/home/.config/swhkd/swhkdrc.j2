# Import another configuration file.
# NOTE: the path provided must be absolute and not relative such as `~`.
# include /home/{{ user.name }}/.config/swhkd/swhkd-{{wm }}
# include /home/{{ user.name }}/.config/swhkd/swhkd-user

{% ifwm == 'i3' %}
Super + x
  xkill

Shift + Print
  maim -s | xclip -selection clipboard -t image/png

{% elifwm == 'sway' %}

{% endif %}

Alt + Shift + kp1
  tilda -g ~/.config/tilda/config_0

Alt + Shift + kp2
  tilda -g ~/.config/tilda/config_1

Super + d
  ~/.config/rofi/scripts/launcher_t4.sh

Super + f5
  {{terminal }} --class "htop" -e htop

f12
  search_web.sh

Shift + f12
  search_devdocs.sh

Alt + tab
  rofi -no-lazy-grab -show window -modi run,drun,window

Super + home
  {{browser }}

super + shift + home
{% ifbrowser == 'google-chrome-stable' %}
  {{browser }} --new-window %U
{% elifbrowser == 'firefox' %}
  {{browser }} --private-window
{% endif %}

Super + kpenter
  {{terminal }} -e ranger

Super + Shift + kpenter
  thunar

xf86monbrightnessdown
  brightnessctl -d intel_backlight s 10%-

xf86monbrightnessup
  brightnessctl -d intel_backlight s +10%

Super + Control + {g,a,k,v}
	{terminator,alacritty,jack-keyboard,vmpk}

Super + ReTuRn # case insensitive
	alacritty

Super + Shift + enter # enter = return
	kitty

# # bspwm
# super + {_,shift + }{h,j,k,l}
# 	bspc node -{f,s} {west,south,north,east}#
# super + ctrl + alt + {Left\
# ,Down\
# ,Up\
# ,Right}
#   n=10; \
#   { d1=left;   d2=right;  dx=-$n; dy=0;   \
#   , d1=bottom; d2=top;    dx=0;   dy=$n;  \
#   , d1=top;    d2=bottom; dx=0;   dy=-$n; \
#   , d1=right;  d2=left;   dx=$n;  dy=0;   \
#   } \
#   bspc node --resize $d1 $dx $dy || bspc node --resize $d2 $dx $dy#
# super + {\,, .}
#   bspc node -f {next.local,prev.local}

# screenshot
# print
#	scrot

#any + print # any represent at least one of the valid modifiers
#	scrot -s


#TDOD: create 'midi mode'
# Print
#   sendmidi dev 'Midi Through Port-0' panic
# super + m
# 	# commands starting with @ are internal commands.
# 	# internal commands can be combined with normal commands with '&&'.
# 	# '@enter' pushes a mode into the mode stack and starts listening only the
# 	# key bindings defined in that mode
# 	@enter music && echo "music" > ~/.config/waybar/swhkd-mode
#
# mode music # use the mode statement to define a mode
# q
# 	# '@escape' pops the current mode out of the mode stack
# 	# the default mode is 'normal mode', which is always on the bottom of the mode
# 	# stack and can never be escaped
# 	@escape && echo "normal" > ~/.config/waybar/swhkd-mode
# {n, p, space, r, z, y}
# 	mpc {next, prev, toggle, repeat, random, single}
# endmode # use endmode if you want to set more key bindings for normal mode
#
# # mode options are declared after the mode name
# # swallow: don't emit any event through uinput
# # oneoff: automatically escape a mode when a keybinding defined in it is evoked
# mode option_demo swallow oneoff
# a
# 	echo 0
# b
# 	@escape # escaping in a 'oneoff' mode pops two modes out of the mode stack.
# endmode
