---
- name: Build and Deploy Packages
  hosts: localhost
  become: yes
  tasks:
    - name: Set timestamp
      set_fact:
        timestampe: "{{ lookup('pipe', 'date +%Y%m%d%H%M') }}"

    - name: Define colors
      set_fact:
        ALL_OFF: "\e[1;0m"
        BBOLD: "\e[1;1m"
        BLUE: "{{ BBOLD }}\e[1;34m"
        GREEN: "{{ BBOLD }}\e[1;32m"
        RED: "{{ BBOLD }}\e[1;31m"
        YELLOW: "{{ BBOLD }}\e[1;33m"

    - name: Define say function
      set_fact:
        say: |
          echo -e "{{ color }}{{ statement }}{{ ALL_OFF }}"

    - name: Set locations
      set_fact:
        SRCDEST: "{{ lookup('env', 'HOME') }}/Packages/sources"
        REPOSITORY_LOCAL: "{{ lookup('env', 'HOME') }}/Repository"
        WORKSPACE: "{{ lookup('env', 'HOME') }}/Workspace"
        PKGBUILDS: "{{ WORKSPACE }}/syncopated/pkgrr/pkgbuilds"

    - name: Unmount chroot
      command: "mountpoint -q {{ CHROOT }}"
      register: chroot_mounted
      changed_when: false
      failed_when: false
      ignore_errors: yes

    - name: Unmount chroot if mounted
      command: "sudo umount {{ CHROOT }}"
      when: chroot_mounted.stdout == "0"

    - name: Mount chroot
      command: "sudo mount --mkdir -t tmpfs -o defaults,size=8G tmpfs {{ CHROOT }}"

    - name: Set configs
      command: >
        if [ -L "{{ lookup('env', 'HOME') }}/.makepkg.conf" ]; then
          ln -sf {{ makepkg_conf }} "{{ lookup('env', 'HOME') }}/.makepkg.conf"
        else
          rm -f "{{ lookup('env', 'HOME') }}/.makepkg.conf" || exit
          ln -s {{ makepkg_conf }} "{{ lookup('env', 'HOME') }}/.makepkg.conf"
        fi
      args:
        executable: /bin/bash

    - name: Create chroot
      command: "mkarchroot -C {{ pacman_conf }} -M {{ makepkg_conf }} {{ CHROOT }}/root base-devel"

    - name: Update chroot
      command: >
        arch-nspawn -C {{ pacman_conf }} -M {{ makepkg_conf }} {{ CHROOT }}/root pacman -Scc --noconfirm;
        arch-nspawn -C {{ pacman_conf }} -M {{ makepkg_conf }} {{ CHROOT }}/root pacman -Sy
      args:
        executable: /bin/bash

    - name: Build packages
      command: "cd {{ PKGBUILDS }}/{{ pkgname }} && makechrootpkg -n -c -r {{ CHROOT }}"
      register: build_result
      changed_when: false
      failed_when: "build_result.rc not in [0]"

    - name: Cleanup
      command: >
        if [[ ! {{ DEBUG|default(false) }} ]]; then
          rm -f "{{ lookup('env', 'HOME') }}/.makepkg.conf";
          sudo umount {{ CHROOT }};
          rm -rf {{ SRCDEST }} && mkdir -p {{ SRCDEST }};
          rm -f "{{ lookup('env', 'HOME') }}/.makepkg.conf";
        fi
      args:
        executable: /bin/bash

    - name: Fetch Git updates
      git:
        repo: "{{ WORKSPACE }}/syncopated/pkgrr"
        update: yes

    # Add the rest of the tasks for user input and package deployment as needed.
