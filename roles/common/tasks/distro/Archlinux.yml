---

- name: Symlink /etc/os-release to /etc/system-release
  file:
    src: /etc/os-release
    dest: /etc/system-release
    state: link

- name: Import syncopated repo key
  community.general.pacman_key:
    id: 36A6ECD355DB42B296C0CEE2157CA2FC56ECC96A
    url: http://syncopated.hopto.org/syncopated.gpg
    state: present
  register: syncopated_keys
  tags: ['repo']

- name: Import archaudio repo key
  community.general.pacman_key:
    id: 762AE5DB2B38786364BD81C4B9141BCC62D38EE5
    url: https://arch.osamc.de/proaudio/osamc.gpg
    state: present
  register: archaudio_keys
  tags: ['repo']

- name: Set pacman.conf config
  template:
    src: etc/pacman.conf.j2
    dest: /etc/pacman.conf
    mode: '0644'
    backup: True
  tags: ['repo', 'pacman']

- name: Update cache
  pacman:
    update_cache: True
    upgrade: False
  when: syncopated_keys.changed or archaudio_keys.changed
  tags: ['repo']

- name: Install some utility packages
  pacman:
    name: "{{ utility.packages }}"
    state: present
    extra_args: --noconfirm
  tags: ['packages']
  vars:
    utility:
      packages:
        - aria2
        - barrier
        - fd
        - firewalld
        - gnome-keyring
        - htop
        - inetutils
        - inxi
        - jc
        - lnav
        - most
        - neovim
        - net-tools
        - nodejs
        - npm
        - ranger
        - ripgrep-all
        - zoxide

- name: Set makepkg to use aria2
  template:
    src: etc/makepkg.conf.j2
    dest: /etc/makepkg.conf
    mode: '0644'
    backup: True
  tags: ['repo']

- name: Check if paru installed
  stat:
    path: /usr/bin/paru
  register: paru
  tags: ['packages']

- name: Install paru if not installed
  block:
    - name: Install paru
      pacman:
        name: paru-bin
        state: present
        force: yes
        extra_args: --noconfirm
      register: paru_package
      until: "paru_package is not failed"
      retries: 2
      delay: 10

  rescue:
    - name: Clone paru
      git:
        repo: "https://aur.archlinux.org/paru.git"
        dest: "/tmp/paru"
        accept_hostkey: yes
        update: yes
        force: no
      become: False

    - name: Make and install paru
      shell: "makepkg -si --noconfirm --needed"
      args:
        chdir: "/tmp/paru"
      become: False

    - name: clean and update package cache
      shell: "paru -Sc --noconfirm && paru -Syy"
      become: False

  when: not paru.stat.exists
  tags: ['packages']

- name: Adjust paru config
  template:
    src: etc/paru.conf.j2
    dest: /etc/paru.conf
    mode: '0644'
    backup: True
  ignore_errors: "{{ ansible_check_mode }}"
  tags: ['repo']

- name: Check if mirrors have been updated within the past 24h
  shell: "fd --changed-within 24hours --search-path=/etc/pacman.d"
  register: mirror_status
  tags: ['repo', 'mirrors']

- name: Print mirror file status
  debug:
    msg: "{{ mirror_status }}"
  when:
    - ( mirror_status.stdout_lines | length < 0 or update_mirrors is defined )
    - debugging is defined
  tags: ['repo', 'mirrors']

- name: Update mirrors
  shell: |
    reflector --download-timeout 5 --protocol https \
    --latest 20 --sort rate --score 10 --fastest 8 \
    --save /etc/pacman.d/mirrorlist
  when: ( mirror_status.stdout_lines | length < 0 or update_mirrors is defined )
  register: mirror_update
  ignore_errors: True
  tags: ['repo', 'mirrors']

- name: Update cache
  pacman:
    update_cache: True
    upgrade: False
  when: mirror_update.changed
  tags: ['repo', 'mirrors']


# - name: Current packages installed
#   shell: |
#     paru -Q |awk '{print $1}'
#   become: False
#   register: arch_installed_packages
#   check_mode: no
#   tags: ['packages']

# - name: Set packages to be installed
#   set_fact:
#     arch_packages: "{{ packages|difference(arch_installed_packages.stdout) }}"
#   check_mode: no
#   tags: ['packages']

# - name: install packages
#   aur:
#     use: paru
#     name: "{{ arch_packages }}"
#     state: present
#   become: False
#   when: arch_installed_packages | length > 0
