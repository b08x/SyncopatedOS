#!/usr/bin/env bash

export XDG_DESKTOP_SESSION="i3"
export XDG_CURRENT_DESKTOP="i3"
export XDG_CONFIG_HOME="$HOME/.config"

if [ -d /usr/share/fonts/75dpi ]; then
	xset +fp /usr/share/fonts/75dpi
fi

if [ -d /usr/share/fonts/100dpi ]; then
	xset +fp /usr/share/fonts/100dpi
fi

xset s off
xset -dpms
xset -b

numlockx on

if test -f "$HOME/.asound.state"; then
	alsactl restore -f "$HOME/.asound.state"
fi

if [ ! -d /tmp/reaper ]; then
	mkdir -pv /tmp/reaper
fi

if [ -x "$(command -v autorandr)" ]; then
	autorandr -l "$(autorandr --detected)"
	sleep 0.5
else
	echo "autorandr not found"
fi

#note: "~"" does not expand in quotes
#if [ -f ~/.fehbg ]; then
#  ~/.fehbg
#else
#  feh --recursive --bg-fill --randomize $BACKGROUNDS/*
#fi

{% if ansible_hostname == 'ninjabot' %}
feh --bg-fill ~/.config/i3/wallpaper.png
{% else %}
nitrogen --restore &
{% endif %}

pactl -- set-sink-volume 0 55%

{% if x.autostart != 'default' %}
{% for program in x.autostart %}
{{ program }}
{% endfor %}
{% endif %}

export SSH_AUTH_SOCK=$XDG_RUNTIME_DIR/gcr/ssh

export GPG_TTY="$TTY"

systemctl --user import-environment GPG_TTY SSH_AUTH_SOCK

dbus-update-activation-environment --all

if ! pgrep -a "keyring" >/dev/null; then
	echo "starting gnome-keyring from .xprofile???"
	eval "$(/usr/bin/gnome-keyring-daemon --replace --daemonize --components=pkcs11,secrets,ssh,gpg)"
fi

export GNOME_KEYRING_CONTROL GNOME_KEYRING_PID GPG_AGENT_INFO SSH_AUTH_SOCK

#if ! pgrep -a "keyring" >/dev/null; then
#  echo "starting gnome-keyring from .xprofile???"
#	eval "$(/usr/bin/gnome-keyring-daemon --replace --daemonize --components=pkcs11,secrets,ssh,gpg)"
#fi

# echo "finished with .xprofile"
