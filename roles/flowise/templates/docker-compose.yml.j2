services:
  flowise:
    image: {{ flowise.image }}
    container_name: {{ flowise.container_name }}
    restart: unless-stopped
    environment:
{% for item in lookup('ansible.builtin.dict', env.vars) %}
      - {{ item.key|upper }}={{ item.value }}
{% endfor %}
    ports:
{% for port in flowise.ports %}
      - "{{ port.host }}:{{ port.container }}"
{% endfor %}
    volumes:
{% for volume in flowise.volumes %}
      - {{ volume.host }}:{{ volume.container }}
{% endfor %}
{% if compose.entrypoint %}
    entrypoint: {{ compose.entrypoint }}
{% endif %}
    networks:
      - flowise-network
  chromadb:
    image: ghcr.io/chroma-core/chroma:latest
    container_name: flowise-chroma
    volumes:
      - flowise-chroma-data-volume:/chroma/chroma
    environment:
      PUID: 1000
      PGID: 1000
      IS_PERSISTENT: TRUE
    ports:
      - "9001:9001"
    networks:
      - flowise-network
  redis-stack:
    image: redis/redis-stack:latest
    container_name: flowise-redis-stack
    restart: unless-stopped
    environment:
      PUID: 1000
      PGID: 1000
    volumes:
      - flowise-redis-data-volume:/data
    ports:
      - "6379:6379"
      - "8081:8081"
      - "8001:8001"
    networks:
      - flowise-network
  postgresql:
    image: ankane/pgvector
    container_name: flowise-postgresql
    restart: unless-stopped
    environment:
      PUID: 1000
      PGID: 1000
      POSTGRES_HOST_AUTH_METHOD: "trust"
      POSTGRES_DB: langfuse
      POSTGRES_USER: postgres
    ports:
      - "5432:5432"
    volumes:
      - flowise-postgres-data-volume:/var/lib/postgresql/data:rw
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-postgres}"]
      interval: 5s
      retries: 3
    networks:
      - flowise-network
  langfuse-server:
    image: ghcr.io/langfuse/langfuse:latest
    container_name: langfuse
    restart: unless-stopped
    depends_on:
      - postgresql
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - DATABASE_URL=postgresql://postgres:postgres@postgresql:5432/langfuse
      - NEXTAUTH_SECRET=mysecret
      - SALT=mysalt
      - NEXTAUTH_URL=http://{{ inventory_hostname }}.syncopated.net:3000
      - TELEMETRY_ENABLED=${TELEMETRY_ENABLED:-true}
      - NEXT_PUBLIC_SIGN_UP_DISABLED=${NEXT_PUBLIC_SIGN_UP_DISABLED:-false}
      - LANGFUSE_ENABLE_EXPERIMENTAL_FEATURES=${LANGFUSE_ENABLE_EXPERIMENTAL_FEATURES:-false}
    networks:
      - flowise-network


networks:
  flowise-network:
    driver: bridge

volumes:
  data:
  flowise-chroma-data-volume:
    name: flowise-chroma-data
    driver: local
  flowise-postgres-data-volume:
    name: flowise-pgvector-data
    driver: local
  flowise-redis-data-volume:
    name: flowise-redis-data
    driver: local
