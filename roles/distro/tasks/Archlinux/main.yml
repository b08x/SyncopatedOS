---
#setup repositories

- name: Load a variable file based on the OS type, or a default if not found. the file.
  ansible.builtin.include_vars: "{{ lookup('ansible.builtin.first_found', params) }}"
  vars:
    params:
      files:
        - '{{ansible_distribution}}.yml'
        - '{{ansible_os_family}}.yml'
        - default.yaml
      paths:
        - 'vars'

- name: show expected_value
  debug:
    var: packages

# - name: packages
#   set_fact:
#     packages: "{{ packages }}"
#
- name: Import syncopated repo key
  community.general.pacman_key:
    id: DF7A6571781ACB52FA9CF8C1EB4DFE46828DFEDD
    url: http://bender.syncopated.net/syncopated/repo/syncopated.gpg
    state: present
  register: syncopated_keys
  when: repos.syncopated|default(false)|bool
  tags: ["repo"]

- name: Import archaudio repo key
  community.general.pacman_key:
    id: 762AE5DB2B38786364BD81C4B9141BCC62D38EE5
    url: https://arch.osamc.de/proaudio/osamc.gpg
    state: present
  register: archaudio_keys
  tags: ["repo"]

- name: Set pacman.conf config
  template:
    src: etc/pacman.conf.j2
    dest: /etc/pacman.conf
    mode: "0644"
    backup: True
  tags: ["repo", "pacman"]

- name: Update cache
  pacman:
    update_cache: True
    upgrade: False
  #   when: syncopated_keys.changed or archaudio_keys.changed
  when: archaudio_keys.changed
  tags: ["repo"]

- import_tasks:
    file: chaotic.yml
  when: repos.chaotic is defined
  tags: ["repo", "chaotic"]

# - name: Install utility packages
#   pacman:
#     name: "{{ packages.utility }}"
#     state: present
#     extra_args: --noconfirm --overwrite '*'
#   tags: ["packages"]

- name: Set makepkg to use aria2
  template:
    src: etc/makepkg.conf.j2
    dest: /etc/makepkg.conf
    mode: "0644"
    backup: True
  tags: ["repo"]

- import_tasks:
    file: paru.yml
  tags: ["paru"]
  # check_mode: yes

- name: Check if mirrors have been updated within the past 24h
  shell: "fd --changed-within 24hours --search-path=/etc/pacman.d"
  register: mirror_status
  tags: ["mirrors"]

- name: Print mirror file status
  debug:
    msg: "{{ mirror_status }}"
  when:
    - ( mirror_status.stdout_lines | length < 0 or update_mirrors is defined )
    - debugging is defined
  tags: ["mirrors"]

- name: Update mirrors
  shell: |
    reflector --download-timeout 5 --protocol https \
    --latest 20 --sort rate --score 10 --fastest 8 \
    --save /etc/pacman.d/mirrorlist
  when: ( mirror_status.stdout_lines | length < 0 or update_mirrors is defined )
  register: mirror_update
  ignore_errors: True
  tags: ["mirrors"]

- name: Update cache
  pacman:
    update_cache: True
    upgrade: False
  when: mirror_update.changed
  tags: ["repo", "mirrors"]

# - name: install packages
#   aur:
#     use: paru
#     name: "{{ arch_packages }}"
#     state: present
#   become: False
#   when: arch_installed_packages | length > 0
